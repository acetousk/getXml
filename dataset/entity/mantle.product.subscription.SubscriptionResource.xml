
<!-- Entity Name: mantle.product.subscription.SubscriptionResource sql table: SUBSCRIPTION_RESOURCE --><entity entity-name="SubscriptionResource" package="mantle.product.subscription" short-alias="subscriptionResources" has-dependents="true">
    <field name="subscriptionResourceId" type="id" is-pk="true"/>
    <field name="parentResourceId" type="id"/>
    <field name="description" type="text-medium"/>
    <field name="contentLocation" type="text-medium"/>
    <field name="remoteResourceId" type="text-medium"/>
    <field name="initServiceName" type="text-medium">
        <description><![CDATA[Service called when a new subscription to a resource begins. Must implement the
                mantle.product.SubscriptionServices.init#SubscriptionResource service interface.]]></description></field>
    <field name="renewServiceName" type="text-medium">
        <description><![CDATA[Service called when an existing subscription is renewed. Can be empty or do nothing, using
                revoke after expire instead. Must implement the mantle.product.SubscriptionServices.renew#SubscriptionResource
                service interface.]]></description></field>
    <field name="revokeAccessTime" type="number-integer"/>
    <field name="revokeAccessTimeUomId" type="id"/>
    <field name="revokeAccessServiceName" type="text-medium">
        <description><![CDATA[Service called when inactive subscription goes past revokeAccessTime. Must implement the
                mantle.product.SubscriptionServices.revoke#SubscriptionResourceAccess service interface.]]></description></field>
    <field name="restoreAccessServiceName" type="text-medium">
        <description><![CDATA[Service called on special events (manual or otherwise) to resore access. Must implement the
                mantle.product.SubscriptionServices.restore#SubscriptionResourceAccess service interface.]]></description></field>
    <field name="destroyTime" type="number-integer"/>
    <field name="destroyTimeUomId" type="id"/>
    <field name="destroyServiceName" type="text-medium">
        <description><![CDATA[Service called when inactive subscription goes past destroyTime. Must implement the
                mantle.product.SubscriptionServices.destroy#SubscriptionResource service interface.]]></description></field>
    <relationship type="one" title="Parent" related="mantle.product.subscription.SubscriptionResource" short-alias="parent">
        <key-map field-name="parentResourceId" related="subscriptionResourceId"/></relationship>
    <relationship type="many" related="mantle.product.subscription.ProductSubscriptionResource" short-alias="products">
        <key-map field-name="subscriptionResourceId"/></relationship>
    <master>
        <detail relationship="parent"/>
        <detail relationship="products">
            <detail relationship="product"/></detail>
    </master>
    <field name="lastUpdatedStamp" type="date-time"/>
    <relationship related="mantle.product.subscription.Subscription" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="subscriptionResourceId" related="subscriptionResourceId"/></relationship>

</entity>