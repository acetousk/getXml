
<!-- Entity Name: moqui.service.job.ServiceJob sql table: SERVICE_JOB --><entity entity-name="ServiceJob" package="moqui.service.job" use="configuration" cache="true" has-dependents="true">
    <description><![CDATA[For ad-hoc (explicitly run) or scheduled service jobs. If cronExpression is null the job will only
            be run ad-hoc, when explicitly called using ServiceCallJob. If a topic is specified results will be sent to
            the topic (can be configured using a NotificationTopic record) as a NotificationMessage to the user that
            called the job explicitly (if applicable) and to users associated with ServiceJobUser records.]]></description>
    <field name="jobName" type="text-short" is-pk="true"/>
    <field name="description" type="text-medium"/>
    <field name="serviceName" type="text-medium"/>
    <field name="transactionTimeout" type="number-integer"/>
    <field name="topic" type="text-medium">
        <description><![CDATA[On completion send a notification to this topic]]></description></field>
    <field name="localOnly" type="text-indicator">
        <description><![CDATA[If Y this will be run local only. By default runs on any
            server in a cluster listening for async distributed services (if an async distributed executor is configured).]]></description></field>
    <field name="cronExpression" type="text-short">
        <description><![CDATA[An extended cron expression like Unix crontab but with extended syntax options (L, W, etc) similar to Quartz Scheduler. See:

            http://cron-parser.com
            http://www.quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/tutorial-lesson-06.html]]></description></field>
    <field name="fromDate" type="date-time">
        <description><![CDATA[Only run scheduled after this date/time. Ignored for ad-hoc/explicit runs.]]></description></field>
    <field name="thruDate" type="date-time">
        <description><![CDATA[Only run scheduled before this date/time. Ignored for ad-hoc/explicit runs.]]></description></field>
    <field name="repeatCount" type="number-integer">
        <description><![CDATA[If specified only run this many times. Must specify
            a cronExpression for the job to repeat. When this count is reached thruDate will be set to now and paused set to Y.
            Ignored for ad-hoc/explicit runs.]]></description></field>
    <field name="paused" type="text-indicator" enable-audit-log="update">
        <description><![CDATA[If Y this job is inactive and won't be
            run on a schedule even if cronExpression is not null. Ignored for ad-hoc/explicit runs.]]></description></field>
    <field name="expireLockTime" type="number-integer">
        <description><![CDATA[Ignore lock and run anyway after this many
            minutes. This should generally be much greater than the longest time the service is expected to run. This is
            the mechanism for recovering jobs after a run failed in a way that did not clean up the ServiceJobRunLock
            record. Defaults to 24 hours (1440 minutes) to make sure jobs get recovered.]]></description></field>
    <field name="minRetryTime" type="number-integer">
        <description><![CDATA[Minimum time between retries after an error (based on most recent ServiceJobRun record), in minutes]]></description></field>
    <field name="priority" type="number-integer">
        <description><![CDATA[Job execution priority, lower numbers run first among jobs that need to be run regardless of scheduled start time]]></description></field>
    <relationship type="one-nofk" related="moqui.security.user.NotificationTopic"/>
    <relationship type="many" related="moqui.service.job.ServiceJobParameter" short-alias="parameters"/>
    <relationship type="many" related="moqui.service.job.ServiceJobUser" short-alias="users"/>
    <field name="lastUpdatedStamp" type="date-time"/>
    <relationship related="moqui.service.job.ServiceJobRun" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="jobName" related="jobName"/></relationship>
    <relationship related="moqui.service.job.ServiceJobRunLock" type="one-nofk" is-auto-reverse="true" mutable="true">
        <key-map field-name="jobName" related="jobName"/></relationship>

</entity>