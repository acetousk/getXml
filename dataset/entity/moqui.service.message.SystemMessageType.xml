
<!-- Entity Name: moqui.service.message.SystemMessageType sql table: SYSTEM_MESSAGE_TYPE --><entity entity-name="SystemMessageType" package="moqui.service.message" use="configuration" cache="true" has-dependents="true">
    <field name="systemMessageTypeId" type="id" is-pk="true"/>
    <field name="description" type="text-medium"/>
    <field name="produceServiceName" type="text-medium">
        <description><![CDATA[Not used in automated processing, but useful
            for documentation and tools in some cases.]]></description></field>
    <field name="consumeServiceName" type="text-medium">
        <description><![CDATA[The service to call after a message is
            received to consume it. Should implement the org.moqui.impl.SystemMessageServices.consume#SystemMessage
            interface (just a systemMessageId in-parameter). Used by the consume#ReceivedSystemMessage service.]]></description></field>
    <field name="produceAckServiceName" type="text-medium">
        <description><![CDATA[The service to call to produce an async
            acknowledgement of a message. Should implement the org.moqui.impl.SystemMessageServices.produce#AckSystemMessage.
            Once the message is produced should call the org.moqui.impl.SystemMessageServices.queue#SystemMessage service.]]></description></field>
    <field name="produceAckOnConsumed" type="text-indicator"/>
    <field name="sendServiceName" type="text-medium">
        <description><![CDATA[The service to call to send queued messages.
            Should implement the org.moqui.impl.SystemMessageServices.send#SystemMessage interface (just a
            systemMessageId in-parameter and remoteMessageId out-parameter). Used by the send#ProducedSystemMessage service,
            and for that service must be specified or will result in an error.]]></description></field>
    <field name="receiveServiceName" type="text-medium">
        <description><![CDATA[The service to call to save a received message.
            Should implement the org.moqui.impl.SystemMessageServices.receive#SystemMessage interface.
            If not specified receive#IncomingSystemMessage just saves the message directly.
            When applicable, used by the send service as the service on the remote server to call to receive the message.]]></description></field>
    <field name="contentType" type="text-short"/>
    <field name="receivePath" type="text-medium">
        <description><![CDATA[Where to look for files on a remote server, syntax is implementation specific]]></description></field>
    <field name="receiveFilePattern" type="text-medium">
        <description><![CDATA[Regular expression to match filenames in receivePath (optional)]]></description></field>
    <field name="receiveResponseEnumId" type="id"/>
    <field name="receiveMovePath" type="text-medium">
        <description><![CDATA[After successful receive move file to this path if receiveResponseEnumId = MsgRrMove]]></description></field>
    <field name="sendPath" type="text-medium">
        <description><![CDATA[Where to put files on a remote server, syntax is implementation
            specific and may include both path and a filename pattern]]></description></field>
    <relationship type="one" title="MessageReceiveResponse" related="moqui.basic.Enumeration" short-alias="receiveResponseEnum">
        <key-map field-name="receiveResponseEnumId"/></relationship>
    <seed-data>
        <moqui.basic.EnumerationType description="Message Receive Response" enumTypeId="MessageReceiveResponse"/>
        <moqui.basic.Enumeration enumId="MsgRrNone" description="None" enumTypeId="MessageReceiveResponse"/>
        <moqui.basic.Enumeration enumId="MsgRrDelete" description="Delete" enumTypeId="MessageReceiveResponse"/>
        <moqui.basic.Enumeration enumId="MsgRrMove" description="Move" enumTypeId="MessageReceiveResponse"/>
    </seed-data>
    <field name="lastUpdatedStamp" type="date-time"/>
    <relationship related="mantle.account.method.PaymentMethodFileType" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageTypeId" related="systemMessageTypeId"/></relationship>
    <relationship related="moqui.service.message.SystemMessage" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageTypeId" related="systemMessageTypeId"/></relationship>
    <relationship related="moqui.service.message.SystemMessageRemote" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageTypeId" related="systemMessageTypeId"/></relationship>

</entity>