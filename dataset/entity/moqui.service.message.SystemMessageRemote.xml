
<!-- Entity Name: moqui.service.message.SystemMessageRemote sql table: SYSTEM_MESSAGE_REMOTE --><entity entity-name="SystemMessageRemote" package="moqui.service.message" use="configuration" cache="true" has-dependents="true">
    <field name="systemMessageRemoteId" type="id" is-pk="true"/>
    <field name="description" type="text-medium"/>
    <field name="sendUrl" type="text-medium" enable-audit-log="update"/>
    <field name="receiveUrl" type="text-medium" enable-audit-log="update"/>
    <field name="remoteCharset" type="text-short"/>
    <field name="remoteAttributes" type="text-indicator">
        <description><![CDATA[May be useful for other transports, for SFTP servers
            that do not support setting file attributes after put/upload set to N]]></description></field>
    <field name="sendServiceName" type="text-medium">
        <description><![CDATA[Override for SystemMessageType.sendServiceName]]></description></field>
    <field name="username" type="text-medium" enable-audit-log="update">
        <description><![CDATA[Username for basic auth when sending to the remote system.
            This user needs permission to run the remote service or whatever on the remote system receives the message.

            Note: For a Moqui remote server the user needs authz for the org.moqui.impl.SystemMessageServices.receive#IncomingSystemMessage
            service, ie the user should be in a group that has authz for the SystemMessageServices ArtifactGroup such as the
            SYSMSG_RECEIVE user group (see SecurityTypeData.xml).]]></description></field>
    <field name="password" type="text-medium" encrypt="true" enable-audit-log="update">
        <description><![CDATA[Username for basic auth when sending to the remote system.]]></description></field>
    <field name="publicKey" type="text-long" enable-audit-log="update">
        <description><![CDATA[Public Key for key based authentication, generally RSA PEM format]]></description></field>
    <field name="privateKey" type="text-long" encrypt="true" enable-audit-log="update">
        <description><![CDATA[Private Key for key based authentication, generally RSA PEM PKCS #8 format like OpenSSH]]></description></field>
    <field name="remotePublicKey" type="text-long" enable-audit-log="update">
        <description><![CDATA[Remote System's Public Key for decryption, signature validation, etc; generally RSA PEM or X.509 Certificate format]]></description></field>
    <field name="sharedSecret" type="text-medium" encrypt="true" enable-audit-log="update">
        <description><![CDATA[Shared secret for auth on receive and/or sign on send.]]></description></field>
    <field name="sendSharedSecret" type="text-medium" encrypt="true" enable-audit-log="update">
        <description><![CDATA[Shared secret for auth on send if different from secret used to authorize on receive.]]></description></field>
    <field name="authHeaderName" type="text-medium"/>
    <field name="messageAuthEnumId" type="id"/>
    <field name="sendAuthEnumId" type="id">
        <description><![CDATA[If send and receive auth mechanisms are different specify send auth method here]]></description></field>
    <field name="systemMessageTypeId" type="id">
        <description><![CDATA[Optional. May be used when this remote is for one
            type of message.]]></description></field>
    <field name="internalId" type="text-short" enable-audit-log="update">
        <description><![CDATA[Sender (outgoing) or receiver (incoming) ID (EDI: in ISA06/08; OAGIS in ApplicationArea.Sender/Receiver.ID)]]></description></field>
    <field name="internalIdType" type="text-short"/>
    <field name="internalAppCode" type="text-medium">
        <description><![CDATA[Application code (EDI: in GS02/03; OAGIS: in
            ApplicationArea.Sender/Receiver elements, split among sub-elements)]]></description></field>
    <field name="remoteId" type="text-short" enable-audit-log="update">
        <description><![CDATA[Sender (incoming) or receiver (outgoing) ID (EDI: in ISA06/08; OAGIS in ApplicationArea.Sender/Receiver.ID)]]></description></field>
    <field name="remoteIdType" type="text-short"/>
    <field name="remoteAppCode" type="text-medium">
        <description><![CDATA[Application code (EDI: in GS02/03; OAGIS: in
            ApplicationArea.Sender/Receiver elements, split among sub-elements)]]></description></field>
    <field name="ackRequested" type="text-short">
        <description><![CDATA[Request acknowledgement? Possible values dependent on
            message standard.]]></description></field>
    <field name="usageCode" type="text-short">
        <description><![CDATA[Used for production versus test/etc. Possible values
            dependent on message standard.]]></description></field>
    <field name="segmentTerminator" type="text-indicator"/>
    <field name="elementSeparator" type="text-indicator"/>
    <field name="componentDelimiter" type="text-indicator"/>
    <field name="escapeCharacter" type="text-indicator"/>
    <field name="preAuthMessageRemoteId" type="id">
        <description><![CDATA[Remote system related to this remote system but for pre-auth purposes, like a separate single sign on server]]></description></field>
    <relationship type="one" title="SystemMessageAuthType" related="moqui.basic.Enumeration" short-alias="messageAuthEnum">
        <key-map field-name="messageAuthEnumId"/></relationship>
    <relationship type="one" title="SendMessageAuthType" related="moqui.basic.Enumeration" short-alias="sendAuthEnum">
        <key-map field-name="sendAuthEnumId"/></relationship>
    <relationship type="one" related="moqui.service.message.SystemMessageType" short-alias="systemMessageType"/>
    <relationship type="one" title="PreAuth" related="moqui.service.message.SystemMessageRemote" short-alias="preAuthMessageRemote">
        <key-map field-name="preAuthMessageRemoteId"/></relationship>
    <seed-data>
        <moqui.basic.EnumerationType description="System Message Auth Type" enumTypeId="SystemMessageAuthType"/>
        <moqui.basic.Enumeration enumId="SmatNone" description="No Auth" enumTypeId="SystemMessageAuthType"/>
        <moqui.basic.Enumeration enumId="SmatLogin" description="User Login (basic, api_key, etc)" enumTypeId="SystemMessageAuthType"/>
        <moqui.basic.Enumeration enumId="SmatHmacSha256" description="HMAC SHA-256" enumTypeId="SystemMessageAuthType"/>
        <moqui.basic.Enumeration enumId="SmatHmacSha256Timestamp" description="HMAC SHA-256 with Timestamp" enumTypeId="SystemMessageAuthType"/>
    </seed-data>
    <field name="productStoreId" type="id"/>
    <relationship type="one" related="mantle.product.store.ProductStore"/>
    <field name="lastUpdatedStamp" type="date-time"/>
    <relationship related="mantle.account.invoice.Invoice" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="mantle.account.method.PaymentGatewayConfig" type="many" is-auto-reverse="true" mutable="true" title="SystemMessageRemote">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="mantle.account.method.PaymentMethodFileType" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="mantle.order.OrderHeader" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="mantle.order.return.ReturnHeader" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="mantle.shipment.Shipment" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="moqui.service.message.SystemMessage" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>
    <relationship related="moqui.service.message.SystemMessageEnumMap" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="systemMessageRemoteId" related="systemMessageRemoteId"/></relationship>

</entity>