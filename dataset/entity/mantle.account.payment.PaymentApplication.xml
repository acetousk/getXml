
<!-- Entity Name: mantle.account.payment.PaymentApplication sql table: PAYMENT_APPLICATION --><entity entity-name="PaymentApplication" package="mantle.account.payment" short-alias="paymentApplications" cache="never" has-dependents="true">
    <description><![CDATA[Payment application to settle payments and invoices. Can be used for multiple scenarios using different fields:

            1. Apply a Payment (paymentId) to an Invoice (invoiceId)
            2. Apply a Payment (paymentId) such as a refund to another Payment (toPaymentId) such as an invoice payment
            3. Apply an Invoice (invoiceId) such as a Credit Memo payable to another Invoice (toInvoiceId) such as a Sales/Purchase receivable

            In all cases the two opposing records should have reverse from/to party IDs.

            To constrain to these three scenarios if toPaymentId is set paymentId should always be set, and if toInvoiceId is set invoiceId should always be set.]]></description>
    <field name="paymentApplicationId" type="id" is-pk="true"/>
    <field name="paymentId" type="id"/>
    <field name="invoiceId" type="id"/>
    <field name="billingAccountId" type="id"/>
    <field name="overrideGlAccountId" type="id">
        <description><![CDATA[If specified payment is applied directly against this GL account instead of the mapped AR/AP account]]></description></field>
    <field name="toPaymentId" type="id">
        <description><![CDATA[Use to apply a Payment to another Payment like a payment that is a return of a mistaken or over-payment]]></description></field>
    <field name="toInvoiceId" type="id">
        <description><![CDATA[Use to apply an Invoice to another Invoice like a Credit Memo payable to a Sales/Purchase receivable]]></description></field>
    <field name="taxAuthGeoId" type="id"/>
    <field name="amountApplied" type="currency-amount" enable-audit-log="update"/>
    <field name="amountOriginallyApplied" type="currency-amount"/>
    <field name="appliedDate" type="date-time" enable-audit-log="update"/>
    <field name="acctgTransResultEnumId" type="id"/>
    <relationship type="one" related="mantle.account.payment.Payment" short-alias="payment">
        <key-map field-name="paymentId"/></relationship>
    <relationship type="one" related="mantle.account.invoice.Invoice" short-alias="invoice">
        <key-map field-name="invoiceId"/></relationship>
    <relationship type="one-nofk" related="mantle.account.invoice.InvoiceItem" short-alias="invoiceItem">
        <key-map field-name="invoiceId"/>
        <key-map field-name="invoiceItemSeqId"/>
    </relationship>
    <relationship type="one" related="mantle.account.billing.BillingAccount" short-alias="billingAccount">
        <key-map field-name="billingAccountId"/></relationship>
    <relationship type="one" title="To" related="mantle.account.payment.Payment" short-alias="toPayment">
        <key-map field-name="toPaymentId"/></relationship>
    <relationship type="one" title="To" related="mantle.account.invoice.Invoice" short-alias="toInvoice">
        <key-map field-name="toInvoiceId"/></relationship>
    <relationship type="one" title="TaxAuth" related="moqui.basic.Geo" short-alias="taxAuthGeo">
        <key-map field-name="taxAuthGeoId"/></relationship>
    <relationship type="one" title="Override" related="mantle.ledger.account.GlAccount" short-alias="overrideGlAccount">
        <key-map field-name="overrideGlAccountId"/></relationship>
    <relationship type="one" title="AcctgTransResult" related="moqui.basic.Enumeration" short-alias="acctgTransResultEnum">
        <key-map field-name="acctgTransResultEnumId"/></relationship>
    <field name="lastUpdatedStamp" type="date-time"/>
    <relationship related="mantle.ledger.transaction.AcctgTrans" type="many" is-auto-reverse="true" mutable="true">
        <key-map field-name="paymentApplicationId" related="paymentApplicationId"/></relationship>

<!-- seca <seca id="PaymentApplicationGlPost" service="create#mantle.account.payment.PaymentApplication" when="post-service" run-on-error="false">
    <actions>
        <service-call name="mantle.ledger.PaymentAutoPostServices.post#PaymentApplication" in-map="context"/></actions></seca>-->
<!-- seca <seca id="PaymentApplicationRevertGlPost" service="update#mantle.account.payment.PaymentApplication" when="post-service" run-on-error="false">
    <condition>
        <expression><![CDATA[amountApplied == 0.0]]></expression></condition>
    <actions>
        <service-call name="mantle.ledger.PaymentAutoPostServices.revert#PaymentApplicationPost" in-map="context"/></actions>
</seca>-->
<!-- eeca org.moqui.impl.entity.EntityEcaRule@22e48667-->
<!-- eeca org.moqui.impl.entity.EntityEcaRule@6fc4b05c-->
</entity>