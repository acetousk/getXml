
<!-- Entity Name: moqui.security.EntityFilter sql table: ENTITY_FILTER --><entity entity-name="EntityFilter" package="moqui.security" use="configuration">
    <field name="entityFilterId" type="id" is-pk="true"/>
    <field name="entityFilterSetId" type="id"/>
    <field name="entityName" type="text-medium">
        <description><![CDATA[The name of the entity to filter when queried. May be
            queried directly or as part of a view-entity.]]></description></field>
    <field name="filterMap" type="text-long">
        <description><![CDATA[A Groovy expression that evaluates to a Map that will be added to queries to filter/constrain visible data.
            Values can be constants or variables that come from user context (ec.user.context) or execution context
            (ec.context). It is up to code to set values for use by these filters.

            If the value evaluates to a Collection the default comparison operator is IN, otherwise default is EQUALS.
            If a Collection is empty results in a false constraint, unless using a NOT* comparison operator.]]></description></field>
    <field name="comparisonEnumId" type="id"/>
    <field name="joinOr" type="text-indicator">
        <description><![CDATA[If Y then OR filterMap entries, default AND.]]></description></field>
    <relationship type="one" related="moqui.security.EntityFilterSet" short-alias="filterSet"/>
    <relationship type="one" title="ComparisonOperator" related="moqui.basic.Enumeration" short-alias="comparison">
        <key-map field-name="comparisonEnumId"/></relationship>
    <field name="lastUpdatedStamp" type="date-time"/>

</entity>