<!-- Screen Location component://webroot/screen/webroot/rest.xml --><screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd" require-authentication="false" track-artifact-hit="false" default-menu-include="false"><transition name="login" method="post" require-session-token="false"><parameter name="username" required="true"/><parameter name="password" required="true"/><parameter name="code"/><actions><set field="loggedIn" from="ec.user.loginUser(username, password)"/><if condition="ec.message.hasError()"><script><![CDATA[ec.web.sendJsonResponse([loggedIn:false])]]></script></if><if condition="ec.web.sessionAttributes.moquiAuthcFactorRequired"><then><if condition="code"><then><service-call name="org.moqui.impl.UserServices.validate#ExternalUserAuthcCode" in-map="[code:code]" out-map="validateOut"/><if condition="validateOut.verified"><then><script><![CDATA[ec.user.internalLoginUser(validateOut.username)]]></script><return/></then><else><message type="danger" public="true"><![CDATA[Authentication code is not valid]]></message></else></if></then></if><service-call name="org.moqui.impl.UserServices.get#ExternalUserAuthcFactorInfo" out-map="factorInfoOut"/><script><![CDATA[ec.web.sendJsonResponse(factorInfoOut)]]></script></then><else><script><![CDATA[ec.web.sendJsonResponse([loggedIn:loggedIn])]]></script></else></if></actions><default-response type="none"/></transition><transition name="sendOtp" method="post"><parameter name="factorId" required="true"/><service-call name="org.moqui.impl.UserServices.send#ExternalAuthcCode" in-map="[factorId:factorId]" web-send-json-response="true" out-map="context" multi="parameter"/><default-response type="none"/></transition><transition name="verifyOtp" method="post"><parameter name="code" required="true"/><actions><service-call name="org.moqui.impl.UserServices.validate#ExternalUserAuthcCode" in-map="[code:code]" out-map="validateOut"/><if condition="validateOut.verified"><then><set field="loggedIn" from="ec.user.internalLoginUser(validateOut.username)"/><script><![CDATA[ec.web.sendJsonResponse([loggedIn:loggedIn])]]></script></then><else><script><![CDATA[ec.web.sendError(403, ec.l10n.localize("Authentication code is not valid"))]]></script></else></if></actions><default-response type="none"/></transition><transition name="logout" begin-transaction="false"><actions><script><![CDATA[if (ec.user.username) { ec.user.logoutUser(); ec.web.sendTextResponse("successful") }
            else { ec.web.sendTextResponse("no_user") }]]></script></actions><default-response type="none"/></transition><transition name="e1" read-only="true"><actions><script><![CDATA[ec.web.handleEntityRestCall(sri.screenUrlInfo.extraPathNameList, false)]]></script></actions><default-response type="none"/></transition><transition name="m1" read-only="true"><actions><script><![CDATA[ec.web.handleEntityRestCall(sri.screenUrlInfo.extraPathNameList, true)]]></script></actions><default-response type="none"/></transition><transition name="v1" read-only="true"><actions><script><![CDATA[ec.web.handleEntityRestCall(sri.screenUrlInfo.extraPathNameList, false)]]></script></actions><default-response type="none"/></transition><transition name="entity.json" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleEntityRestSchema(ec, sri.screenUrlInfo.extraPathNameList,
                sri.buildUrl("entity.json").getUrl(), sri.buildUrl("e1").getUrl(), sri.buildUrl("entity.json").getUrl(), false)]]></script></actions><default-response type="none"/></transition><transition name="entity.raml" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleEntityRestRaml(ec, sri.screenUrlInfo.extraPathNameList,
                sri.buildUrl("e1").getUrl(), sri.buildUrl("entity.json").getUrl(), false)]]></script></actions><default-response type="none"/></transition><transition name="entity.swagger" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleEntityRestSwagger(ec, sri.screenUrlInfo.extraPathNameList, "/rest/e1", false)]]></script></actions><default-response type="none"/></transition><transition name="master.json" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleEntityRestSchema(ec, sri.screenUrlInfo.extraPathNameList,
                sri.buildUrl("master.json").getUrl(), sri.buildUrl("m1").getUrl(), sri.buildUrl("master.json").getUrl(), true)]]></script></actions><default-response type="none"/></transition><transition name="master.raml" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleEntityRestRaml(ec, sri.screenUrlInfo.extraPathNameList,
                sri.buildUrl("m1").getUrl(), sri.buildUrl("master.raml").getUrl(), true)]]></script></actions><default-response type="none"/></transition><transition name="master.swagger" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleEntityRestSwagger(ec, sri.screenUrlInfo.extraPathNameList, "/rest/m1", true)]]></script></actions><default-response type="none"/></transition><transition name="s1" read-only="true"><actions><script><![CDATA[ec.web.handleServiceRestCall(sri.screenUrlInfo.extraPathNameList)]]></script></actions><default-response type="none"/></transition><transition name="service.swagger" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleServiceRestSwagger(ec, sri.screenUrlInfo.extraPathNameList, "/rest/s1")]]></script></actions><default-response type="none"/></transition><transition name="service.raml" read-only="true" method="get"><actions><script><![CDATA[org.moqui.impl.util.RestSchemaUtil.handleServiceRestRaml(ec, sri.screenUrlInfo.extraPathNameList, sri.buildUrl("s1").getUrl())]]></script></actions><default-response type="none"/></transition><transition name="sm" read-only="true" require-session-token="false" begin-transaction="false"><actions><script><![CDATA[ec.web.handleSystemMessage(sri.screenUrlInfo.extraPathNameList)]]></script></actions><default-response type="none"/></transition><widgets/></screen>