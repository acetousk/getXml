<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Supplier/EditSupplier.xml Transition Name getContactMechPurposesByType--><transition name="getContactMechPurposesByType"><parameter name="partyId" required="true"/><parameter name="partyIdTypeEnumId"/><parameter name="partyContentId"/><parameter name="contactMechTypeEnumId"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--transition actions--><entity-find entity-name="mantle.party.contact.ContactMechPurpose" list="cmpList"><econdition field-name="contactMechTypeEnumId" or-null="true"/><order-by field-name="description"/></entity-find><script><![CDATA[def outList = []
                for (cmp in cmpList) outList.add([value:cmp.contactMechPurposeId, label:cmp.description])
                ec.web.sendJsonResponse(outList)]]></script></actions></transition>