<!--Transition Screen Location component://tools/screen/Tools/StatusFlows.xml Transition Name actions--><transition name="actions"><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--actions--><if condition="statusTypeId || statusFlowId"><entity-find entity-name="moqui.basic.StatusFlowTransitionFromAndTo" list="transitionList"><econdition field-name="fromStatusTypeId" from="statusTypeId" ignore-if-empty="true"/><econdition field-name="statusFlowId" ignore-if-empty="true"/><order-by field-name="transitionSequence,fromSequenceNum"/></entity-find><set field="statusIdSet" from="new HashSet(transitionList*.statusId + transitionList*.toStatusId)"/><entity-find entity-name="moqui.basic.StatusItem" list="statusItemList"><econdition field-name="statusId" operator="in" from="statusIdSet"/><order-by field-name="sequenceNum"/></entity-find><order-map-list list="statusItemList"><order-by field-name="sequenceNum"/></order-map-list><script><![CDATA[def mermaidBuilder = new StringBuilder("stateDiagram-v2\n")
                for (statusItem in statusItemList) {
                    mermaidBuilder.append("    ${statusItem.statusId}: ${statusItem.description}")
                    if (statusItem.sequenceNum) mermaidBuilder.append(" (").append(statusItem.sequenceNum).append(")")
                    mermaidBuilder.append("\n")
                }
                for (transition in transitionList) {
                    mermaidBuilder.append("    ${transition.statusId} --> ${transition.toStatusId}: ${transition.transitionName}")
                    if (transition.transitionSequence) mermaidBuilder.append(" (").append(transition.transitionSequence).append(")")
                    mermaidBuilder.append("\n")
                }
                mermaidText = mermaidBuilder.toString()]]></script></if></actions></transition>