<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Accounting/Budget/BudgetAccountsEntry.xml Transition Name getGlAccountList--><transition name="getGlAccountList"><parameter name="budgetId" from="budgetId ?: budgetId_0" required="true"/><parameter name="organizationPartyId"/><parameter name="onlyPostingAllowed"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--transition actions--><entity-find-one entity-name="mantle.ledger.account.GlAccount" value-field="glAccount"><field-map field-name="glAccountId" from="term"/></entity-find-one><if condition="glAccount"><then><set field="glaList" from="[glAccount]"/></then><else><entity-find entity-name="mantle.ledger.account.GlAccountAndOrganization" list="glaList" limit="20"><econdition field-name="organizationPartyId" ignore-if-empty="true"/><econdition field-name="disallowPosting" value="N" or-null="true" ignore="onlyPostingAllowed != 'true'"/><econditions combine="or"><econdition field-name="glAccountId" operator="like" value="%${term}%" ignore-case="true"/><econdition field-name="accountCode" operator="like" value="%${term}%" ignore-case="true"/><econdition field-name="accountName" operator="like" value="%${term}%" ignore-case="true"/></econditions><select-field field-name="glAccountId,accountCode,accountName"/><order-by field-name="accountCode"/></entity-find></else></if><set field="glAccountCodeMask" from="ec.user.getPreference('GlAccountCodeMask')"/><set field="accountCodeFormatter" from="masker(glAccountCodeMask, '0')"/><script><![CDATA[def outList = []
                for (gla in glaList) {
                    Map glaMap = gla.getMap()
                    // GlAccountNameTemplate uses accountCodeFormatter if present so no need for explicit mask
                    outList.add([value:gla.glAccountId, label:ec.resource.expand('GlAccountNameTemplate','',glaMap)])
                }
                ec.web.sendJsonResponse(outList)]]></script></actions></transition>