<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Accounting/TimePeriod/FindTimePeriod.xml Transition Name getTimePeriodList--><transition name="getTimePeriodList"><parameter name="partyId"/><parameter name="timePeriodTypeId"/><parameter name="term"/><parameter name="partyId"/><parameter name="timePeriodTypeId"/><parameter name="periodPurposeEnumId"/><parameter name="pastOnly"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--transition actions--><set field="pageIndex" from="pageIndex ?: 0"/><set field="pageSize" from="pageSize ?: 20"/><set field="term" from="term ?: ''"/><if condition="timePeriodTypeId"><set field="timePeriodTypeId_op" value="in"/></if><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod"><field-map field-name="timePeriodId" from="term"/></entity-find-one><if condition="timePeriod != null"><then><set field="timePeriodList" from="[timePeriod]"/></then><else><entity-find entity-name="mantle.party.time.TimePeriodAndType" list="timePeriodList"><search-form-inputs default-order-by="-thruDate,-timePeriodTypeId"/><econditions combine="or"><econdition field-name="timePeriodId" operator="like" value="%${term}%" ignore-case="true"/><econdition field-name="periodName" operator="like" value="%${term}%" ignore-case="true"/></econditions><econdition field-name="fromDate" operator="less" from="ec.user.nowTimestamp" ignore="pastOnly != 'true'"/><select-field field-name="timePeriodId,periodName"/></entity-find></else></if><script><![CDATA[def outList = []
                for (timePeriod in timePeriodList) outList.add([value:timePeriod.timePeriodId, label:timePeriod.periodName])
                ec.web.sendJsonResponse([options:outList, pageSize:pageSize, count:(timePeriodListCount?:timePeriodList.size())])]]></script></actions></transition>