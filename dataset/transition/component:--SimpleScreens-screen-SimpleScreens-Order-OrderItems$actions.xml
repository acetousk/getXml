<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Order/OrderItems.xml Transition Name actions--><transition name="actions"><parameter name="orderId" required="true"/><parameter name="orderPartSeqId"/><parameter name="pageIndex"/><parameter name="pageSize"/><parameter name="productId" required="true"/><parameter name="quantity"/><parameter name="priceUomId"/><parameter name="pricePurposeEnumId"/><parameter name="productStoreId"/><parameter name="vendorPartyId"/><parameter name="customerPartyId"/><parameter name="orderId"/><parameter name="orderPartSeqId"/><parameter name="priceFormat"/><parameter name="term"/><parameter name="productFeatureIds"/><parameter name="productTypeEnumId"/><parameter name="productClassEnumId"/><parameter name="productCategoryIds"/><parameter name="assetTypeEnumId"/><parameter name="assetClassEnumId"/><parameter name="indexName"/><parameter name="documentType"/><parameter name="pageIndex"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--actions--><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><if condition="orderPartSeqId"><entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/></if><if condition="orderPart != null"><entity-find-count entity-name="mantle.party.PartyRole" count-field="isCustomerInternalOrg"><econdition field-name="partyId" from="orderPart.customerPartyId"/><econdition field-name="roleTypeId" value="OrgInternal"/></entity-find-count><entity-find-count entity-name="mantle.party.PartyRole" count-field="isVendorInternalOrg"><econdition field-name="partyId" from="orderPart.vendorPartyId"/><econdition field-name="roleTypeId" value="OrgInternal"/></entity-find-count></if><entity-find entity-name="mantle.order.OrderPart" list="orderPartList"><econdition field-name="orderId"/><order-by field-name="orderPartSeqId"/></entity-find><set field="editableStatusIds" from="new HashSet(['OrderBeingChanged', 'OrderOpen', 'OrderRequested',                 'OrderProposed', 'OrderPlaced', 'OrderHold', 'OrderProcessing', 'OrderWishList', 'OrderGiftRegistry', 'OrderAutoReorder'])"/><set field="orderEditable" from="editableStatusIds.contains(orderHeader.statusId)"/><set field="partEditable" from="orderPart != null ? editableStatusIds.contains(orderPart.statusId) : null"/><set field="pageSize" from="pageSize ?: '10'"/><entity-find entity-name="mantle.order.OrderItem" list="orderItemList"><search-form-inputs default-order-by="orderPartSeqId,orderItemSeqId" skip-fields="orderId"/><econdition field-name="orderId"/><econdition field-name="parentItemSeqId" operator="is-null"/></entity-find><set field="topItemSeqIds" from="orderItemList*.orderItemSeqId"/><if condition="topItemSeqIds"><entity-find entity-name="mantle.order.OrderItem" list="childOrderItemList"><econdition field-name="orderId"/><econdition field-name="parentItemSeqId" operator="in" from="topItemSeqIds"/><order-by field-name="orderItemSeqId"/></entity-find><script><![CDATA[// NOTE: must use orderItemList.size() on each iteration as EntityList size will change with child items added
                for (int oiIdx = 0; oiIdx < orderItemList.size(); oiIdx++) {
                    Map orderItem = (Map) orderItemList.get(oiIdx)
                    String orderItemSeqId = orderItem.orderItemSeqId
                    List childList = childOrderItemList.findAll({ orderItemSeqId.equals(it.parentItemSeqId) })
                    for (int cIdx = 0; cIdx < childList.size(); cIdx++) {
                        Map childItem = (Map) childList.get(cIdx)
                        oiIdx++
                        orderItemList.add(oiIdx, childItem)
                    }
                }]]></script></if></actions></transition>