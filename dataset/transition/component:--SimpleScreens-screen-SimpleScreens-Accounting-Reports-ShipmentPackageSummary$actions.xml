<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Accounting/Reports/ShipmentPackageSummary.xml Transition Name actions--><transition name="actions"><parameter name="term"/><parameter name="roleTypeId"/><parameter name="indexName"/><parameter name="documentType"/><parameter name="partyTypeEnumId"/><parameter name="includeDisabled"/><parameter name="restrictActiveOrg"/><parameter name="pageIndex"/><parameter name="term"/><parameter name="facilityId"/><parameter name="locationTypeEnumId"/><parameter name="term"/><parameter name="productFeatureIds"/><parameter name="productTypeEnumId"/><parameter name="productClassEnumId"/><parameter name="productCategoryIds"/><parameter name="assetTypeEnumId"/><parameter name="assetClassEnumId"/><parameter name="indexName"/><parameter name="documentType"/><parameter name="pageIndex"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--actions--><if condition="!dateRange_period && !dateRange_from"><set field="dateRange_period" from="dateRange_period ?: 'week'"/><set field="dateRange_poffset" from="dateRange_poffset ?: '-1'"/></if><set field="rangeList" from="ec.user.getPeriodRange('dateRange', context)"/><set field="dateRangeFrom" from="rangeList[0]"/><set field="dateRangeThru" from="rangeList[1] ?: ec.user.nowTimestamp"/><service-call name="org.moqui.impl.BasicServices.find#EnumerationByParent" out-map="outgoingTypeOut" in-map="[parentEnumId:'ShpTpOutgoing']"/><set field="outShipmentTypeSet" from="outgoingTypeOut.enumIdSet"/><service-call name="org.moqui.impl.BasicServices.find#EnumerationByParent" out-map="incomingTypeOut" in-map="[parentEnumId:'ShpTpIncoming']"/><set field="inShipmentTypeSet" from="incomingTypeOut.enumIdSet"/><if condition="!statusId"><set field="statusId" value="ShipPacked,ShipShipped,ShipDelivered"/></if><set field="requireParameters" from="fromOrToPartyId || originOrDestFacilityId ? 'false' : 'true'"/></actions></transition>