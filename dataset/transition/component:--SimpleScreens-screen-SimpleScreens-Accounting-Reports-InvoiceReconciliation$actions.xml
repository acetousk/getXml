<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Accounting/Reports/InvoiceReconciliation.xml Transition Name actions--><transition name="actions"><parameter name="term"/><parameter name="partyId"/><parameter name="timePeriodTypeId"/><parameter name="periodPurposeEnumId"/><parameter name="pastOnly"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--actions--><set field="invoiceType" from="invoiceType ?: 'Receivable'"/><set field="statusIdList" from="invoiceType == 'Payable' ? ['InvoiceApproved','InvoicePmtSent','InvoiceBilledThrough'] : ['InvoiceFinalized','InvoiceSent','InvoiceAcked','InvoicePmtRecvd','InvoiceWriteOff']"/><if condition="'payable'.equalsIgnoreCase(invoiceType)"><then><set field="toRoleTypeId" value="OrgInternal"/></then><else><set field="fromRoleTypeId" value="OrgInternal"/></else></if><set field="glAccountClassEnumId" from="invoiceType == 'Payable' ? 'ACCOUNTS_PAYABLE' : 'ACCOUNTS_RECEIVABLE'"/><if condition="timePeriodId"><then><service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:timePeriodId]" out-map="periodInfo"/><set field="asOfDate" from="periodInfo.thruTimestamp"/><set field="organizationPartyId" from="organizationPartyId ?: periodInfo.timePeriod.partyId"/></then><else><set field="asOfDate" from="ec.user.nowTimestamp"/></else></if><script><![CDATA[// look back 12 months
            Calendar asOfCal = ec.user.getNowCalendar()
            asOfCal.setTimeInMillis(asOfDate.time)
            Calendar lookBackCal = (Calendar) asOfCal.clone()
            lookBackCal.add(Calendar.MONTH, -12)
            lookBackDate = new Timestamp(lookBackCal.getTimeInMillis())
            Calendar shortLookBackCal = (Calendar) asOfCal.clone()
            shortLookBackCal.add(Calendar.MONTH, -1)
            shortLookBackDate = new Timestamp(shortLookBackCal.getTimeInMillis())]]></script><set field="glAccountCodeMask" from="ec.user.getPreference('GlAccountCodeMask')"/><set field="accountCodeFormatter" from="masker(glAccountCodeMask, '0')"/></actions></transition>