<!--Transition Screen Location component://tools/screen/System/DataDocument/Export.xml Transition Name DocumentExport.json--><transition name="DocumentExport.json"><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--transition actions--><script><![CDATA[import org.moqui.context.ExecutionContext
            import org.moqui.impl.entity.EntityDataDocument

            import java.sql.Timestamp

            ExecutionContext ec = context.ec
            EntityDataDocument edd = ec.entity.getEntityDataDocument()

            if (!context.dataDocumentIds) {
                ec.message.addError(ec.l10n.localize("No Data Documents specified, not exporting anything."))
                return
            }

            List<String> dataDocumentIdList
            if (dataDocumentIds instanceof String) {
                dataDocumentIdList = [dataDocumentIds]
            } else {
                dataDocumentIdList = dataDocumentIds
            }
            boolean prettyPrint = context.prettyPrint as Boolean
            fromUpdateStamp = fromUpdateStamp ? fromUpdateStamp as Timestamp : null
            thruUpdateStamp = thruUpdateStamp ? thruUpdateStamp as Timestamp : null

            noResponse = false
            if (context.output == "file") {
                edd.writeDocumentsToFile((String) path, dataDocumentIdList, null,
                        fromUpdateStamp, thruUpdateStamp, prettyPrint)
            } else if (context.output == "dir") {
                edd.writeDocumentsToDirectory((String) path, dataDocumentIdList, null,
                        fromUpdateStamp, thruUpdateStamp, prettyPrint)
            } else {
                def response = ec.web.response
                response.setContentType("application/json")
                response.setCharacterEncoding("UTF-8")
                response.setHeader("Cache-Control", "no-cache, must-revalidate, private")
                response.getWriter().write("[\n")
                edd.writeDocumentsToWriter(response.getWriter(), dataDocumentIdList, null,
                        fromUpdateStamp, thruUpdateStamp, prettyPrint)
                response.getWriter().write("]\n")
                noResponse = true
            }]]></script></actions></transition>