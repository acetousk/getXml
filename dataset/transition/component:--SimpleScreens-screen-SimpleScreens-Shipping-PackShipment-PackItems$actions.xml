<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Shipping/PackShipment/PackItems.xml Transition Name actions--><transition name="actions"><parameter name="shipmentId" required="true"/><parameter name="filterProductId"/><parameter name="onlyRemaining"/><parameter name="pageIndex"/><parameter name="shipmentId"/><parameter name="shipmentPackageSeqId"/><parameter name="shipmentRouteSegmentSeqId"/><parameter name="retLabel"/><parameter name="intlInvoiceLabel"/><parameter name="shipmentId" required="true"/><parameter name="shipmentPackageSeqId" required="true"/><parameter name="shipmentBoxTypeId"/><parameter name="weightUomId"/><parameter name="weightFormat"/><parameter name="term"/><parameter name="productId"/><parameter name="facilityId"/><parameter name="ownerPartyId"/><parameter name="assetTypeEnumId"/><parameter name="classEnumId"/><parameter name="assetOrderBy"/><parameter name="excludeZeroQoh"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://SimpleScreens/screen/BasicHandheld/Warehouse.xml--><set field="appRoot" value="hhwh"/><set field="searchIndexName" value="mantle"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--actions--><service-call name="mantle.shipment.ShipmentInfoServices.get#ShipmentDisplayInfo" in-map="[shipmentId:shipmentId]" out-map="context"/><if condition="!isOutgoing && !isTransfer"><return error="true" message="Shipment ${shipmentId} is not an outgoing or transfer shipment"/></if><set field="statusPrePacked" from="shipment.statusId in ['ShipInput', 'ShipScheduled', 'ShipPicked']"/><set field="activePackage" from="shipmentPackageList?.find({ it.weight == null || it.shipmentBoxTypeId == null })"/><set field="activePackageSeqId" from="activePackage?.shipmentPackageSeqId"/><if condition="activePackage != null"><set field="activePackageRouteSeg" from="packageRouteSegList.find({ it.shipmentPackageSeqId == activePackage.shipmentPackageSeqId && it.shipmentRouteSegmentSeqId == firstRouteSegment.shipmentRouteSegmentSeqId })"/><script><![CDATA[activePackageAndRouteSeg = new HashMap(activePackage); activePackageAndRouteSeg.putAll(activePackageRouteSeg)]]></script></if><set field="allProductIds" from="shipmentItemDetailList*.productId"/><entity-find entity-name="mantle.product.Product" list="allProductList"><econdition field-name="productId" operator="in" from="allProductIds"/><order-by field-name="pseudoId"/></entity-find><if condition="filterProductId"><filter-map-list list="shipmentItemDetailList"><field-map field-name="productId" from="filterProductId"/></filter-map-list></if><if condition="onlyRemaining == 'Y'"><set field="tempItemDetailList" from="new ArrayList()"/><iterate list="shipmentItemDetailList" entry="sid"><if condition="isOutgoing || isTransfer"><if condition="(sid.quantity - (sid.quantityTotal ?: 0.0)) > 0.0"><script><![CDATA[tempItemDetailList.add(sid)]]></script><continue/></if></if><if condition="isIncoming || isTransfer"><if condition="(sid.quantity - (sid.quantityAcceptedTotal ?: 0.0) - (sid.quantityRejectedTotal ?: 0.0)) > 0.0"><script><![CDATA[tempItemDetailList.add(sid)]]></script><continue/></if></if></iterate><set field="shipmentItemDetailList" from="tempItemDetailList"/></if><set field="pageSize" from="pageSize ?: '10'"/></actions></transition>