<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Task/EditRequests.xml Transition Name getRequestList--><transition name="getRequestList"><parameter name="workEffortId" required="true"/><parameter name="term"/><parameter name="requestTypeEnumId"/><parameter name="rootWorkEffortId"/><parameter name="indexName"/><parameter name="documentType"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://HiveMind/screen/HiveMindRoot.xml--><set field="appRoot" value="hm"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="hm"/><set field="searchTaskDocType" value="MantleTask"/><set field="searchPartyDocType" value="MantleParty"/><!--transition actions--><set field="indexName" from="searchIndexName ?: 'mantle'"/><set field="documentType" from="searchRequestDocType ?: 'MantleRequest'"/><set field="outList" from="[]"/><entity-find-one entity-name="mantle.request.Request" value-field="request"><field-map field-name="requestId" from="term"/></entity-find-one><if condition="request != null"><script><![CDATA[outList.add([value:request.requestId, label:ec.resource.expand("RequestNameTemplate", "", request)])]]></script></if><script><![CDATA[StringBuilder termSb = new StringBuilder()
                termSb.append(term).append('*')
                if (requestTypeEnumId) termSb.append(' AND requestTypeEnumId:').append(requestTypeEnumId)
                if (rootWorkEffortId) termSb.append(' AND rootWorkEffortId:').append(rootWorkEffortId)]]></script><service-call name="org.moqui.search.SearchServices.search#DataDocuments" out-map="context" in-map="[queryString:termSb.toString(), indexName:indexName, documentType:documentType]"/><script><![CDATA[for (def document in documentList) {
                    outList.add([value:document._id, label:ec.resource.expand('${requestId}: ${name?:"N/A"} - ${type?:"N/A"} - ${status?:"N/A"}', "", document)])
                    // ec.logger.warn("document: ${document}")
                }
                ec.web.sendJsonResponse(outList)]]></script><script><![CDATA[ec.web.sendJsonResponse(outList)]]></script></actions></transition>