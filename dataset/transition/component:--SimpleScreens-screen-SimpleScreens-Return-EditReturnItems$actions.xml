<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Return/EditReturnItems.xml Transition Name actions--><transition name="actions"><parameter name="returnId" required="true"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--actions--><entity-find-one entity-name="mantle.order.return.ReturnHeader" value-field="returnHeader"/><if condition="returnHeader == null"><return error="true" message="Return not found with ID ${returnId}"/></if><set field="returnChangeable" from="returnHeader.statusId in ['ReturnCreated', 'ReturnRequested', 'ReturnApproved']"/><entity-find entity-name="mantle.order.return.ReturnItem" list="returnItemList"><econdition field-name="returnId"/><order-by field-name="returnItemSeqId"/></entity-find><script><![CDATA[returnItemWithChildrenSet = new HashSet()
            List reverseList = returnItemList.cloneList().orderByFields(["-returnItemSeqId"])
            for (returnItem in reverseList) {
                if (returnItem.parentItemSeqId) {
                    returnItemWithChildrenSet.add(returnItem.parentItemSeqId)
                    returnItemList.move(returnItemList.indexMatching([returnItemSeqId:returnItem.returnItemSeqId]),
                            returnItemList.indexMatching([returnItemSeqId:returnItem.parentItemSeqId])+1)
                }
            }]]></script><set field="allResponses" from="true"/><set field="allReceived" from="true"/><set field="rootItemList" from="[]"/><iterate list="returnItemList" entry="returnItem"><if condition="returnItem.responseDate == null"><set field="allResponses" from="false"/></if><if condition="returnItem.statusId in ['ReturnCreated', 'ReturnRequested', 'ReturnApproved', 'ReturnShipped']"><set field="allReceived" from="false"/></if><if condition="!returnItem.parentItemSeqId"><script><![CDATA[rootItemList.add(returnItem)]]></script></if></iterate><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="allItemSisList"><econdition field-name="returnId"/></entity-find><entity-find entity-name="mantle.order.return.ReturnItemBilling" list="allItemBillingList"><econdition field-name="returnId"/></entity-find><entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true"><econdition field-name="enumGroupEnumId" value="EngItemsProduct"/></entity-find><set field="productItemTypes" from="productItemTypeEgms*.enumId"/><set field="allOnShipments" from="true"/><iterate list="returnItemList" entry="returnItem"><if condition="returnItem.productId"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="returnItem.productId"/></entity-find-one><set field="isProductItemType" from="returnItem.itemTypeEnumId in productItemTypes"/><set field="isShippable" from="isProductItemType && product != null ? product.productTypeEnumId in ['PtAsset', 'PtDigitalAsset', 'PtAssetUse', 'PtPickAssembly'] : false"/><if condition="isShippable"><set field="itemSisQuantity" from="allItemSisList.findAll({ it.returnItemSeqId == returnItem.returnItemSeqId })*.quantity.sum()"/><if condition="itemSisQuantity < returnItem.returnQuantity"><set field="allOnShipments" from="false"/></if></if></if></iterate></actions></transition>