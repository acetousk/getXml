<!--Transition Screen Location component://SimpleScreens/screen/SimpleScreens/Accounting/Transaction/FindTransactionEntry.xml Transition Name searchPartyList--><transition name="searchPartyList"><parameter name="term"/><parameter name="roleTypeId"/><parameter name="indexName"/><parameter name="documentType"/><parameter name="partyTypeEnumId"/><parameter name="includeDisabled"/><parameter name="restrictActiveOrg"/><parameter name="pageIndex"/><actions><!--always-actions at component://webroot/screen/webroot.xml--><set field="html_scripts" from="new LinkedHashSet()"/><set field="footer_scripts" from="new LinkedHashSet()"/><set field="html_stylesheets" from="new LinkedHashSet()"/><!--always-actions at component://PopCommerce/screen/PopCommerceAdmin.xml--><set field="appRoot" value="PopcAdmin"/><set field="searchIndexName" value="mantle"/><set field="searchLinkSets" value="PopcAdmin"/><set field="searchProductDocType" value="MantleProduct"/><set field="searchPartyDocType" value="MantleParty"/><set field="appUserGroupTypeEnumId" value="UgtPopcAdmin"/><service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/><!--transition actions--><if condition="!term && !pageIndex"><script><![CDATA[ec.web.sendJsonResponse([])]]></script><return/></if><set field="term" from="term ?: '*'"/><set field="indexName" from="indexName ?: searchIndexName ?: 'mantle'"/><set field="documentType" from="documentType ?: searchPartyDocType ?: 'MantleParty'"/><entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail"><field-map field-name="partyId" from="term"/></entity-find-one><if condition="partyDetail != null"><then><script><![CDATA[def outList = [[value:partyDetail.partyId, label:ec.resource.expand("PartyNameTemplate", "", partyDetail)]]
                    ec.web.sendJsonResponse(outList)]]></script></then><else><set field="activeOrgId" from="ec.user.context?.activeOrgId"/><set field="filterOrgIds" from="ec.user.context?.filterOrgIds"/><set field="findFilters" from="ec.artifactExecution.getFindFiltersForUser('mantle.party.Party')"/><if condition="findFilters"><set field="entityFilterSetId" from="findFilters[0].entityFilterSetId"/></if><script><![CDATA[StringBuilder termSb = new StringBuilder('(')
                    termSb.append(elasticQueryAutoWildcard(term, false)).append(')')

                    if (roleTypeId) termSb.append(' AND roles.roleTypeId:(').append(roleTypeId.replaceAll(/,/, ' OR ')).append(')')
                    if (partyTypeEnumId) termSb.append(' AND (partyTypeEnumId:' + partyTypeEnumId + ')')
                    if (!'true'.equals(includeDisabled)) termSb.append(' AND (NOT disabled:Y)')
                    if (activeOrgId && 'true'.equals(restrictActiveOrg)) termSb.append(' AND (partyId:' + activeOrgId + ')')

                    if ('MANTLE_USER_ORG'.equals(entityFilterSetId)) {
                        termSb.append(' AND ownerPartyId:(' + (filterOrgIds ? filterOrgIds.join(' OR ') + ' OR ' : '') + '_NA_)')
                    } else if ('MANTLE_ACTIVE_ORG'.equals(entityFilterSetId) && activeOrgId) {
                        termSb.append(' AND ownerPartyId:(' + activeOrgId + ' OR _NA_)')
                    }]]></script><service-call name="org.moqui.search.SearchServices.search#DataDocuments" out-map="context" in-map="[queryString:termSb.toString(), indexName:indexName, documentType:documentType]"/><script><![CDATA[def outList = []
                    for (document in documentList) outList.add([value:document._id, label:ec.resource.expand("PartyNameTemplate", "", document)])
                    ec.web.sendJsonResponse(outList)]]></script></else></if></actions></transition>