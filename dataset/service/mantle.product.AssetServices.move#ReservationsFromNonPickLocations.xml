<!--Service Location mantle.product.AssetServices.move#ReservationsFromNonPickLocations--><service verb="move" noun="ReservationsFromNonPickLocations"><in-parameters><parameter name="assetId" required="true"><description><![CDATA[Should be in a FltPick type FacilityLocation but not enforced,
                must have positive availableToPromiseTotal or does nothing]]></description></parameter></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset" for-update="true"/><entity-find-related-one value-field="asset" relationship-name="location" to-value-field="facilityLocation" cache="true"/><entity-find entity-name="mantle.product.asset.AssetLocationDetail" list="nonPickAssetList"><econdition field-name="locationTypeEnumId" operator="not-equals" value="FltPick" or-null="true"/><econdition field-name="assetId" operator="not-equals" from="assetId"/><econdition field-name="availableToPromiseTotal" operator="less" to-field-name="quantityOnHandTotal"/><econdition field-name="productId" from="asset.productId"/><econdition field-name="facilityId" from="asset.facilityId"/><econdition field-name="ownerPartyId" from="asset.ownerPartyId"/><econdition field-name="assetPoolId" from="asset.assetPoolId"/><select-field field-name="assetId,availableToPromiseTotal,quantityOnHandTotal"/><select-field field-name="locationSeqId,locationTypeEnumId,description,areaId,aisleId,sectionId,levelId,positionId"/><order-by field-name="receivedDate"/></entity-find><set field="remainingQuantity" from="asset.availableToPromiseTotal ?: 0.0"/><iterate list="nonPickAssetList" entry="nonPickAsset"><if condition="remainingQuantity == 0.0"><break/></if><set field="remainingQuantityBefore" from="remainingQuantity"/><entity-find entity-name="mantle.product.issuance.AssetReservation" list="resList"><econdition field-name="assetId" from="nonPickAsset.assetId"/><order-by field-name="reservedDate"/></entity-find><iterate list="resList" entry="assetRes"><set field="quantityReserved" from="assetRes.quantityNotIssued"/><set field="quantityToMove" from="quantityReserved > remainingQuantity ? remainingQuantity : quantityReserved"/><if condition="quantityToMove > 0.0"><service-call name="mantle.product.AssetServices.move#AssetReservation" out-map="[quantityMoved:moveArOut.quantityMoved]" out-map-add-to-existing="false" in-map="[assetId:assetId, assetReservationId:assetRes.assetReservationId, quantity:quantityToMove]"/><set field="remainingQuantity" from="remainingQuantity - quantityToMove"/></if><if condition="remainingQuantity == 0.0"><break/></if></iterate><set field="resQuantityMoved" from="remainingQuantityBefore - remainingQuantity"/><if condition="resQuantityMoved > 0.0"><message><![CDATA[Moved other reservations for total quantity ${resQuantityMoved} from location ${ec.resource.expand("FacilityLocationNameTemplate", null, facilityLocation)} to Pick location ${ec.resource.expand("FacilityLocationNameTemplate", null, nonPickAsset)}]]></message></if></iterate></actions></service>