<!--Service Location org.moqui.impl.UserServices.send#ExternalAuthcCode--><service verb="send" noun="ExternalAuthcCode"><in-parameters><parameter name="factorId" required="true"/></in-parameters><out-parameters><parameter name="singleUseFactorId"/></out-parameters><actions><set field="username" from="ec.web?.sessionAttributes?.moquiPreAuthcUsername ?: ec.user.username"/><if condition="!username"><return error="true" message="No user pre-authenticated, cannot send code"/></if><entity-find-one entity-name="moqui.security.UserAccount" value-field="userAccount"><field-map field-name="username"/></entity-find-one><if condition="userAccount == null"><return error="true" message="User ${username} not found"/></if><if condition="'UserAccountEmail'.equals(factorId)"><entity-find entity-name="moqui.security.UserAuthcFactor" list="userAuthcFactorList"><date-filter/><econdition field-name="userId" from="userAccount.userId"/><econdition field-name="fromFactorId" operator="is-null"/></entity-find><if condition="userAuthcFactorList"><return error="true" message="User has other authentication factors configured, cannot use account email address"/></if><service-call name="org.moqui.impl.UserServices.send#AuthcCodeUserAccountEmail" in-map="[username:username]" out-map="[singleUseFactorId:context.singleUseFactorId,code:context.code]"/><return/></if><entity-find-one entity-name="moqui.security.UserAuthcFactor" value-field="userAuthcFactor"><field-map field-name="factorId"/></entity-find-one><if condition="userAuthcFactor == null"><return error="true" message="Authentication factor ${factorId} not found"/></if><if condition="userAuthcFactor.userId != userAccount.userId"><return error="true" message="Authentication Factor ${factorId} is not valid for ${userAccount.username}"/></if><if condition="userAuthcFactor.factorTypeEnumId == 'UafEmail'"><then><service-call name="org.moqui.impl.UserServices.send#AuthcCodeEmail" in-map="[factorId:factorId]" out-map="[singleUseFactorId:context.singleUseFactorId,code:context.code]"/></then><else-if condition="userAuthcFactor.factorTypeEnumId == 'UafSms'"><service-call name="org.moqui.impl.UserServices.send#AuthcCodeSms" in-map="[factorId:factorId]" out-map="[singleUseFactorId:context.singleUseFactorId,code:context.code]"/></else-if><else><return error="true" message="Send code not supported for authc factor type ${userAuthcFactor.factorTypeEnumId}"/></else></if></actions></service>