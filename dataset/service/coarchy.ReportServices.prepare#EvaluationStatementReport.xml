<!--Service Location coarchy.ReportServices.prepare#EvaluationStatementReport--><service verb="prepare" noun="EvaluationStatementReport"><in-parameters><parameter name="organizationId" required="true"/><parameter name="filterProductIds" type="List"/><parameter name="filterProductEvaluationIds" type="List"/><parameter name="thruDate" type="Timestamp"/></in-parameters><out-parameters><parameter name="productIdSet" type="Set"/><parameter name="outList" type="List"><parameter name="entry" type="Map"><parameter name="productEvaluationId" type="String"/><parameter name="productEvaluationResponseId" type="String"/><parameter name="valueStatementId" type="String"/><parameter name="statementValue" type="String"/><parameter name="typeEnumId" type="String"/><parameter name="tags" type="List"/><parameter name="evaluationName" type="String"/><parameter name="productName" type="String"/><parameter name="evaluationByEnumId" type="String"/><parameter name="rating" type="String"/><parameter name="implementationStatusEnumId" type="String"/><parameter name="comments" type="String"/></parameter></parameter></out-parameters><actions><entity-find entity-name="coarchy.product.ProductEvaluationAndProduct" list="productEvaluationList"><econdition field-name="organizationId"/><econdition field-name="statusId" value="PeCompleted"/><econdition field-name="productId" operator="in" from="filterProductIds" ignore-if-empty="true"/><econdition field-name="productEvaluationId" operator="in" from="filterProductEvaluationIds" ignore-if-empty="true"/><econdition field-name="completedDate" operator="less-equals" ignore-if-empty="true"/></entity-find><set field="productEvaluationIds" from="productEvaluationList*.productEvaluationId"/><set field="productIdSet" from="new TreeSet(productEvaluationList*.productId)"/><entity-find entity-name="coarchy.product.ProductEvaluationStatementDetail" list="evalStatementList" distinct="true"><econdition field-name="productEvaluationId" operator="in" from="productEvaluationIds"/><econdition field-name="organizationId"/><select-field field-name="organizationId,statementId,value,typeDescription"/><order-by field-name="statementId"/></entity-find><set field="statementIdSet" from="new TreeSet(evalStatementList*.statementId)"/><entity-find entity-name="coarchy.product.ProductEvaluationResponse" list="evaluationResponseList"><econdition field-name="organizationId"/><econdition field-name="productEvaluationId" operator="in" from="productEvaluationIds"/><econdition field-name="statementId" operator="in" from="statementIdSet"/><order-by field-name="evaluationByEnumId"/></entity-find><set field="outList" from="[]"/><iterate list="evalStatementList" entry="evalStatement"><set field="statementId" from="evalStatement.statementId"/><entity-find entity-name="coarchy.ValueStatementTagDetail" list="valueStatementTagList"><date-filter/><econdition field-name="valueStatementId" from="statementId"/></entity-find><filter-map-list list="evaluationResponseList" to-list="statementResponseList"><field-map field-name="statementId" from="statementId"/></filter-map-list><order-map-list list="statementResponseList"><order-by field-name="productEvaluationId,evaluationByEnumId"/></order-map-list><if condition="!statementResponseList"><script><![CDATA[outList.add([
                                productEvaluationId: null, 
                                productEvaluationResponseId: null,
                                valueStatementId: statementId, 
                                statementValue: evalStatement.value,
                                typeEnumId: evalStatement.typeDescription,
                                tags: valueStatementTagList.collect{it.description},
                                evaluationName: null,
                                productName: null,
                                evaluationByEnumId: null,
                                rating: null,
                                implementationStatusEnumId: null,
                                comments: null,
                            ])]]></script><continue/></if><iterate list="statementResponseList" entry="statementResponse"><set field="productEvaluation" from="productEvaluationList.find{it.productEvaluationId == statementResponse.productEvaluationId}"/><script><![CDATA[outList.add([
                                productEvaluationId: statementResponse.productEvaluationId, 
                                productEvaluationResponseId: statementResponse.productEvaluationResponseId,
                                valueStatementId: statementId, 
                                statementValue: evalStatement.value,
                                typeEnumId: evalStatement.typeDescription,
                                tags: valueStatementTagList.collect{it.description},
                                evaluationName: productEvaluation?.evaluationName,
                                productName: productEvaluation?.productName,
                                evaluationByEnumId: statementResponse.evaluationByEnum?.description,
                                rating: statementResponse.rating,
                                implementationStatusEnumId: statementResponse.implementationStatusEnum?.description,
                                comments: statementResponse.comments,
                            ])]]></script></iterate></iterate></actions></service>