<!--Service Location coarchy.NotificationServices.send#MonthlyNotificationEmail--><service verb="send" noun="MonthlyNotificationEmail"><in-parameters><parameter name="currentTimestamp" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="emailTemplateId" required="true"/><parameter name="partyId" required="true"/><parameter name="bodyParameters" required="true" type="Map"/><parameter name="preferredContactMechId"/><parameter name="toAddresses"/><parameter name="emailTypeEnumId" required="true" default-value="CONT_EMAIL_TEMPLATE"/><parameter name="lastCreditPurchaseDate" type="Timestamp"/></in-parameters><out-parameters><parameter name="sentEmail"/><parameter name="emailTemplateId"/><parameter name="emailMessageId"/></out-parameters><actions><entity-find entity-name="moqui.security.UserAccount" list="userAccountList" limit="2"><econdition field-name="partyId"/><econdition field-name="disabled" operator="not-equals" value="Y"/></entity-find><if condition="userAccountList.size() > 1"><log level="warn" message="Multiple user accounts found for party ${partyId}"/></if><set field="userAccount" from="userAccountList?.getFirst()"/><if condition="!toAddresses"><set field="toAddresses" from="userAccount.emailAddress"/></if><entity-find entity-name="moqui.basic.email.EmailMessage" list="emailMessageList"><econdition field-name="emailTemplateId"/><econdition field-name="toUserId" from="userAccount.userId"/><order-by field-name="-sentDate"/></entity-find><if condition="emailMessageList"><set field="endOfLastMonthDate" from="ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time-1L), ZoneId.systemDefault()).minusMonths(1).with(java.time.temporal.TemporalAdjusters.lastDayOfMonth()).with(LocalTime.MAX)"/><set field="nowDate" from="ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault())"/><set field="lastSentDate" from="ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) emailMessageList[0].sentDate.time), ZoneId.systemDefault())"/><set field="daysSinceLastSent" from="java.time.temporal.ChronoUnit.DAYS.between(                         lastSentDate, nowDate)" type="BigDecimal"/><if condition="lastSentDate < endOfLastMonthDate"><if condition="daysSinceLastSent < 20"><log level="warn" message="Email was sent last month, but hasn't been 20 days since. Not sending"/><return/></if><else><log level="warn" message="Email already sent this month. Not sending again."/><return/></else></if></if><if condition="!preferredContactMechId"><entity-find entity-name="mantle.party.contact.PartyContactMech" list="partyContactMechList" limit="1"><econdition field-name="partyId"/><econdition field-name="contactMechPurposeId" value="EmailPrimary"/><date-filter/><order-by field-name="-fromDate"/></entity-find><set field="preferredContactMechId" from="partyContactMechList?.getFirst()?.contactMechId"/></if><service-call name="org.moqui.impl.EmailServices.send#EmailTemplate" in-map="[emailTemplateId:emailTemplateId,toAddresses:toAddresses,bodyParameters:bodyParameters, toUserId:userAccount.userId]" out-map="[messageId:context.messageId,emailMessageId:context.emailMessageId]"/><if condition="emailMessageId"><set field="sentEmail" from="true"/></if><service-call name="mantle.party.CommunicationServices.create#Message" in-map="[communicationEventTypeId:'Email',contactMechTypeEnumId:'CmtEmailAddress',statusId:'CeSent',                     toContactMechId:preferredContactMechId,toPartyId:partyId,fromPartyId:'coarchy',emailMessageId:emailMessageId]" out-map="[communicationEventId:communicationEventOut.communicationEventId,fromPartyId:communicationEventOut.fromPartyId,communicationEventTypeId:communicationEventOut.communicationEventTypeId,statusId:communicationEventOut.statusId,entryDate:communicationEventOut.entryDate]"/></actions></service>