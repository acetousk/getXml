<!--Service Location mantle.order.OrderServices.reject#OrderItem--><service verb="reject" noun="OrderItem"><in-parameters><parameter name="orderId" required="true" entity-name="mantle.order.OrderItem" field-name="orderId"/><parameter name="orderItemSeqId" required="true" entity-name="mantle.order.OrderItem" field-name="orderItemSeqId"/><parameter name="cancelQuantity" type="BigDecimal"><description><![CDATA[Defaults to quantity not yet issued, if greater than quantity not issued will be reduced to quantity not issued]]></description></parameter><parameter name="orderItem" type="EntityValue"/><parameter name="fullAssetIssuanceList" type="List"><parameter name="assetIssuance" type="EntityValue"/></parameter><parameter name="fullShipmentItemSourceList" type="List"><parameter name="shipmentItemSource" type="EntityValue"/></parameter><parameter name="checkRejectedPart" type="Boolean" default="true"/></in-parameters><out-parameters><parameter name="hasIssuedQuantity" type="Boolean"/><parameter name="quantityCancelled" type="BigDecimal" entity-name="mantle.order.OrderItem" field-name="quantityCancelled"/></out-parameters><actions><if condition="orderItem == null"><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"/></if><if condition="orderItem == null"><return error="true" message="Order Item ${orderId}:${orderItemSeqId} not found"/></if><if condition="!orderItem.productId"><return/></if><entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true"><econdition field-name="enumGroupEnumId" value="EngItemsProduct"/></entity-find><set field="productItemTypes" from="productItemTypeEgms*.enumId"/><if condition="!productItemTypes.contains(orderItem.itemTypeEnumId)"><return type="warning" message="Item ${orderItemSeqId} is not a product type item, not rejecting"/></if><if condition="fullAssetIssuanceList"><then><filter-map-list list="fullAssetIssuanceList" to-list="itemAssetIssuanceList"><field-map field-name="orderItemSeqId"/><field-map field-name="productId" from="orderItem.productId"/></filter-map-list></then><else><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="itemAssetIssuanceList"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/><econdition field-name="productId" from="orderItem.productId"/></entity-find></else></if><set field="itemQuantityIssued" from="0.0"/><iterate list="itemAssetIssuanceList" entry="itemAssetIssuance"><set field="itemQuantityIssued" from="itemQuantityIssued + itemAssetIssuance.quantity"/></iterate><set field="hasIssuedQuantity" from="itemQuantityIssued > 0.0"/><set field="itemQuantity" from="orderItem.quantity != null ? orderItem.quantity : 1.0"/><set field="notIssuedQuantity" from="itemQuantity - itemQuantityIssued"/><if condition="notIssuedQuantity < 0.0"><log level="warn" message="In reject#OrderItem itemQuantityIssued ${itemQuantityIssued} is greater than itemQuantity ${itemQuantity}, using 0.0 for notIssuedQuantity instead of ${notIssuedQuantity}"/><set field="notIssuedQuantity" from="0.0"/></if><if condition="cancelQuantity"><then><if condition="cancelQuantity > notIssuedQuantity"><then><set field="quantityCancelled" from="notIssuedQuantity"/><message type="warning"><![CDATA[Cannot reject quantity ${cancelQuantity}, only ${notIssuedQuantity} not yet shipped for Order Item ${orderId}:${orderItemSeqId}]]></message></then><else><set field="quantityCancelled" from="cancelQuantity"/></else></if></then><else><set field="quantityCancelled" from="notIssuedQuantity"/></else></if><if condition="!quantityCancelled"><return/></if><service-call name="update#mantle.order.OrderItem" in-map="[orderId:orderId,                         orderItemSeqId:orderItem.orderItemSeqId,                         quantityCancelled:(quantityCancelled + (orderItem.quantityCancelled ?: 0)),                         quantity:(itemQuantity - quantityCancelled)]"/><if condition="itemQuantity == quantityCancelled"><then><set field="childCancelRatio" from="1.0"/></then><else><set field="childCancelRatio" from="(quantityCancelled as BigDecimal).divide(itemQuantity as BigDecimal, 6, BigDecimal.ROUND_HALF_EVEN)"/></else></if><set field="childOrderItemList" from="orderItem.'Child#mantle.order.OrderItem'"/><order-map-list list="childOrderItemList"><order-by field-name="orderItemSeqId"/></order-map-list><iterate list="childOrderItemList" entry="childOrderItem"><if condition="childOrderItem.quantity == 0.0 || childOrderItem.unitAmount == 0.0"><continue/></if><if condition="childOrderItem.quantity == itemQuantity"><then><service-call name="update#mantle.order.OrderItem" in-map="[orderId:orderId,                         orderItemSeqId:childOrderItem.orderItemSeqId,                         quantityCancelled:(quantityCancelled + (childOrderItem.quantityCancelled ?: 0)),                         quantity:(itemQuantity - quantityCancelled)]"/></then><else><set field="newUnitAmount" from="childOrderItem.unitAmount - ((childCancelRatio as BigDecimal) * (childOrderItem.unitAmount as BigDecimal)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><service-call name="update#mantle.order.OrderItem" in-map="[orderId:orderId,                         orderItemSeqId:childOrderItem.orderItemSeqId, unitAmount:newUnitAmount]"/></else></if></iterate><if condition="fullShipmentItemSourceList"><then><filter-map-list list="fullShipmentItemSourceList" to-list="itemShipmentItemSourceList"><field-map field-name="orderItemSeqId"/></filter-map-list></then><else><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="itemShipmentItemSourceList"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/></entity-find></else></if><set field="shipmentItemQuantityReducedMap" from="[:]"/><set field="shipQuantityRemaining" from="quantityCancelled"/><iterate list="itemShipmentItemSourceList" entry="itemShipmentItemSource"><set field="shipQuantityToReduce" from="shipQuantityRemaining > itemShipmentItemSource.quantityNotHandled ?                         itemShipmentItemSource.quantityNotHandled : shipQuantityRemaining"/><if condition="!shipQuantityToReduce"><continue/></if><script><![CDATA[addToBigDecimalInMap(itemShipmentItemSource.shipmentId, shipQuantityToReduce, shipmentItemQuantityReducedMap)]]></script><service-call name="update#mantle.shipment.ShipmentItemSource" in-map="[shipmentItemSourceId:itemShipmentItemSource.shipmentItemSourceId, quantityNotHandled:0,                                 quantity:(itemShipmentItemSource.quantity - shipQuantityToReduce)]"/><set field="shipQuantityRemaining" from="shipQuantityRemaining - shipQuantityToReduce"/></iterate><iterate list="shipmentItemQuantityReducedMap" entry="shipmentItemQuantityReduced" key="shipmentId"><entity-find-one entity-name="mantle.shipment.ShipmentItem" value-field="shipmentItem"><field-map field-name="shipmentId"/><field-map field-name="productId" from="orderItem.productId"/></entity-find-one><if condition="shipmentItem != null"><set field="newSiQuantity" from="shipmentItem.quantity > shipmentItemQuantityReduced ?                                 shipmentItem.quantity - shipmentItemQuantityReduced : 0.0"/><service-call name="update#mantle.shipment.ShipmentItem" in-map="[shipmentId:shipmentId, productId:orderItem.productId, quantity:newSiQuantity]"/><if condition="newSiQuantity == 0.0"><entity-find-count entity-name="mantle.shipment.ShipmentItem" count-field="nonZeroShipItemCount"><econdition field-name="shipmentId"/><econdition field-name="quantity" operator="greater" from="0.0"/></entity-find-count><if condition="nonZeroShipItemCount == 0"><service-call name="mantle.shipment.ShipmentServices.cancel#Shipment" in-map="[shipmentId:shipmentId]"/></if></if></if></iterate><if condition="quantityCancelled == notIssuedQuantity"><then><service-call name="mantle.product.AssetServices.remove#OrderItemReservations" in-map="[orderId:orderId, orderItemSeqId:orderItem.orderItemSeqId]"/><if condition="checkCancelPart && quantityCancelled == notIssuedQuantity"><entity-find-count entity-name="mantle.order.OrderItem" count-field="partItemQtyOverZeroCount"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId" from="orderItem.orderPartSeqId"/><econdition field-name="itemTypeEnumId" operator="in" from="productItemTypes"/><econdition field-name="quantity" operator="greater" from="0.0"/></entity-find-count><if condition="partItemQtyOverZeroCount == 0"><then><service-call name="update#mantle.order.OrderPart" out-map="[orderId:context.orderId,orderPartSeqId:context.orderPartSeqId,parentPartSeqId:context.parentPartSeqId,partName:context.partName,statusId:context.statusId,vendorPartyId:context.vendorPartyId,customerPartyId:context.customerPartyId,otherPartyOrderId:context.otherPartyOrderId,otherPartyOrderDate:context.otherPartyOrderDate,facilityId:context.facilityId,carrierPartyId:context.carrierPartyId,shipmentMethodEnumId:context.shipmentMethodEnumId,tradeTermEnumId:context.tradeTermEnumId,settlementTermId:context.settlementTermId,postalContactMechId:context.postalContactMechId,telecomContactMechId:context.telecomContactMechId,trackingNumber:context.trackingNumber,shippingInstructions:context.shippingInstructions,maySplit:context.maySplit,signatureRequiredEnumId:context.signatureRequiredEnumId,giftMessage:context.giftMessage,isGift:context.isGift,isNewCustomer:context.isNewCustomer,partTotal:context.partTotal,priority:context.priority,shipAfterDate:context.shipAfterDate,shipBeforeDate:context.shipBeforeDate,estimatedShipDate:context.estimatedShipDate,estimatedDeliveryDate:context.estimatedDeliveryDate,estimatedPickUpDate:context.estimatedPickUpDate,validFromDate:context.validFromDate,validThruDate:context.validThruDate,autoCancelDate:context.autoCancelDate,dontCancelSetDate:context.dontCancelSetDate,dontCancelSetUserId:context.dontCancelSetUserId,disablePromotions:context.disablePromotions,disableShippingCalc:context.disableShippingCalc,disableTaxCalc:context.disableTaxCalc,reservationAutoEnumId:context.reservationAutoEnumId,checkoutId:context.checkoutId,checkoutUrl:context.checkoutUrl,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[orderId:orderId, orderPartSeqId:orderItem.orderPartSeqId, statusId:'OrderCancelled']"/><service-call name="mantle.order.OrderServices.checkCancelComplete#Order" in-map="[orderId:orderId]"/></then><else><service-call name="mantle.order.OrderServices.checkComplete#OrderPart" out-map="[oldStatusId:checkPartOut.oldStatusId,statusChanged:checkPartOut.statusChanged]" in-map="[orderId:orderId, orderPartSeqId:orderItem.orderPartSeqId]"/><if condition="checkPartOut.statusChanged"><service-call name="mantle.order.OrderServices.checkCancelComplete#Order" in-map="[orderId:orderId]"/></if></else></if></if></then><else/></if></actions></service>