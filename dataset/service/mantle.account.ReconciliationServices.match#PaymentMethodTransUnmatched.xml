<!--Service Location mantle.account.ReconciliationServices.match#PaymentMethodTransUnmatched--><service verb="match" noun="PaymentMethodTransUnmatched"><in-parameters><parameter name="paymentMethodId" required="true"/><parameter name="lookBackDays" type="Integer" default="7"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.account.method.PaymentMethod" value-field="paymentMethod"/><entity-find entity-name="mantle.account.method.PaymentMethodTrans" list="bankAccountTransList"><econdition field-name="paymentMethodId"/><econditions combine="or"><econdition field-name="paymentId" from="null"/><econdition field-name="acctgTransId" from="null"/></econditions><econdition field-name="noReconcile" operator="not-equals" value="Y" or-null="true"/></entity-find><set field="ignoreTypeSet" from="new HashSet(['INT', 'DIV', 'FEE', 'SRVCHG'])"/><iterate list="bankAccountTransList" entry="bankAccountTrans"><if condition="!bankAccountTrans.transAmount || !bankAccountTrans.postedDate"><continue/></if><set field="payment" from="null"/><set field="acctgTransAndEntry" from="null"/><script><![CDATA[Calendar lookBackCal = ec.user.nowCalendar
                    lookBackCal.setTimeInMillis(bankAccountTrans.postedDate.time)
                    lookBackCal.add(Calendar.DAY_OF_YEAR, -lookBackDays)
                    lookBackTs = new java.sql.Timestamp(lookBackCal.getTimeInMillis())]]></script><if condition="!bankAccountTrans.paymentId && !ignoreTypeSet.contains(bankAccountTrans.transType)"><set field="findPmt" from="[reconcileStatusId:'PmtrNot']"/><if condition="bankAccountTrans.transAmount >= 0"><then><set field="findPmt.toPartyId" from="paymentMethod.ownerPartyId"/><set field="findPmt.toPaymentMethodId" from="paymentMethodId"/></then><else><set field="findPmt.fromPartyId" from="paymentMethod.ownerPartyId"/><set field="findPmt.paymentMethodId" from="paymentMethodId"/></else></if><if condition="bankAccountTrans.checkNumber || bankAccountTrans.refNumber"><entity-find entity-name="mantle.account.payment.Payment" list="paymentList"><econdition-object field="findPmt"/><econdition field-name="paymentRefNum" from="bankAccountTrans.checkNumber ?: bankAccountTrans.refNumber"/></entity-find><set field="payment" from="paymentList ? paymentList[0] : null"/></if><if condition="!payment"><entity-find entity-name="mantle.account.payment.Payment" list="paymentList"><econdition-object field="findPmt"/><econdition field-name="amount" from="bankAccountTrans.transAmount.abs()"/><econdition field-name="amountUomId" from="paymentMethod.currencyUomId" ignore-if-empty="true"/><econdition field-name="effectiveDate" operator="less-equals" from="bankAccountTrans.postedDate"/><econdition field-name="effectiveDate" operator="greater-equals" from="lookBackTs"/></entity-find><set field="payment" from="paymentList ? paymentList[0] : null"/></if><if condition="!payment && paymentMethod.currencyUomId"><entity-find entity-name="mantle.account.payment.Payment" list="paymentList"><econdition-object field="findPmt"/><econdition field-name="originalCurrencyAmount" from="bankAccountTrans.transAmount.abs()"/><econdition field-name="originalCurrencyUomId" from="paymentMethod.currencyUomId"/><econdition field-name="effectiveDate" operator="less-equals" from="bankAccountTrans.postedDate"/><econdition field-name="effectiveDate" operator="greater-equals" from="lookBackTs"/></entity-find><set field="payment" from="paymentList ? paymentList[0] : null"/></if></if><if condition="!bankAccountTrans.acctgTransId && paymentMethod.glAccountId"><set field="debitCreditFlag" from="bankAccountTrans.transAmount >= 0 ? 'D' : 'C'"/><if condition="payment"><entity-find entity-name="mantle.ledger.transaction.AcctgTransAndEntry" list="ataeList"><econdition field-name="glAccountId" from="paymentMethod.glAccountId"/><econdition field-name="reconcileStatusId" value="AterNot" or-null="true"/><econdition field-name="debitCreditFlag"/><econdition field-name="paymentId" from="payment.paymentId"/></entity-find><set field="acctgTransAndEntry" from="ataeList ? ataeList[0] : null"/></if><if condition="!acctgTransAndEntry"><entity-find entity-name="mantle.ledger.transaction.AcctgTransAndEntry" list="ataeList"><econdition field-name="glAccountId" from="paymentMethod.glAccountId"/><econdition field-name="reconcileStatusId" value="AterNot" or-null="true"/><econdition field-name="debitCreditFlag"/><econdition field-name="amount" from="bankAccountTrans.transAmount.abs()"/><econdition field-name="amountUomId" from="paymentMethod.currencyUomId" ignore-if-empty="true"/><econdition field-name="transactionDate" operator="less-equals" from="bankAccountTrans.postedDate"/><econdition field-name="transactionDate" operator="greater-equals" from="lookBackTs"/></entity-find><set field="acctgTransAndEntry" from="ataeList ? ataeList[0] : null"/></if><if condition="!acctgTransAndEntry && paymentMethod.currencyUomId"><entity-find entity-name="mantle.ledger.transaction.AcctgTransAndEntry" list="ataeList"><econdition field-name="glAccountId" from="paymentMethod.glAccountId"/><econdition field-name="reconcileStatusId" value="AterNot" or-null="true"/><econdition field-name="debitCreditFlag"/><econdition field-name="originalCurrencyAmount" from="bankAccountTrans.transAmount.abs()"/><econdition field-name="originalCurrencyUomId" from="paymentMethod.currencyUomId"/><econdition field-name="transactionDate" operator="less-equals" from="bankAccountTrans.postedDate"/><econdition field-name="transactionDate" operator="greater-equals" from="lookBackTs"/></entity-find><set field="acctgTransAndEntry" from="ataeList ? ataeList[0] : null"/></if></if><if condition="payment || acctgTransAndEntry"><service-call name="mantle.account.ReconciliationServices.reconcile#PaymentMethodTrans" in-map="[paymentMethodId:paymentMethodId, fitId:bankAccountTrans.fitId,                                 bankAccountTrans:bankAccountTrans, paymentId:payment?.paymentId, payment:payment,                                 acctgTransId:acctgTransAndEntry?.acctgTransId,                                 acctgTransEntrySeqId:acctgTransAndEntry?.acctgTransEntrySeqId, acctgTransEntry:acctgTransEntry]"/></if></iterate></actions></service>