<!--Service Location mantle.product.AssetServices.issue#Asset--><service verb="issue" noun="Asset"><in-parameters><parameter name="assetId" entity-name="mantle.product.asset.Asset" field-name="assetId"><description><![CDATA[Optional assetId, issues against this first if specified.]]></description></parameter><parameter name="shipmentId" required="true"/><parameter name="shipmentItemSourceId"/><parameter name="orderId"/><parameter name="orderItemSeqId"/><parameter name="invoiceId"/><parameter name="invoiceItemSeqId"/><parameter name="quantity" type="BigDecimal" required="true"/><parameter name="issuedDate" type="Timestamp" default="ec.user.nowTimestamp"/></in-parameters><out-parameters/><actions><if condition="assetId"><entity-find-one entity-name="mantle.product.asset.Asset" value-field="passedAsset"/></if><if condition="quantity == 0.0"><return message="Not issuing zero quantity for shipment ${shipmentId}"/></if><entity-find entity-name="mantle.shipment.ShipmentRouteSegment" list="srsList" limit="1"><econdition field-name="shipmentId"/><order-by field-name="shipmentRouteSegmentSeqId"/></entity-find><if condition="srsList"><set field="facilityId" from="srsList[0].originFacilityId"/></if><if condition="orderId && orderItemSeqId"><then><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"/><set field="productId" from="orderItem.productId"/><if condition="!facilityId"><entity-find-related-one value-field="orderItem" relationship-name="mantle.order.OrderPart" to-value-field="orderPart"/><set field="facilityId" from="orderPart.facilityId"/></if><if condition="!facilityId"><set field="productStore" from="orderHeader.'mantle.product.store.ProductStore'"/><set field="facilityId" from="productStore?.inventoryFacilityId"/></if><if condition="!facilityId"><return error="true" message="Could not find inventory facility for shipment ${shipmentId} and order item ${ec.resource.expand('OrderItemNameTemplate','')}"/></if></then><else><if condition="passedAsset != null"><then><set field="productId" from="passedAsset.productId"/><set field="facilityId" from="passedAsset.facilityId"/><set field="ownerPartyId" from="passedAsset.ownerPartyId"/></then><else><return error="true" message="Cannot issue asset for Shipment ${shipmentId} without either assetId or orderId and orderItemSeqId"/></else></if></else></if><if condition="!productId"><return error="true" message="Could not find product for shipment ${shipmentId} asset ${assetId} order item ${orderId}:${orderItemSeqId}"/></if><entity-find-one entity-name="mantle.facility.Facility" value-field="facility" cache="true"/><if condition="facility == null"><return error="true" message="Could not find facility to issue asset from for shipment ${shipmentId}"/></if><set field="baseMap" from="[productId:productId, orderId:orderId, orderItemSeqId:orderItemSeqId,                     invoiceId:invoiceId, invoiceItemSeqId:invoiceItemSeqId, shipmentId:shipmentId, shipmentItemSourceId:shipmentItemSourceId]"/><set field="ownerPartyId" from="productStore?.organizationPartyId"/><if condition="!ownerPartyId && orderItem != null"><if condition="orderPart == null"><set field="orderPart" from="orderItem.'mantle.order.OrderPart'"/></if><set field="ownerPartyId" from="orderPart.vendorPartyId"/></if><entity-find entity-name="mantle.product.asset.Asset" list="assetList"><econdition field-name="productId"/><econdition field-name="facilityId"/><econdition field-name="ownerPartyId" ignore-if-empty="true"/><econdition field-name="statusId" value="AstAvailable"/><order-by field-name="receivedDate"/></entity-find><if condition="passedAsset != null"><script><![CDATA[assetList.add(0, passedAsset)]]></script></if><if condition="assetList"><then><set field="quantityRemaining" from="quantity"/><iterate list="assetList" entry="asset"><set field="lastAsset" from="asset"/><if condition="quantityRemaining > 0.0"><set field="quantityToIssue" from="asset.availableToPromiseTotal > quantityRemaining ? quantityRemaining : asset.availableToPromiseTotal"/><if condition="quantityToIssue <= 0.0"><continue/></if><if condition="facility.assetAllowIssueOverQoh != 'Y'"><if condition="asset.quantityOnHandTotal <= 0.0"><continue/></if><if condition="quantityToIssue > asset.quantityOnHandTotal"><set field="quantityToIssue" from="asset.quantityOnHandTotal"/></if></if><set field="quantityRemaining" from="quantityRemaining - quantityToIssue"/><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="existingIssuanceList"><econdition field-name="shipmentId"/><econdition field-name="assetId" from="asset.assetId"/><econdition field-name="shipmentItemSourceId" from="baseMap.shipmentItemSourceId" ignore-if-empty="true"/><econdition field-name="orderId" from="baseMap.orderId" ignore-if-empty="true"/><econdition field-name="orderItemSeqId" from="baseMap.orderItemSeqId" ignore-if-empty="true"/><econdition field-name="invoiceId" from="baseMap.invoiceId" ignore-if-empty="true"/><econdition field-name="invoiceItemSeqId" from="baseMap.invoiceItemSeqId" ignore-if-empty="true"/></entity-find><if condition="existingIssuanceList"><then><set field="existingIssuance" from="existingIssuanceList[0]"/><service-call name="update#mantle.product.issuance.AssetIssuance" in-map="[assetIssuanceId:existingIssuance.assetIssuanceId, quantity:(existingIssuance.quantity + quantityToIssue)]"/><service-call name="mantle.product.AssetServices.change#AssetQuantity" in-map="baseMap + [assetId:asset.assetId,                                 effectiveDate:issuedDate, quantityDiff:-quantityToIssue, assetIssuanceId:existingIssuance.assetIssuanceId]"/></then><else><service-call name="create#mantle.product.issuance.AssetIssuance" out-map="[assetIssuanceId:issueOut.assetIssuanceId,assetId:issueOut.assetId,assetReservationId:issueOut.assetReservationId,orderId:issueOut.orderId,orderItemSeqId:issueOut.orderItemSeqId,shipmentId:issueOut.shipmentId,shipmentItemSourceId:issueOut.shipmentItemSourceId,productId:issueOut.productId,invoiceId:issueOut.invoiceId,invoiceItemSeqId:issueOut.invoiceItemSeqId,returnId:issueOut.returnId,returnItemSeqId:issueOut.returnItemSeqId,workEffortId:issueOut.workEffortId,facilityId:issueOut.facilityId,assetMaintenanceId:issueOut.assetMaintenanceId,issuedByUserId:issueOut.issuedByUserId,issuedDate:issueOut.issuedDate,quantity:issueOut.quantity,quantityCancelled:issueOut.quantityCancelled,acctgTransResultEnumId:issueOut.acctgTransResultEnumId,lastUpdatedStamp:issueOut.lastUpdatedStamp]" in-map="baseMap +                                 [assetId:asset.assetId, issuedDate:issuedDate, issuedByUserId:ec.user.userId, quantity:quantityToIssue]"/><service-call name="mantle.product.AssetServices.change#AssetQuantity" in-map="baseMap + [assetId:asset.assetId,                                 effectiveDate:issuedDate, quantityDiff:-quantityToIssue, assetIssuanceId:issueOut.assetIssuanceId]"/></else></if></if></iterate><if condition="quantityRemaining > 0.0 && lastAsset != null"><if condition="facility.assetAllowIssueOverQoh != 'Y'"><log level="warn" message="Unable to issue ${quantityRemaining} of ${quantity}, insufficient inventory on hand for shipment ${shipmentId} order ${orderId} asset ${assetId} lastAsset ${lastAsset?.assetId} ${lastAsset?.availableToPromiseTotal}/${lastAsset?.quantityOnHandTotal} stack: ${ec.artifactExecution.getStackNameString()}"/><return error="true" message="Unable to issue ${quantityRemaining} out of quantity requested ${quantity}, insufficient inventory on hand for shipment ${shipmentId}"/></if><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="existingIssuanceList"><econdition field-name="shipmentId"/><econdition field-name="assetId" from="lastAsset.assetId"/><econdition field-name="shipmentItemSourceId" from="baseMap.shipmentItemSourceId" ignore-if-empty="true"/><econdition field-name="orderId" from="baseMap.orderId" ignore-if-empty="true"/><econdition field-name="orderItemSeqId" from="baseMap.orderItemSeqId" ignore-if-empty="true"/><econdition field-name="invoiceId" from="baseMap.invoiceId" ignore-if-empty="true"/><econdition field-name="invoiceItemSeqId" from="baseMap.invoiceItemSeqId" ignore-if-empty="true"/></entity-find><if condition="existingIssuanceList"><then><set field="existingIssuance" from="existingIssuanceList[0]"/><service-call name="update#mantle.product.issuance.AssetIssuance" in-map="[assetIssuanceId:existingIssuance.assetIssuanceId, quantity:(existingIssuance.quantity + quantityRemaining)]"/><service-call name="mantle.product.AssetServices.change#AssetQuantity" in-map="baseMap + [assetId:asset.assetId,                                 effectiveDate:issuedDate, quantityDiff:-quantityRemaining, assetIssuanceId:existingIssuance.assetIssuanceId]"/></then><else><service-call name="create#mantle.product.issuance.AssetIssuance" out-map="[assetIssuanceId:issueOut.assetIssuanceId,assetId:issueOut.assetId,assetReservationId:issueOut.assetReservationId,orderId:issueOut.orderId,orderItemSeqId:issueOut.orderItemSeqId,shipmentId:issueOut.shipmentId,shipmentItemSourceId:issueOut.shipmentItemSourceId,productId:issueOut.productId,invoiceId:issueOut.invoiceId,invoiceItemSeqId:issueOut.invoiceItemSeqId,returnId:issueOut.returnId,returnItemSeqId:issueOut.returnItemSeqId,workEffortId:issueOut.workEffortId,facilityId:issueOut.facilityId,assetMaintenanceId:issueOut.assetMaintenanceId,issuedByUserId:issueOut.issuedByUserId,issuedDate:issueOut.issuedDate,quantity:issueOut.quantity,quantityCancelled:issueOut.quantityCancelled,acctgTransResultEnumId:issueOut.acctgTransResultEnumId,lastUpdatedStamp:issueOut.lastUpdatedStamp]" in-map="baseMap +                             [assetId:lastAsset.assetId, issuedDate:issuedDate, issuedByUserId:ec.user.userId, quantity:quantityRemaining]"/><service-call name="mantle.product.AssetServices.change#AssetQuantity" in-map="baseMap + [assetId:lastAsset.assetId,                             effectiveDate:issuedDate, quantityDiff:-quantityRemaining, assetIssuanceId:issueOut.assetIssuanceId]"/></else></if></if></then><else><if condition="facility.assetAllowIssueOverQoh != 'Y'"><return error="true" message="No assets found to issue to shipment ${shipmentId} with product ${productId} facility ${facilityId} and owner ${ownerPartyId}"/></if><service-call name="create#mantle.product.asset.Asset" out-map="[assetId:context.assetId,parentAssetId:context.parentAssetId,assetTypeEnumId:context.assetTypeEnumId,classEnumId:context.classEnumId,statusId:context.statusId,ownerPartyId:context.ownerPartyId,assetPoolId:context.assetPoolId,productId:context.productId,hasQuantity:context.hasQuantity,quantityOnHandTotal:context.quantityOnHandTotal,availableToPromiseTotal:context.availableToPromiseTotal,originalQuantity:context.originalQuantity,originalQuantityUomId:context.originalQuantityUomId,assetName:context.assetName,comments:context.comments,serialNumber:context.serialNumber,softIdentifier:context.softIdentifier,activationNumber:context.activationNumber,activationValidThru:context.activationValidThru,receivedDate:context.receivedDate,acquiredDate:context.acquiredDate,manufacturedDate:context.manufacturedDate,expectedEndOfLife:context.expectedEndOfLife,actualEndOfLife:context.actualEndOfLife,capacity:context.capacity,capacityUomId:context.capacityUomId,facilityId:context.facilityId,locationSeqId:context.locationSeqId,containerId:context.containerId,shipmentBoxTypeId:context.shipmentBoxTypeId,lotId:context.lotId,geoPointId:context.geoPointId,originId:context.originId,originFacilityId:context.originFacilityId,acquireOrderId:context.acquireOrderId,acquireOrderItemSeqId:context.acquireOrderItemSeqId,acquireWorkEffortId:context.acquireWorkEffortId,acquireShipmentId:context.acquireShipmentId,acquireCost:context.acquireCost,acquireCostUomId:context.acquireCostUomId,salvageValue:context.salvageValue,depreciation:context.depreciation,depreciationTypeEnumId:context.depreciationTypeEnumId,yearBeginDepreciation:context.yearBeginDepreciation,taxDepreciation:context.taxDepreciation,taxDepreciationTypeEnumId:context.taxDepreciationTypeEnumId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[assetTypeEnumId:'AstTpInventory', hasQuantity:'Y', statusId:'AstAvailable',                             productId:productId, facilityId:productStore.inventoryFacilityId,                             ownerPartyId:productStore?.organizationPartyId, receivedDate:ec.user.nowTimestamp,                             availableToPromiseTotal:0, quantityOnHandTotal: 0]"/><service-call name="create#mantle.product.issuance.AssetIssuance" out-map="[assetIssuanceId:issueOut.assetIssuanceId,assetId:issueOut.assetId,assetReservationId:issueOut.assetReservationId,orderId:issueOut.orderId,orderItemSeqId:issueOut.orderItemSeqId,shipmentId:issueOut.shipmentId,shipmentItemSourceId:issueOut.shipmentItemSourceId,productId:issueOut.productId,invoiceId:issueOut.invoiceId,invoiceItemSeqId:issueOut.invoiceItemSeqId,returnId:issueOut.returnId,returnItemSeqId:issueOut.returnItemSeqId,workEffortId:issueOut.workEffortId,facilityId:issueOut.facilityId,assetMaintenanceId:issueOut.assetMaintenanceId,issuedByUserId:issueOut.issuedByUserId,issuedDate:issueOut.issuedDate,quantity:issueOut.quantity,quantityCancelled:issueOut.quantityCancelled,acctgTransResultEnumId:issueOut.acctgTransResultEnumId,lastUpdatedStamp:issueOut.lastUpdatedStamp]" in-map="baseMap + [assetId:assetId, issuedDate:issuedDate, issuedByUserId:ec.user.userId, quantity:quantity]"/><service-call name="create#mantle.product.asset.AssetDetail" in-map="baseMap + [assetId:assetId,                         effectiveDate:issuedDate, quantityOnHandDiff:-quantity,                         availableToPromiseDiff:-quantity, assetIssuanceId:issueOut.assetIssuanceId]"/></else></if></actions></service>