<!--Service Location mantle.account.PaymentServices.authorize#OrderPayments--><service verb="authorize" noun="OrderPayments"><in-parameters><parameter name="orderId" required="true"/><parameter name="cardSecurityCodeByPaymentId" type="Map"/></in-parameters><out-parameters><parameter name="authFailed" type="Boolean"/><parameter name="totalAuthorized" type="BigDecimal"/></out-parameters><actions><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><if condition="orderHeader == null"><return error="true" message="Order ${orderId} not found"/></if><if condition="!orderHeader.productStoreId"><return/></if><set field="authFailed" from="false"/><set field="totalAuthorized" from="0.0"/><entity-find entity-name="mantle.account.payment.Payment" list="paymentList"><econdition field-name="orderId"/></entity-find><iterate list="paymentList" entry="payment"><if condition="payment.statusId in ['PmntCancelled', 'PmntVoid']"><continue/></if><if condition="payment.statusId in ['PmntAuthorized', 'PmntDelivered', 'PmntConfirmed']"><set field="totalAuthorized" from="totalAuthorized + (payment.amount ?: 0.0)"/><continue/></if><if condition="!payment.paymentMethodId && !payment.finAccountId"><log message="Not authorizing payment ${payment.paymentId} with no paymentMethodId or finAccountId"/><continue/></if><service-call name="mantle.account.PaymentServices.authorize#StorePayment" out-map="[paymentGatewayResponseId:authOut.paymentGatewayResponseId,paymentGatewayResponse:authOut.paymentGatewayResponse]" in-map="[paymentId:payment.paymentId, payment:payment, productStoreId:orderHeader.productStoreId,                         cardSecurityCode:cardSecurityCodeByPaymentId?.get(payment.paymentId)]"/><entity-find-one entity-name="mantle.account.payment.Payment" value-field="updatedPayment"><field-map field-name="paymentId" from="payment.paymentId"/></entity-find-one><if condition="!authOut.paymentGatewayResponse && !(updatedPayment.statusId in ['PmntAuthorized', 'PmntDelivered', 'PmntConfirmed'])"><set field="authFailed" from="true"/><log level="warn" message="Authorize Payment [${payment.paymentId}] failed with no PaymentGatewayResponse and status after is ${updatedPayment.statusId}"/><service-call name="mantle.account.PaymentServices.get#PaymentDescription" in-map="[paymentId:payment.paymentId]" out-map="[paymentDescription:pmtDescOut.paymentDescription]"/><message><![CDATA[Authorization failed for ${pmtDescOut.paymentDescription}]]></message></if><if condition="authOut.paymentGatewayResponse"><if condition="authOut.paymentGatewayResponse.resultSuccess == 'Y'"><then><set field="totalAuthorized" from="totalAuthorized + authOut.paymentGatewayResponse.amount"/></then><else><set field="authFailed" from="true"/><service-call name="mantle.account.PaymentServices.get#PaymentDescription" in-map="[paymentId:payment.paymentId]" out-map="[paymentDescription:pmtDescOut.paymentDescription]"/><if condition="authOut.paymentGatewayResponse.resultDeclined == 'Y'"><message><![CDATA[${pmtDescOut.paymentDescription} was declined]]></message></if><if condition="authOut.paymentGatewayResponse.resultNsf == 'Y'"><message><![CDATA[${pmtDescOut.paymentDescription} has insufficient funds]]></message></if><if condition="authOut.paymentGatewayResponse.resultBadExpire == 'Y'"><message><![CDATA[${pmtDescOut.paymentDescription} has an invalid expiration date]]></message></if><if condition="authOut.paymentGatewayResponse.resultBadCardNumber == 'Y'"><message><![CDATA[${pmtDescOut.paymentDescription} has an invalid card number]]></message></if></else></if></if></iterate><if condition="orderHeader.statusId == 'OrderPlaced' && totalAuthorized >= orderHeader.grandTotal"><service-call name="mantle.order.OrderServices.autoApprove#Order" in-map="[orderId:orderId]"/></if></actions></service>