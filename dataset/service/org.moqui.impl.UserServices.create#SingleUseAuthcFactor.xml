<!--Service Location org.moqui.impl.UserServices.create#SingleUseAuthcFactor--><service verb="create" noun="SingleUseAuthcFactor"><in-parameters><parameter name="userId" required="true"/><parameter name="fromFactorId"/><parameter name="thruDate" type="Timestamp" default="ec.user.nowTimestamp + 1"/></in-parameters><out-parameters><parameter name="factorId"/><parameter name="code"/><parameter name="thruDate"/></out-parameters><actions><if condition="fromFactorId"><entity-find entity-name="moqui.security.UserAuthcFactor" list="userAuthcFactorList"><date-filter/><econdition field-name="userId"/><econdition field-name="fromFactorId"/><econdition field-name="factorTypeEnumId" value="UafSingleUse"/></entity-find><iterate list="userAuthcFactorList" entry="userAuthcFactor"><service-call name="update#moqui.security.UserAuthcFactor" in-map="[factorId:userAuthcFactor.factorId, thruDate:ec.user.nowTimestamp]"/></iterate></if><set field="factorTypeEnumId" value="UafSingleUse"/><set field="fromDate" from="ec.user.nowTimestamp"/><set field="code" from="new java.security.SecureRandom().nextInt(999999).toString().padLeft(6,'0')"/><set field="factorOption" from="ec.ecfi.getSimpleHash(code, 'SaltySalt')"/><service-call name="create#moqui.security.UserAuthcFactor" in-map="context" out-map="[factorId:context.factorId,userId:context.userId,fromFactorId:context.fromFactorId,factorTypeEnumId:context.factorTypeEnumId,fromDate:context.fromDate,thruDate:context.thruDate,factorOption:context.factorOption,needsValidation:context.needsValidation,lastUpdatedStamp:context.lastUpdatedStamp]"/></actions></service>