<!--Service Location mantle.work.ManufacturingServices.create#ShipmentAssemblyWorkEffort--><service verb="create" noun="ShipmentAssemblyWorkEffort"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="actualStartDate" default="ec.user.nowTimestamp"/></in-parameters><out-parameters><parameter name="assemblyWorkEffortId"/></out-parameters><actions><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment" for-update="true"/><if condition="shipment.assemblyWorkEffortId"><set field="assemblyWorkEffortId" from="shipment.assemblyWorkEffortId"/><return type="warning" message="Assembly Task ${shipment.assemblyWorkEffortId} already exists for Shipment ${shipmentId}"/></if><entity-find entity-name="mantle.shipment.ShipmentItemAssocView" list="assemblyItemList"><date-filter/><econdition field-name="shipmentId"/><econdition field-name="itemProductTypeEnumId" value="PtPickAssembly"/><econdition field-name="productAssocTypeEnumId" value="PatMfgBom"/><order-by field-name="productId,productIdTo"/></entity-find><if condition="!assemblyItemList"><return type="warning" message="Not creating Assembly Task for Shipment ${shipmentId} with no Pick Assembly products"/></if><entity-find entity-name="mantle.shipment.ShipmentRouteSegment" list="srsList"><econdition field-name="shipmentId"/><order-by field-name="shipmentRouteSegmentSeqId"/></entity-find><if condition="srsList"><set field="facilityId" from="srsList[0].originFacilityId"/></if><set field="workEffortName" value="Shipment ${shipmentId} Assembly"/><service-call name="create#mantle.work.effort.WorkEffort" out-map="[workEffortId:createWeOut.workEffortId,universalId:createWeOut.universalId,sourceReferenceId:createWeOut.sourceReferenceId,parentWorkEffortId:createWeOut.parentWorkEffortId,rootWorkEffortId:createWeOut.rootWorkEffortId,workEffortTypeEnumId:createWeOut.workEffortTypeEnumId,purposeEnumId:createWeOut.purposeEnumId,visibilityEnumId:createWeOut.visibilityEnumId,resolutionEnumId:createWeOut.resolutionEnumId,workTypeEnumId:createWeOut.workTypeEnumId,ownerPartyId:createWeOut.ownerPartyId,productStoreId:createWeOut.productStoreId,statusId:createWeOut.statusId,statusFlowId:createWeOut.statusFlowId,priority:createWeOut.priority,sendNotificationEmail:createWeOut.sendNotificationEmail,percentComplete:createWeOut.percentComplete,revisionNumber:createWeOut.revisionNumber,workEffortName:createWeOut.workEffortName,description:createWeOut.description,location:createWeOut.location,facilityId:createWeOut.facilityId,infoUrl:createWeOut.infoUrl,shipmentMethodEnumId:createWeOut.shipmentMethodEnumId,estimatedStartDate:createWeOut.estimatedStartDate,estimatedCompletionDate:createWeOut.estimatedCompletionDate,actualStartDate:createWeOut.actualStartDate,actualCompletionDate:createWeOut.actualCompletionDate,recurStartCron:createWeOut.recurStartCron,recurLimit:createWeOut.recurLimit,recurEndDate:createWeOut.recurEndDate,allDayStart:createWeOut.allDayStart,allDayEnd:createWeOut.allDayEnd,estimatedWorkTime:createWeOut.estimatedWorkTime,estimatedSetupTime:createWeOut.estimatedSetupTime,remainingWorkTime:createWeOut.remainingWorkTime,actualWorkTime:createWeOut.actualWorkTime,actualSetupTime:createWeOut.actualSetupTime,totalTimeAllowed:createWeOut.totalTimeAllowed,estimatedWorkDuration:createWeOut.estimatedWorkDuration,actualWorkDuration:createWeOut.actualWorkDuration,actualBreakDuration:createWeOut.actualBreakDuration,timeUomId:createWeOut.timeUomId,actualCost:createWeOut.actualCost,actualClientCost:createWeOut.actualClientCost,totalClientCostAllowed:createWeOut.totalClientCostAllowed,costUomId:createWeOut.costUomId,activityId:createWeOut.activityId,lastUpdatedStamp:createWeOut.lastUpdatedStamp]" in-map="[workEffortTypeEnumId:'WetTask', purposeEnumId:'WepPickAssembly', statusId:'WeInProgress',                         ownerPartyId:shipment.fromPartyId, productStoreId:shipment.productStoreId, facilityId:facilityId,                         workEffortName:workEffortName, actualStartDate:actualStartDate]"/><set field="assemblyWorkEffortId" from="createWeOut.workEffortId"/><set field="shipment.assemblyWorkEffortId" from="assemblyWorkEffortId"/><entity-update value-field="shipment"/><set field="assemblyIdsHandled" from="new HashSet()"/><set field="componentQtyById" from="[:]"/><iterate list="assemblyItemList" entry="assemblyItem"><if condition="!assemblyIdsHandled.contains(assemblyItem.productId)"><service-call name="create#mantle.work.effort.WorkEffortProduct" in-map="[workEffortId:assemblyWorkEffortId, productId:assemblyItem.productId, fromDate:new Timestamp(0),                                 typeEnumId:'WeptProduce', statusId:'WepdCreated', estimatedQuantity:assemblyItem.quantity]"/><script><![CDATA[assemblyIdsHandled.add(assemblyItem.productId)]]></script></if><set field="curCompQty" from="(assemblyItem.quantity ?: 0.0) * (assemblyItem.componentQuantity ?: 1.0)"/><script><![CDATA[componentQtyById.put(assemblyItem.toProductId, (componentQtyById.get(assemblyItem.toProductId) ?: 0.0) + curCompQty)]]></script></iterate><iterate list="componentQtyById" key="componentProductId" entry="componentQty"><service-call name="create#mantle.work.effort.WorkEffortProduct" in-map="[workEffortId:assemblyWorkEffortId, productId:componentProductId, fromDate:new Timestamp(0),                             typeEnumId:'WeptConsume', statusId:'WepdCreated', estimatedQuantity:componentQty]"/></iterate></actions></service>