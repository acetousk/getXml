<!--Service Location mantle.order.OrderServices.check#AvailableInventory--><service verb="check" noun="AvailableInventory"><in-parameters><parameter name="productId" required="true"/><parameter name="quantity" type="BigDecimal" required="true"/><parameter name="orderId" required="true"/><parameter name="orderPartSeqId" required="true"/><parameter name="orderItemSeqId"/><parameter name="requireInventory" type="Boolean"><description><![CDATA[If true make sure inventory is available, if false don't check. If null defer to ProductStore.requireInventory setting.]]></description></parameter><parameter name="orderHeader" type="EntityValue"/><parameter name="orderPart" type="EntityValue"/><parameter name="productStore" type="EntityValue"/></in-parameters><out-parameters/><actions><if condition="requireInventory == null"><if condition="productStore == null"><if condition="orderHeader == null"><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/></if><entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore" cache="true"><field-map field-name="productStoreId" from="orderHeader.productStoreId"/></entity-find-one></if><set field="requireInventory" from="productStore?.requireInventory == 'Y'"/></if><if condition="!requireInventory"><return/></if><service-call name="mantle.product.AssetServices.get#AvailableForOrder" out-map="[availableToPromiseTotal:availOut.availableToPromiseTotal]" in-map="[productId:productId, orderId:orderId, orderPartSeqId:orderPartSeqId, orderItemSeqId:orderItemSeqId,                         orderHeader:orderHeader, orderPart:orderPart]"/><set field="availableToPromiseTotal" from="availOut.availableToPromiseTotal"/><if condition="availableToPromiseTotal < quantity"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"/><if condition="availableToPromiseTotal <= 0.0"><then><message public="true" type="warning"><![CDATA[OrderInventoryNotAvailable]]></message><return error="true" message="Inventory not available, not updating order ${orderId}:${orderPartSeqId} product ${productId} for quantity ${quantity}"/></then><else><message public="true" type="warning"><![CDATA[OrderInventoryInsufficient]]></message><return error="true" message="Inventory insufficient, not updating order ${orderId}:${orderPartSeqId} product ${productId} for quantity ${quantity}"/></else></if></if></actions></service>