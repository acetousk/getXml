<!--Service Location mantle.order.ReturnServices.add#OrderItemToReturn--><service verb="add" noun="OrderItemToReturn"><in-parameters><parameter name="returnId" required="true"/><parameter name="orderId" required="false" type="java.lang.String" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="orderId"/><parameter name="orderItemSeqId" required="false" type="java.lang.String" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="orderItemSeqId"/><parameter name="parentItemSeqId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="parentItemSeqId"/><parameter name="returnReasonEnumId" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="returnReasonEnumId"/><parameter name="returnResponseEnumId" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="returnResponseEnumId"/><parameter name="responseImmediate" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="responseImmediate" default-value="N"/><parameter name="replacementProductId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="replacementProductId"/><parameter name="description" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="description"/><parameter name="inventoryStatusId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="inventoryStatusId"/><parameter name="returnPrice" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="returnPrice"/><parameter name="responseAmount" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="responseAmount"/><parameter name="externalId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="externalId"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.order.return.ReturnItem" field-name="lastUpdatedStamp"/><parameter name="statusId"/><parameter name="returnQuantity" type="BigDecimal" required="true"/><parameter name="allowAnyAmount" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="returnItemSeqId"/></out-parameters><actions><entity-find-one entity-name="mantle.order.return.ReturnHeader" value-field="returnHeader"/><if condition="returnHeader.statusId in ['ReturnCancelled', 'ReturnCompleted', 'ReturnManResp']"><return error="true" message="Cannot add items to return in status ${returnHeader.status?.description}"/></if><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"/><if condition="orderItem == null"><return error="true" message="Could not find Order Item ${orderId}:${orderItemSeqId}"/></if><service-call name="mantle.order.ReturnServices.calculate#OrderItemReturnable" in-map="context" out-map="[isProductItemType:context.isProductItemType,orderQuantity:context.orderQuantity,invoiceQuantity:context.invoiceQuantity,returnedQuantity:context.returnedQuantity,returnableQuantity:context.returnableQuantity,orderTotal:context.orderTotal,invoiceTotal:context.invoiceTotal,returnedTotal:context.returnedTotal,returnableTotal:context.returnableTotal]"/><set field="returnPrice" from="returnPrice ?: orderItem.unitAmount ?: 0.0"/><set field="returnTotal" from="responseAmount != null ? responseAmount :                     ((returnQuantity != null ? returnQuantity : 1.0) * returnPrice).setScale(2, BigDecimal.ROUND_HALF_UP)"/><if condition="isProductItemType"><then><if condition="(returnedQuantity + returnQuantity) > invoiceQuantity"><return error="true" message="Tried to return more than is returnable; quantity billed ${invoiceQuantity}, already returned ${returnedQuantity}, tried to return ${returnQuantity}"/></if></then><else><if condition="(returnedTotal + returnTotal) > invoiceTotal"><if condition="allowAnyAmount"><then><log level="warn" message="Adding item to return with total more than is returnable for non-product item; total billed ${ec.l10n.format(invoiceTotal, '#,##0.00')}, already returned ${ec.l10n.format(returnedTotal, '#,##0.00')} for Order Item ${orderId}:${orderItemSeqId}, return total ${ec.l10n.format(returnTotal, '#,##0.00')} on Return ${returnId}"/></then><else><return error="true" message="Tried to return total more than is returnable for non-product item; total billed ${ec.l10n.format(invoiceTotal, '#,##0.00')}, already returned ${ec.l10n.format(returnedTotal, '#,##0.00')} for Order Item ${orderId}:${orderItemSeqId}, tried to return ${ec.l10n.format(returnTotal, '#,##0.00')} on Return ${returnId}"/></else></if></if></else></if><if condition="!statusId"><set field="statusId" from="returnHeader.statusId"/></if><if condition="statusId in ['ReturnShipped', 'ReturnReceived']"><set field="statusId" value="ReturnApproved"/></if><set field="itemTypeEnumId" from="orderItem.itemTypeEnumId"/><set field="productId" from="orderItem.productId"/><if condition="!description"><set field="description" from="orderItem.itemDescription"/></if><service-call name="create#mantle.order.return.ReturnItem" in-map="context" out-map="[returnId:context.returnId,returnItemSeqId:context.returnItemSeqId,parentItemSeqId:context.parentItemSeqId,returnReasonEnumId:context.returnReasonEnumId,returnResponseEnumId:context.returnResponseEnumId,responseImmediate:context.responseImmediate,itemTypeEnumId:context.itemTypeEnumId,productId:context.productId,replacementProductId:context.replacementProductId,description:context.description,orderId:context.orderId,orderItemSeqId:context.orderItemSeqId,statusId:context.statusId,inventoryStatusId:context.inventoryStatusId,returnQuantity:context.returnQuantity,receivedQuantity:context.receivedQuantity,returnPrice:context.returnPrice,responseAmount:context.responseAmount,externalId:context.externalId,responseDate:context.responseDate,replacementOrderId:context.replacementOrderId,finAccountTransId:context.finAccountTransId,refundPaymentId:context.refundPaymentId,lastUpdatedStamp:context.lastUpdatedStamp]"/><if condition="returnResponseEnumId == 'RrspReplace'"><return/></if><set field="childOrderItemList" from="orderItem.'Child#mantle.order.OrderItem'"/><order-map-list list="childOrderItemList"><order-by field-name="orderItemSeqId"/></order-map-list><iterate list="childOrderItemList" entry="childOrderItem"><service-call name="mantle.order.ReturnServices.calculate#OrderItemReturnable" out-map="[isProductItemType:childOut.isProductItemType,orderQuantity:childOut.orderQuantity,invoiceQuantity:childOut.invoiceQuantity,returnedQuantity:childOut.returnedQuantity,returnableQuantity:childOut.returnableQuantity,orderTotal:childOut.orderTotal,invoiceTotal:childOut.invoiceTotal,returnedTotal:childOut.returnedTotal,returnableTotal:childOut.returnableTotal]" in-map="[orderId:childOrderItem.orderId, orderItemSeqId:childOrderItem.orderItemSeqId, orderItem:childOrderItem]"/><if condition="childOut.isProductItemType"><continue/></if><set field="childRetAmount" from="0.0"/><if condition="isProductItemType"><then><if condition="returnQuantity >= (invoiceQuantity - returnedQuantity)"><then><set field="childRetAmount" from="childOut.returnableTotal"/></then><else><set field="parentRatio" from="(returnQuantity as BigDecimal).divide(invoiceQuantity as BigDecimal, 6, BigDecimal.ROUND_HALF_UP)"/><set field="childRetAmount" from="(childOut.invoiceTotal * parentRatio).setScale(2, BigDecimal.ROUND_HALF_UP)"/></else></if></then><else><if condition="returnTotal.abs() >= (invoiceTotal - returnedTotal).abs()"><then><set field="childRetAmount" from="childOut.returnableTotal"/></then><else><set field="parentRatio" from="(returnTotal as BigDecimal).divide(invoiceTotal as BigDecimal, 6, BigDecimal.ROUND_HALF_UP).abs()"/><set field="childRetAmount" from="(childOut.invoiceTotal * parentRatio).setScale(2, BigDecimal.ROUND_HALF_UP)"/></else></if></else></if><if condition="childRetAmount != 0.0"><service-call name="create#mantle.order.return.ReturnItem" in-map="[returnId:returnId, parentItemSeqId:returnItemSeqId,                             statusId:statusId, returnReasonEnumId:returnReasonEnumId, returnResponseEnumId:returnResponseEnumId,                             responseImmediate:responseImmediate, orderId:childOrderItem.orderId, orderItemSeqId:childOrderItem.orderItemSeqId,                             itemTypeEnumId:childOrderItem.itemTypeEnumId, description:childOrderItem.itemDescription,                             returnQuantity:1.0, returnPrice:childRetAmount, responseAmount:responseAmount]"/></if></iterate></actions></service>