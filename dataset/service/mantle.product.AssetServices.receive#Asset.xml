<!--Service Location mantle.product.AssetServices.receive#Asset--><service verb="receive" noun="Asset"><in-parameters><parameter name="assetId" entity-name="mantle.product.asset.Asset" field-name="assetId"><description><![CDATA[If specified receives to that Asset (uncommon) otherwise creates a new one.]]></description></parameter><parameter name="parentAssetId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="parentAssetId"/><parameter name="assetTypeEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="assetTypeEnumId"><description><![CDATA[Defaults to Product.assetTypeEnumId]]></description></parameter><parameter name="classEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="classEnumId"><description><![CDATA[Defaults to Product.assetClassEnumId]]></description></parameter><parameter name="statusId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="statusId"><description><![CDATA[If assetTypeEnumId == AstTpInventory then defaults to AstAvailable,
                otherwise defaults to AstInStorage unless there is a FacilityLocationType.autoStatusId that applies and that will override this parameter.]]></description></parameter><parameter name="ownerPartyId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="ownerPartyId"><description><![CDATA[If not passed in and orderId and orderItemSeqId are then uses
                OrderPart.customerPartyId, otherwise uses Facility.ownerPartyId.]]></description></parameter><parameter name="assetPoolId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="assetPoolId"/><parameter name="productId" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="productId" default="defaultProductId"/><parameter name="hasQuantity" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="hasQuantity"/><parameter name="quantityOnHandTotal" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="quantityOnHandTotal"/><parameter name="availableToPromiseTotal" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="availableToPromiseTotal"/><parameter name="originalQuantity" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="originalQuantity"/><parameter name="originalQuantityUomId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="originalQuantityUomId"/><parameter name="assetName" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="assetName"><description><![CDATA[Defaults to OrderItem.itemDescription if available.]]></description></parameter><parameter name="comments" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="comments"/><parameter name="serialNumber" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="serialNumber"/><parameter name="softIdentifier" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="softIdentifier"/><parameter name="activationNumber" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="activationNumber"/><parameter name="activationValidThru" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="activationValidThru"/><parameter name="receivedDate" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="receivedDate"><description><![CDATA[If statusId == AstIncoming then defaults to null, otherwise defaults to now.]]></description></parameter><parameter name="acquiredDate" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquiredDate"/><parameter name="manufacturedDate" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="manufacturedDate"/><parameter name="expectedEndOfLife" type="java.sql.Date" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="expectedEndOfLife"/><parameter name="actualEndOfLife" type="java.sql.Date" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="actualEndOfLife"/><parameter name="capacity" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="capacity"/><parameter name="capacityUomId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="capacityUomId"/><parameter name="facilityId" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="facilityId"/><parameter name="locationSeqId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="locationSeqId"/><parameter name="containerId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="containerId"><description><![CDATA[Put the new Asset in this Container, set its Facility and Location if not set.]]></description></parameter><parameter name="shipmentBoxTypeId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="shipmentBoxTypeId"/><parameter name="lotId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="lotId"/><parameter name="geoPointId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="geoPointId"/><parameter name="originId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="originId"/><parameter name="originFacilityId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="originFacilityId"/><parameter name="acquireOrderId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquireOrderId"/><parameter name="acquireOrderItemSeqId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquireOrderItemSeqId"/><parameter name="acquireWorkEffortId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquireWorkEffortId"/><parameter name="acquireShipmentId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquireShipmentId"/><parameter name="acquireCost" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquireCost"/><parameter name="acquireCostUomId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="acquireCostUomId"/><parameter name="salvageValue" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="salvageValue"/><parameter name="depreciation" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="depreciation"/><parameter name="depreciationTypeEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="depreciationTypeEnumId"/><parameter name="yearBeginDepreciation" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="yearBeginDepreciation"/><parameter name="taxDepreciation" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="taxDepreciation"/><parameter name="taxDepreciationTypeEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="taxDepreciationTypeEnumId"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.product.asset.Asset" field-name="lastUpdatedStamp"/><parameter name="defaultProductId"><description><![CDATA[Field for special forms, if passed can be used as a default for the productId parameter.]]></description></parameter><parameter name="quantity" type="BigDecimal" required="true"/><parameter name="shipmentId"/><parameter name="shipmentItemSourceId"/><parameter name="shipmentPackageSeqId"/><parameter name="orderId"/><parameter name="orderItemSeqId"/><parameter name="returnId"/><parameter name="returnItemSeqId"/><parameter name="workEffortId"/><parameter name="noProduceProduct" default-value="add"><description><![CDATA[If the asset has a productId that is
                not one of the WorkEffort produce products, "add" it, "ignore" it, or return an "error"?]]></description></parameter><parameter name="containerTypeEnumId"><description><![CDATA[If specified and there is no containerId create a
                Container of this type (with Facility and Location) and put Asset in it (set Asset.containerId).]]></description></parameter><parameter name="containerSerialNumber"><description><![CDATA[Lookup Container with this ID as an alternative to the
                containerId (if not specified), if none found create a Container with this serialNumber.]]></description></parameter><parameter name="quantityRejected" type="BigDecimal"/><parameter name="rejectionReasonEnumId"/><parameter name="lotNumber"><description><![CDATA[If specified and no there is no lotId create a Lot with this number and the
                expirationDate and mfgPartyId parameters.]]></description></parameter><parameter name="expirationDate" type="Date"><description><![CDATA[Used when creating a lot, defaults to expectedEndOfLife.
                If this is specified and no expectedEndOfLife is then set expectedEndOfLife to this (regardless of whether Lot is created).]]></description></parameter><parameter name="mfgPartyId"/></in-parameters><out-parameters><parameter name="assetId" entity-name="mantle.product.asset.Asset" field-name="assetId"/><parameter name="assetReceiptId"/><parameter name="assetDetailId"/></out-parameters><actions><if condition="quantity == 0.0"><return type="warning" message="Not receiving zero quantity for Product ${productId}"/></if><entity-find-one entity-name="mantle.product.Product" value-field="product"><field-map field-name="productId"/></entity-find-one><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"><field-map field-name="orderId"/></entity-find-one><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"><field-map field-name="orderId"/><field-map field-name="orderItemSeqId"/></entity-find-one><entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort"><field-map field-name="workEffortId"/></entity-find-one><entity-find-one entity-name="mantle.facility.Facility" value-field="facility"><field-map field-name="facilityId"/></entity-find-one><set field="assetTypeEnumId" from="assetTypeEnumId ?: (product.assetTypeEnumId ?: 'AstTpInventory')"/><set field="classEnumId" from="classEnumId ?: product.assetClassEnumId"/><if condition="!ownerPartyId && orderItem"><set field="orderPart" from="orderItem?.'mantle.order.OrderPart'"/><set field="ownerPartyId" from="orderPart?.customerPartyId"/></if><if condition="!ownerPartyId"><set field="ownerPartyId" from="workEffort?.ownerPartyId"/></if><if condition="!ownerPartyId"><set field="ownerPartyId" from="facility?.ownerPartyId"/></if><if condition="locationSeqId"><then><entity-find-one entity-name="mantle.facility.FacilityLocation" value-field="checkFacLoc"><field-map field-name="facilityId"/><field-map field-name="locationSeqId"/></entity-find-one><if condition="checkFacLoc == null"><return error="true" message="Location [${locationSeqId}] is not valid in facility ${ec.resource.expand('FacilityNameTemplate', '', asset?.facility)}"/></if><if condition="checkFacLoc.locationTypeEnumId"><entity-find-one entity-name="mantle.facility.FacilityLocationType" value-field="facLocType"><field-map field-name="facilityId"/><field-map field-name="locationTypeEnumId" from="checkFacLoc.locationTypeEnumId"/></entity-find-one><set field="autoStatusId" from="facLocType?.autoStatusId"/><if condition="autoStatusId"><set field="statusId" from="autoStatusId"/></if></if></then><else><if condition="facility?.assetInventoryLocRequire == 'Y' && assetTypeEnumId == 'AstTpInventory'"><return error="true" message="No location specified, Facility ${facilityId} requires a location for inventory"/></if></else></if><if condition="!statusId"><set field="statusId" from="assetTypeEnumId == 'AstTpInventory' ? 'AstAvailable' : 'AstInStorage'"/></if><if condition="!receivedDate && statusId != 'AstIncoming'"><set field="receivedDate" from="ec.user.nowTimestamp"/></if><if condition="serialNumber"><then><if condition="quantityRejected != null && quantityRejected != 0.0"><then><set field="quantity" from="0.0"/><set field="quantityRejected" from="1.0"/></then><else><set field="quantity" from="1.0"/><set field="quantityRejected" from="null"/></else></if><set field="hasQuantity" value="N"/></then><else><set field="hasQuantity" from="quantity > 1.0 ? 'Y' : 'N'"/></else></if><set field="assetName" from="assetName ?: orderItem?.itemDescription"/><if condition="expectedEndOfLife == null"><set field="expectedEndOfLife" from="expirationDate"/></if><if condition="lotId"><then><entity-find-one entity-name="mantle.product.asset.Lot" value-field="lot"><field-map field-name="lotId"/></entity-find-one><if condition="manufacturedDate == null"><set field="manufacturedDate" from="lot.manufacturedDate"/></if><if condition="expectedEndOfLife == null"><set field="expectedEndOfLife" from="lot.expirationDate"/></if></then><else-if condition="lotNumber"><entity-find entity-name="mantle.product.asset.Lot" list="existingLots"><econdition field-name="lotNumber"/><econdition field-name="mfgPartyId"/></entity-find><if condition="existingLots"><then><set field="lotId" from="existingLots[0].lotId"/><if condition="expectedEndOfLife == null"><set field="expectedEndOfLife" from="existingLots[0].expirationDate"/></if></then><else><if condition="!mfgPartyId && shipmentId"><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/><set field="mfgPartyId" from="shipment.fromPartyId"/></if><if condition="expirationDate == null"><set field="expirationDate" from="expectedEndOfLife"/></if><service-call name="create#mantle.product.asset.Lot" out-map="[lotId:context.lotId,mfgPartyId:context.mfgPartyId,lotNumber:context.lotNumber,quantity:context.quantity,manufacturedDate:context.manufacturedDate,expirationDate:context.expirationDate,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[lotNumber:lotNumber, mfgPartyId:mfgPartyId, manufacturedDate:manufacturedDate, expirationDate:expirationDate]"/></else></if></else-if></if><if condition="!containerId && (containerTypeEnumId || containerSerialNumber)"><service-call name="create#mantle.product.asset.Container" out-map="[containerId:context.containerId,serialNumber:context.serialNumber,containerTypeEnumId:context.containerTypeEnumId,createdDate:context.createdDate,description:context.description,externalId:context.externalId,facilityId:context.facilityId,locationSeqId:context.locationSeqId,geoPointId:context.geoPointId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[containerTypeEnumId:containerTypeEnumId, serialNumber:containerSerialNumber,                             facilityId:facilityId, locationSeqId:locationSeqId, geoPointId:geoPointId]"/></if><set field="originalQuantity" from="originalQuantity ?: quantity"/><if condition="!assetId"><then><service-call name="create#mantle.product.asset.Asset" out-map="[assetId:context.assetId,parentAssetId:context.parentAssetId,assetTypeEnumId:context.assetTypeEnumId,classEnumId:context.classEnumId,statusId:context.statusId,ownerPartyId:context.ownerPartyId,assetPoolId:context.assetPoolId,productId:context.productId,hasQuantity:context.hasQuantity,quantityOnHandTotal:context.quantityOnHandTotal,availableToPromiseTotal:context.availableToPromiseTotal,originalQuantity:context.originalQuantity,originalQuantityUomId:context.originalQuantityUomId,assetName:context.assetName,comments:context.comments,serialNumber:context.serialNumber,softIdentifier:context.softIdentifier,activationNumber:context.activationNumber,activationValidThru:context.activationValidThru,receivedDate:context.receivedDate,acquiredDate:context.acquiredDate,manufacturedDate:context.manufacturedDate,expectedEndOfLife:context.expectedEndOfLife,actualEndOfLife:context.actualEndOfLife,capacity:context.capacity,capacityUomId:context.capacityUomId,facilityId:context.facilityId,locationSeqId:context.locationSeqId,containerId:context.containerId,shipmentBoxTypeId:context.shipmentBoxTypeId,lotId:context.lotId,geoPointId:context.geoPointId,originId:context.originId,originFacilityId:context.originFacilityId,acquireOrderId:context.acquireOrderId,acquireOrderItemSeqId:context.acquireOrderItemSeqId,acquireWorkEffortId:context.acquireWorkEffortId,acquireShipmentId:context.acquireShipmentId,acquireCost:context.acquireCost,acquireCostUomId:context.acquireCostUomId,salvageValue:context.salvageValue,depreciation:context.depreciation,depreciationTypeEnumId:context.depreciationTypeEnumId,yearBeginDepreciation:context.yearBeginDepreciation,taxDepreciation:context.taxDepreciation,taxDepreciationTypeEnumId:context.taxDepreciationTypeEnumId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="context + [quantityOnHandTotal:0, availableToPromiseTotal:0,                             acquiredDate:(orderHeader?.placedDate ?: ec.user.nowTimestamp),                             acquireOrderId:orderId, acquireOrderItemSeqId:orderItemSeqId,                             acquireShipmentId:shipmentId, acquireCost:(acquireCost ?: orderItem?.standardCost ?: orderItem?.unitAmount),                             acquireCostUomId:orderHeader?.currencyUomId, acquireWorkEffortId:workEffortId]"/></then><else><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset"/><set field="asset.originalQuantity" from="(asset.originalQuantity ?: 0) + originalQuantity"/><set field="asset.containerId" from="asset.containerId ?: containerId"/><set field="asset.assetPoolId" from="asset.assetPoolId ?: assetPoolId"/><set field="asset.geoPointId" from="asset.geoPointId ?: geoPointId"/><set field="asset.acquireWorkEffortId" from="asset.acquireWorkEffortId ?: workEffortId"/><set field="asset.acquireOrderId" from="asset.acquireOrderId ?: orderId"/><set field="asset.acquireOrderItemSeqId" from="asset.acquireOrderItemSeqId ?: orderItemSeqId"/><set field="asset.acquireShipmentId" from="asset.acquireShipmentId ?: shipmentId"/><set field="asset.acquireCost" from="asset.acquireCost ?: orderItem?.standardCost ?: orderItem?.unitAmount"/><set field="asset.acquireCostUomId" from="asset.acquireCostUomId ?: orderHeader?.currencyUomId"/><entity-update value-field="asset"/></else></if><service-call name="create#mantle.product.receipt.AssetReceipt" out-map="[assetReceiptId:context.assetReceiptId,assetId:context.assetId,productId:context.productId,orderId:context.orderId,orderItemSeqId:context.orderItemSeqId,shipmentId:context.shipmentId,shipmentItemSourceId:context.shipmentItemSourceId,shipmentPackageSeqId:context.shipmentPackageSeqId,invoiceId:context.invoiceId,invoiceItemSeqId:context.invoiceItemSeqId,returnId:context.returnId,returnItemSeqId:context.returnItemSeqId,workEffortId:context.workEffortId,receivedByUserId:context.receivedByUserId,receivedDate:context.receivedDate,itemDescription:context.itemDescription,quantityAccepted:context.quantityAccepted,quantityRejected:context.quantityRejected,rejectionReasonEnumId:context.rejectionReasonEnumId,acctgTransResultEnumId:context.acctgTransResultEnumId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[assetId:assetId, productId:productId, orderId:orderId, orderItemSeqId:orderItemSeqId,                         returnId:returnId, returnItemSeqId:returnItemSeqId, workEffortId:workEffortId,                         shipmentId:shipmentId, shipmentItemSourceId:shipmentItemSourceId,                         shipmentPackageSeqId:shipmentPackageSeqId, receivedByUserId:ec.user.userId,                         receivedDate:receivedDate, quantityAccepted:quantity, quantityRejected:quantityRejected,                         rejectionReasonEnumId:rejectionReasonEnumId]"/><if condition="orderId && orderItemSeqId && shipmentId"><entity-find entity-name="mantle.order.OrderItemBilling" list="orderItemBillingList"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/><econdition field-name="shipmentId"/><econdition field-name="assetReceiptId" from="null"/></entity-find><iterate list="orderItemBillingList" entry="orderItemBilling"><set field="orderItemBilling.assetReceiptId" from="assetReceiptId"/><entity-update value-field="orderItemBilling"/></iterate></if><set field="availableToPromiseDiff" from="quantity"/><service-call name="create#mantle.product.asset.AssetDetail" out-map="[assetDetailId:context.assetDetailId,assetId:context.assetId,effectiveDate:context.effectiveDate,quantityOnHandDiff:context.quantityOnHandDiff,availableToPromiseDiff:context.availableToPromiseDiff,unitCost:context.unitCost,assetReservationId:context.assetReservationId,otherAssetId:context.otherAssetId,shipmentId:context.shipmentId,productId:context.productId,orderId:context.orderId,orderItemSeqId:context.orderItemSeqId,returnId:context.returnId,returnItemSeqId:context.returnItemSeqId,workEffortId:context.workEffortId,assetMaintenanceId:context.assetMaintenanceId,assetIssuanceId:context.assetIssuanceId,assetReceiptId:context.assetReceiptId,physicalInventoryId:context.physicalInventoryId,physicalInventoryCountId:context.physicalInventoryCountId,varianceReasonEnumId:context.varianceReasonEnumId,description:context.description,acctgTransResultEnumId:context.acctgTransResultEnumId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[assetId:assetId, effectiveDate:(receivedDate ?: ec.user.nowTimestamp), quantityOnHandDiff:quantity,                         availableToPromiseDiff:availableToPromiseDiff, unitCost:orderItem?.unitAmount,                         shipmentId:shipmentId, productId:productId, returnId:returnId, returnItemSeqId:returnItemSeqId,                         workEffortId:workEffortId, assetReceiptId:assetReceiptId]"/><if condition="workEffortId"><entity-find entity-name="mantle.work.effort.WorkEffortProduct" list="produceProductList"><date-filter/><econdition field-name="workEffortId"/><econdition field-name="productId"/><econdition field-name="typeEnumId" value="WeptProduce"/></entity-find><if condition="!produceProductList"><if condition="noProduceProduct == 'error'"><then><message error="true"><![CDATA[Not issuing Asset [${assetId}], Product ${ec.resource.expand('ProductNameTemplate','',product)} is not a product to produce]]></message></then><else-if condition="noProduceProduct != 'ignore'"><service-call name="create#mantle.work.effort.WorkEffortProduct" in-map="[workEffortId:workEffortId,                             productId:productId, typeEnumId:'WeptProduce', estimatedQuantity:quantity]"/></else-if></if></if></if><service-call name="mantle.product.AssetServices.reserve#IncreasedAsset" in-map="[assetId:assetId]"/></actions></service>