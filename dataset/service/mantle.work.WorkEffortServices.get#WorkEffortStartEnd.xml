<!--Service Location mantle.work.WorkEffortServices.get#WorkEffortStartEnd--><service verb="get" noun="WorkEffortStartEnd"><in-parameters><parameter name="workEffortId" required="true"/><parameter name="workEffort" type="Map"/></in-parameters><out-parameters><parameter name="startDate" type="Timestamp"/><parameter name="endDate" type="Timestamp"/><parameter name="duration" type="BigDecimal"/><parameter name="allDay" type="Boolean"/></out-parameters><actions><if condition="workEffort == null"><entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort"/></if><set field="allDay" from="false"/><set field="startDate" from="workEffort.actualStartDate ?: workEffort.estimatedStartDate"/><if condition="startDate == null && workEffort.allDayStart != null"><set field="startDate" from="ec.l10n.parseTimestamp(workEffort.allDayStart.toString() + ' 00:00:00.000', 'yyyy-MM-dd HH:mm:ss.SSS')"/><set field="allDay" from="true"/></if><set field="endDate" from="workEffort.actualCompletionDate ?: workEffort.estimatedCompletionDate"/><if condition="endDate == null"><if condition="workEffort.allDayEnd != null"><then><set field="endDate" from="ec.l10n.parseTimestamp(workEffort.allDayEnd.toString() + ' 23:59:59.999', 'yyyy-MM-dd HH:mm:ss.SSS')"/><set field="allDay" from="true"/></then><else-if condition="allDay"><set field="endDate" from="ec.l10n.parseTimestamp(workEffort.allDayStart.toString() + ' 23:59:59.999', 'yyyy-MM-dd HH:mm:ss.SSS')"/></else-if></if></if><if condition="endDate == null"><set field="duration" from="(workEffort.actualWorkDuration ?: workEffort.estimatedWorkDuration) ?: workEffort.estimatedWorkTime"/><if condition="duration"><service-call name="org.moqui.impl.BasicServices.convert#Uom" out-map="[convertedAmount:convertDurOut.convertedAmount]" in-map="[uomId:(workEffort.timeUomId ?: 'TF_hr'), toUomId:'TF_min', amount:duration]"/><set field="durationMinutes" from="(convertDurOut.convertedAmount ?: 60) as int"/><script><![CDATA[Calendar endCal = ec.user.getCalendarSafe()
                        endCal.setTimeInMillis(startDate.time)
                        endCal.add(Calendar.MINUTE, durationMinutes)
                        endDate = new Timestamp(endCal.getTimeInMillis())]]></script></if></if></actions></service>