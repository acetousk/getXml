<!--Service Location org.moqui.impl.InstanceServices.create#AppInstance--><service verb="create" noun="AppInstance"><in-parameters><parameter name="instanceImageId" required="true" entity-name="moqui.server.instance.AppInstance" field-name="instanceImageId"/><parameter name="instanceHostId" entity-name="moqui.server.instance.AppInstance" field-name="instanceHostId"/><parameter name="databaseHostId" entity-name="moqui.server.instance.AppInstance" field-name="databaseHostId"/><parameter name="hostName" required="true" entity-name="moqui.server.instance.AppInstance" field-name="hostName"/><parameter name="instanceName" default="hostName.replace('.', '_')" entity-name="moqui.server.instance.AppInstance" field-name="instanceName"/></in-parameters><out-parameters><parameter name="appInstanceId" entity-name="moqui.server.instance.AppInstance" field-name="appInstanceId"/></out-parameters><actions><entity-find-one entity-name="moqui.server.instance.InstanceImage" value-field="instanceImage"/><if condition="instanceImage == null"><return error="true" message="InstanceImage not found with ID ${instanceImageId}"/></if><set field="imageType" from="instanceImage.imageType"/><if condition="imageType == null"><return error="true" message="InstanceImageType not found for InstanceImage with ID ${instanceImageId}"/></if><set field="initCommand" from="imageType.defaultInitCommand"/><set field="networkMode" from="imageType.defaultNetworkMode"/><service-call name="create#moqui.server.instance.AppInstance" in-map="context" out-map="[appInstanceId:context.appInstanceId,instanceImageId:context.instanceImageId,instanceHostId:context.instanceHostId,databaseHostId:context.databaseHostId,hostName:context.hostName,instanceName:context.instanceName,instanceUuid:context.instanceUuid,initCommand:context.initCommand,jsonConfig:context.jsonConfig,networkMode:context.networkMode,lastUpdatedStamp:context.lastUpdatedStamp]"/><entity-find-one entity-name="moqui.server.instance.AppInstance" value-field="appInstance"/><set field="imageTypeEnvList" from="imageType.envs"/><iterate list="imageTypeEnvList" entry="imageTypeEnv"><set field="envValue" from="ec.resource.expand(imageTypeEnv.envValue, '')"/><service-call name="create#moqui.server.instance.AppInstanceEnv" in-map="[appInstanceId:appInstanceId, envName:imageTypeEnv.envName, envValue:envValue]"/></iterate><set field="imageTypeLinkList" from="imageType.links"/><iterate list="imageTypeLinkList" entry="imageTypeLink"><service-call name="create#moqui.server.instance.AppInstanceLink" in-map="[appInstanceId:appInstanceId, instanceName:imageTypeLink.instanceName, aliasName:imageTypeLink.aliasName]"/></iterate><set field="imageTypeVolumeList" from="imageType.vols"/><iterate list="imageTypeVolumeList" entry="imageTypeVolume"><set field="volumeName" from="ec.resource.expand(imageTypeVolume.volumeName, '')"/><service-call name="create#moqui.server.instance.AppInstanceVolume" in-map="[appInstanceId:appInstanceId, mountPoint:imageTypeVolume.mountPoint, volumeName:volumeName]"/></iterate><set field="imageTypeHostConfigList" from="imageType.hostConfigs"/><iterate list="imageTypeHostConfigList" entry="imageTypeHostConfig"><set field="hostConfigValue" from="ec.resource.expand(imageTypeHostConfig.hostConfigValue, '')"/><service-call name="create#moqui.server.instance.AppInstanceHostConfig" in-map="[appInstanceId:appInstanceId, hostConfigName:imageTypeHostConfig.hostConfigName, hostConfigValue:hostConfigValue, type:imageTypeHostConfig.type]"/></iterate></actions></service>