<!--Service Location mantle.product.ProductServices.remove#ProductsFromCategory--><service verb="remove" noun="ProductsFromCategory"><in-parameters><parameter name="productCategoryId" required="true"/><parameter name="productIdList" type="List"><parameter name="productId"/></parameter></in-parameters><out-parameters/><actions><if condition="!productIdList"><return type="danger" message="No products specified"/></if><set field="removedCount" from="0"/><set field="alreadyCount" from="0"/><iterate list="productIdList" entry="productId"><set field="productId" from="productId.trim()"/><entity-find entity-name="mantle.product.category.ProductCategoryMember" list="existingPcmList"><date-filter/><econdition field-name="productId"/><econdition field-name="productCategoryId"/></entity-find><if condition="existingPcmList"><then><iterate list="existingPcmList" entry="existingPcm"><service-call name="update#mantle.product.category.ProductCategoryMember" in-map="[productId:productId, productCategoryId:productCategoryId, fromDate:existingPcm.fromDate, thruDate:ec.user.nowTimestamp]"/></iterate><script><![CDATA[removedCount++]]></script></then><else><script><![CDATA[alreadyCount++]]></script></else></if></iterate><entity-find-one entity-name="mantle.product.category.ProductCategory" value-field="productCategory"><field-map field-name="productCategoryId"/></entity-find-one><message><![CDATA[Removed ${removedCount} products from category ${ec.resource.expand('ProductCategoryNameTemplate','',productCategory)} (${alreadyCount} were not in it)]]></message></actions></service>