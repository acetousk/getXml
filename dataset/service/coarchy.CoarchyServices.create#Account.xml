<!--Service Location coarchy.CoarchyServices.create#Account--><service verb="create" noun="Account"><in-parameters><parameter name="salutation" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="salutation"/><parameter name="firstName" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.party.Person" field-name="firstName"/><parameter name="middleName" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="middleName"/><parameter name="lastName" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.party.Person" field-name="lastName"/><parameter name="personalTitle" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="personalTitle"/><parameter name="suffix" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="suffix"/><parameter name="nickname" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="nickname"/><parameter name="gender" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="gender"/><parameter name="birthDate" type="java.sql.Date" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="birthDate"/><parameter name="deceasedDate" type="java.sql.Date" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="deceasedDate"/><parameter name="height" type="java.lang.Double" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="height"/><parameter name="weight" type="java.lang.Double" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="weight"/><parameter name="mothersMaidenName" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="mothersMaidenName"/><parameter name="maritalStatusEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="maritalStatusEnumId"/><parameter name="employmentStatusEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="employmentStatusEnumId"/><parameter name="residenceStatusEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="residenceStatusEnumId"/><parameter name="occupation" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="occupation"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.party.Person" field-name="lastUpdatedStamp"/><parameter name="pseudoId"/><parameter name="ownerPartyId"/><parameter name="externalId"/><parameter name="dataSourceId"/><parameter name="disabled" default-value="N"/><parameter name="requirePasswordChange" default-value="N"/><parameter name="emailAddress" required="true"><text-email/></parameter><parameter name="username" default="emailAddress"/><parameter name="newPassword"><description><![CDATA[If empty won't set a password, user will have to change or reset.]]></description></parameter><parameter name="newPasswordVerify"/><parameter name="currencyUomId"/><parameter name="locale"/><parameter name="timeZone"/><parameter name="roleTypeId"/><parameter name="loginAfterCreate" type="Boolean" default="true"/></in-parameters><out-parameters><parameter name="userId"/><parameter name="partyId" required="true"/><parameter name="emailContactMechId"/></out-parameters><actions><entity-find entity-name="mantle.party.contact.PartyContactMechInfo" list="existingPartyList" limit="2"><date-filter/><econdition field-name="contactMechPurposeId" value="EmailPrimary"/><econdition field-name="contactMechTypeEnumId" value="CmtEmailAddress"/><econdition field-name="infoString" from="emailAddress"/></entity-find><if condition="existingPartyList.size() > 1"><log level="warn" message="Multiple parties found for email address ${emailAddress}"/></if><if condition="existingPartyList.size() == 1"><then><set field="partyId" from="existingPartyList.getFirst()?.partyId"/><entity-find-one entity-name="mantle.party.Person" value-field="person" auto-field-map="[partyId:partyId]" for-update="true"/><if condition="person"><then><set field="person.firstName" from="firstName"/><set field="person.lastName" from="lastName"/><entity-update value-field="person"/></then><else><service-call name="create#mantle.party.Person" in-map="[partyId:partyId,firstName:firstName,lastName:lastName]"/></else></if><if condition="roleTypeId"><service-call name="create#mantle.party.PartyRole" in-map="[partyId:partyId, roleTypeId:roleTypeId]"/></if><if condition="username"><entity-find entity-name="moqui.security.UserAccount" list="existingUaList"><econdition field-name="username" ignore-case="true"/></entity-find><if condition="existingUaList"><return error="true" message="Username [${username}] is already in use. Please choose another."/></if><if condition="emailAddress"><entity-find entity-name="moqui.security.UserAccount" list="existingUaList"><econdition field-name="emailAddress" ignore-case="true"/></entity-find><if condition="existingUaList"><return error="true" message="Email ${emailAddress} is already in use. Login with username ${existingUaList[0].username}"/></if></if><set field="userFullName" value="${ec.resource.expand('PartyFullNameTemplate','')}"/><if condition="newPassword"><then><service-call name="org.moqui.impl.UserServices.create#UserAccount" in-map="context" out-map="[userId:newUaOut.userId]"/></then><else><service-call name="create#moqui.security.UserAccount" in-map="context" out-map="[userId:newUaOut.userId,username:newUaOut.username,userFullName:newUaOut.userFullName,currentPassword:newUaOut.currentPassword,resetPassword:newUaOut.resetPassword,passwordSalt:newUaOut.passwordSalt,passwordHashType:newUaOut.passwordHashType,passwordBase64:newUaOut.passwordBase64,passwordSetDate:newUaOut.passwordSetDate,passwordHint:newUaOut.passwordHint,publicKey:newUaOut.publicKey,hasLoggedOut:newUaOut.hasLoggedOut,disabled:newUaOut.disabled,disabledDateTime:newUaOut.disabledDateTime,terminateDate:newUaOut.terminateDate,successiveFailedLogins:newUaOut.successiveFailedLogins,requirePasswordChange:newUaOut.requirePasswordChange,currencyUomId:newUaOut.currencyUomId,locale:newUaOut.locale,timeZone:newUaOut.timeZone,externalUserId:newUaOut.externalUserId,emailAddress:newUaOut.emailAddress,ipAllowed:newUaOut.ipAllowed,partyId:newUaOut.partyId,lastUpdatedStamp:newUaOut.lastUpdatedStamp]"/></else></if><set field="userId" from="newUaOut.userId"/><if condition="loginAfterCreate && newPassword"><script><![CDATA[ec.user.loginUser(username, newPassword)]]></script></if></if></then><else><service-call name="mantle.party.PartyServices.create#Account" out-map="[userId:context.userId,partyId:context.partyId,emailContactMechId:context.emailContactMechId]" in-map="[emailAddress:emailAddress,firstName:firstName,lastName:lastName,username:emailAddress,                         newPassword:newPassword,newPasswordVerify:newPassword,loginAfterCreate:loginAfterCreate]"/></else></if></actions></service>