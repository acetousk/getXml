<!--Service Location org.moqui.impl.ScreenServices.create#FormResponse--><service verb="create" noun="FormResponse"><in-parameters><parameter name="formLocation" required="true" default-value="DbForm#${formId}" entity-name="moqui.screen.form.FormResponse" field-name="formLocation"/><parameter name="formId" entity-name="moqui.screen.form.FormResponse" field-name="formId"/><parameter name="userId" default="ec.user.userId" entity-name="moqui.screen.form.FormResponse" field-name="userId"/><parameter name="responseDate" type="Timestamp" default="ec.user.nowTimestamp" entity-name="moqui.screen.form.FormResponse" field-name="responseDate"/><parameter name="responseMap" type="Map"/></in-parameters><out-parameters><parameter name="formResponseId" entity-name="moqui.screen.form.FormResponse" field-name="formResponseId"/></out-parameters><actions><service-call name="create#moqui.screen.form.FormResponse" in-map="context" out-map="[formResponseId:context.formResponseId,formLocation:context.formLocation,formId:context.formId,userId:context.userId,responseDate:context.responseDate,lastUpdatedStamp:context.lastUpdatedStamp]"/><if condition="responseMap"><set field="formNode" from="ec.screen.getFormNode(formLocation)"/><iterate list="formNode.children('field')" entry="fieldNode"><set field="fieldName" from="fieldNode.attribute('name')"/><if condition="responseMap.containsKey(fieldName)"><service-call name="create#moqui.screen.form.FormResponseAnswer" in-map="[formResponseId:formResponseId, formId:formId, fieldName:fieldName,                                     valueText:org.moqui.util.ObjectUtilities.toPlainString(responseMap.get(fieldName))]"/></if></iterate></if></actions></service>