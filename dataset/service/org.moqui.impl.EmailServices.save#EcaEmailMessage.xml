<!--Service Location org.moqui.impl.EmailServices.save#EcaEmailMessage--><service verb="save" noun="EcaEmailMessage"><in-parameters><parameter name="emailServerId"/><parameter name="message" type="javax.mail.internet.MimeMessage"/><parameter name="fields" type="Map"><parameter name="toList" type="List" allow-html="any"/><parameter name="ccList" type="List" allow-html="any"/><parameter name="bccList" type="List" allow-html="any"/><parameter name="from" allow-html="any"/><parameter name="subject"/><parameter name="sentDate" type="Timestamp"/><parameter name="receivedDate" type="Timestamp"/></parameter><parameter name="bodyPartList" type="List"><description><![CDATA[List of Map for each body part. If the message is not multi-part will have a single entry.]]></description><parameter name="bodyPartMap" type="Map"><parameter name="contentType"/><parameter name="filename"/><parameter name="disposition"/><parameter name="contentText" allow-html="any"/><parameter name="contentBytes" type="byte[]"/></parameter></parameter><parameter name="headers" type="Map" allow-html="any"><description><![CDATA[All header names (keys) are converted to
                lower case for consistency. If multiple values for a header name are found they will be put in a List.]]></description></parameter><parameter name="flags" type="Map"><parameter name="answered" type="Boolean"/><parameter name="deleted" type="Boolean"/><parameter name="draft" type="Boolean"/><parameter name="flagged" type="Boolean"/><parameter name="recent" type="Boolean"/><parameter name="seen" type="Boolean"/></parameter><parameter name="statusId" default-value="ES_RECEIVED"/></in-parameters><out-parameters><parameter name="emailMessageId"/></out-parameters><actions><set field="messageId" from="headers.get('message-id')"/><if condition="messageId"><entity-find entity-name="moqui.basic.email.EmailMessage" list="emailMessageList"><econdition field-name="emailServerId" ignore-if-empty="true"/><econdition field-name="messageId"/></entity-find><if condition="emailMessageList"><return message="Found duplicate message with Message-ID [${messageId}] from server [${emailServerId}]"/></if></if><set field="body" from="bodyPartList ? bodyPartList[0].contentText : null"/><service-call name="create#moqui.basic.email.EmailMessage" out-map="[emailMessageId:context.emailMessageId,rootEmailMessageId:context.rootEmailMessageId,parentEmailMessageId:context.parentEmailMessageId,statusId:context.statusId,emailTypeEnumId:context.emailTypeEnumId,sentDate:context.sentDate,receivedDate:context.receivedDate,subject:context.subject,body:context.body,bodyText:context.bodyText,headersString:context.headersString,fromAddress:context.fromAddress,fromName:context.fromName,toAddresses:context.toAddresses,ccAddresses:context.ccAddresses,bccAddresses:context.bccAddresses,contentType:context.contentType,messageId:context.messageId,fromUserId:context.fromUserId,toUserId:context.toUserId,emailTemplateId:context.emailTemplateId,emailServerId:context.emailServerId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[sentDate:fields.sentDate, receivedDate:fields.receivedDate, statusId:statusId,                     subject:fields.subject, body:body,                     fromAddress:fields.from, toAddresses:fields.toList?.toString(),                     ccAddresses:fields.ccList?.toString(), bccAddresses:fields.bccList?.toString(),                     messageId:messageId, emailServerId:emailServerId]"/></actions></service>