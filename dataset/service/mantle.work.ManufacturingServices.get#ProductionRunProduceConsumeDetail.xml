<!--Service Location mantle.work.ManufacturingServices.get#ProductionRunProduceConsumeDetail--><service verb="get" noun="ProductionRunProduceConsumeDetail"><in-parameters><parameter name="workEffortId" required="true"/><parameter name="excludeWithMatchingConsume" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="produceBomDetailList" type="List"><parameter name="produceBomDetailMap" type="Map"><parameter name="productId"/><parameter name="workEffortProductDetail" type="Map"/><parameter name="estimatedQuantity" type="BigDecimal"/><parameter name="bomDetailList" type="List"><parameter name="bomDetailMap" type="Map"><parameter name="bomQuantity" type="BigDecimal"/><parameter name="productIdSet" type="Set"><parameter name="productId"/></parameter><parameter name="estConsumeQuantity" type="BigDecimal"/><parameter name="quantityNeeded" type="BigDecimal"/><parameter name="quantityRemaining" type="BigDecimal"/></parameter></parameter></parameter></parameter><parameter name="consumeQuantityRemainingMap" type="Map"/></out-parameters><actions><entity-find entity-name="mantle.work.effort.WorkEffortProductDetail" list="allProdList"><date-filter/><econdition field-name="workEffortId"/><order-by field-name="productName"/></entity-find><filter-map-list list="allProdList" to-list="consumeList"><field-map field-name="typeEnumId" value="WeptConsume"/></filter-map-list><filter-map-list list="allProdList" to-list="produceList"><field-map field-name="typeEnumId" value="WeptProduce"/></filter-map-list><set field="consumeQuantityRemainingMap" from="[:]"/><iterate list="consumeList" entry="consumeMap"><script><![CDATA[addToBigDecimalInMap(consumeMap.productId, consumeMap.estimatedQuantity, consumeQuantityRemainingMap)]]></script></iterate><set field="produceBomDetailList" from="[]"/><iterate list="produceList" entry="produceWepd"><service-call name="mantle.work.ManufacturingServices.get#ProductBomDetail" in-map="[productId:produceWepd.productId]" out-map="[bomDetailList:bomDetOut.bomDetailList]"/><set field="allQuantitiesMatch" from="true"/><iterate list="bomDetOut.bomDetailList" entry="bomDetailMap"><set field="estConsumeQuantity" from="0"/><iterate list="bomDetailMap.productIdSet" entry="bomProductId"><script><![CDATA[estConsumeQuantity += (consumeQuantityRemainingMap[bomProductId] ?: 0)]]></script></iterate><set field="bomDetailMap.quantityNeeded" from="(bomDetailMap.bomQuantity ?: 1) * (produceWepd.estimatedQuantity ?: 0)"/><if condition="bomDetailMap.quantityNeeded < estConsumeQuantity"><set field="estConsumeQuantity" from="bomDetailMap.quantityNeeded"/></if><set field="consumeReduceRemaining" from="estConsumeQuantity"/><iterate list="bomDetailMap.productIdSet" entry="bomProductId"><set field="curReduce" from="(consumeQuantityRemainingMap[bomProductId] ?: 0) > consumeReduceRemaining ? consumeReduceRemaining : (consumeQuantityRemainingMap[bomProductId] ?: 0)"/><set field="consumeReduceRemaining" from="consumeReduceRemaining - curReduce"/><script><![CDATA[addToBigDecimalInMap(bomProductId, -curReduce, consumeQuantityRemainingMap)]]></script><if condition="consumeReduceRemaining == 0"><break/></if></iterate><set field="bomDetailMap.estConsumeQuantity" from="estConsumeQuantity"/><set field="bomDetailMap.quantityRemaining" from="bomDetailMap.quantityNeeded - estConsumeQuantity"/><if condition="bomDetailMap.quantityRemaining != 0"><set field="allQuantitiesMatch" from="false"/></if></iterate><if condition="allQuantitiesMatch && excludeWithMatchingConsume"><continue/></if><script><![CDATA[produceBomDetailList.add([productId:produceWepd.productId, workEffortProductDetail:produceWepd,
                                                  estimatedQuantity:produceWepd.estimatedQuantity,
                                                  bomDetailList:bomDetOut.bomDetailList])]]></script></iterate><iterate list="new ArrayList(consumeQuantityRemainingMap.keySet())" entry="curProductId"><script><![CDATA[if (consumeQuantityRemainingMap[curProductId] == 0) consumeQuantityRemainingMap.remove(curProductId)]]></script></iterate></actions></service>