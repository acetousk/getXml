<!--Service Location mantle.product.AssetServices.move#AssetReservation--><service verb="move" noun="AssetReservation"><in-parameters><parameter name="assetReservationId" required="true" entity-name="mantle.product.issuance.AssetReservation" field-name="assetReservationId"/><parameter name="assetId" required="true" entity-name="mantle.product.issuance.AssetReservation" field-name="assetId"/><parameter name="quantity" type="BigDecimal" required="true" entity-name="mantle.product.issuance.AssetReservation" field-name="quantity"/><parameter name="forceFullQuantity" type="Boolean" default="false"><description><![CDATA[If true ignore
                available to promise on asset and moves the quantity to it anyway.]]></description></parameter></in-parameters><out-parameters><parameter name="quantityMoved"/></out-parameters><actions><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset" for-update="true"/><entity-find-one entity-name="mantle.product.issuance.AssetReservation" value-field="assetReservation" for-update="true"/><if condition="asset.assetPoolId"><if condition="!assetReservation.orderId || !assetReservation.orderItemSeqId"><log level="warn" message="Cannot move reservation ${assetReservationId} with no orderId or orderItemSeqId to asset ${assetId} with assetPoolId ${asset.assetPoolId}"/><set field="quantityMoved" from="0.0"/><return/></if><set field="orderItem" from="assetReservation.orderItem"/><set field="orderPart" from="orderItem.part"/><set field="orderHeader" from="orderItem.header"/><service-call name="mantle.product.AssetServices.get#AssetPools" out-map="[assetPoolIdSet:poolsOut.assetPoolIdSet]" in-map="[productStoreId:orderHeader.productStoreId, vendorPartyId:orderPart?.vendorPartyId,                             customerPartyId:orderPart?.customerPartyId]"/><set field="assetPoolIdSet" from="poolsOut.assetPoolIdSet"/><if condition="!assetPoolIdSet || !assetPoolIdSet.contains(asset.assetPoolId)"><set field="quantityMoved" from="0.0"/><return/></if></if><if condition="quantity > assetReservation.quantityNotIssued"><return error="true" message="Quantity to move (${quantity}) is greater than reservation [${assetReservationId}] quantity not yet issued (${assetReservation.quantityNotIssued}), not moving reservation"/></if><if condition="forceFullQuantity"><then><set field="quantityToMove" from="quantity"/></then><else><set field="quantityToMove" from="asset.availableToPromiseTotal < quantity ? asset.availableToPromiseTotal : quantity"/><if condition="quantityToMove < 0.0"><set field="quantityToMove" from="0.0"/></if></else></if><set field="quantityMoved" from="quantityToMove"/><if condition="quantityToMove == 0.0"><return/></if><if condition="quantityToMove == assetReservation.quantity"><then><service-call name="create#mantle.product.asset.AssetDetail" in-map="[assetId:assetReservation.assetId,                         effectiveDate:ec.user.nowTimestamp, availableToPromiseDiff:quantityToMove,                         assetReservationId:assetReservationId, productId:assetReservation.productId,                         orderId:assetReservation.orderId, orderItemSeqId:assetReservation.orderItemSeqId]"/><service-call name="create#mantle.product.asset.AssetDetail" in-map="[assetId:assetId,                         effectiveDate:ec.user.nowTimestamp, availableToPromiseDiff:-quantityToMove,                         assetReservationId:assetReservationId, productId:assetReservation.productId,                         orderId:assetReservation.orderId, orderItemSeqId:assetReservation.orderItemSeqId]"/><set field="assetReservation.assetId" from="assetId"/><set field="assetReservation.quantityNotAvailable" from="assetReservation.quantityNotAvailable > quantityToMove ?                             assetReservation.quantityNotAvailable - quantityToMove : 0.0"/><entity-update value-field="assetReservation"/></then><else><entity-find entity-name="mantle.product.issuance.AssetReservation" list="existingReservationList"><econdition field-name="assetId"/><econdition field-name="orderId" from="assetReservation.orderId"/><econdition field-name="orderItemSeqId" from="assetReservation.orderItemSeqId"/><order-by field-name="assetReservationId"/></entity-find><if condition="existingReservationList"><then><set field="existingRes" from="existingReservationList[0]"/><set field="newAssetReservationId" from="existingRes.assetReservationId"/><service-call name="update#mantle.product.issuance.AssetReservation" out-map="[assetReservationId:newResOut.assetReservationId,assetId:newResOut.assetId,productId:newResOut.productId,orderId:newResOut.orderId,orderItemSeqId:newResOut.orderItemSeqId,reservationOrderEnumId:newResOut.reservationOrderEnumId,quantity:newResOut.quantity,quantityNotAvailable:newResOut.quantityNotAvailable,quantityNotIssued:newResOut.quantityNotIssued,reservedDate:newResOut.reservedDate,originalPromisedDate:newResOut.originalPromisedDate,currentPromisedDate:newResOut.currentPromisedDate,priority:newResOut.priority,sequenceNum:newResOut.sequenceNum,lastUpdatedStamp:newResOut.lastUpdatedStamp]" in-map="[assetReservationId:newAssetReservationId,                                 quantity:((existingRes.quantity ?: 0.0) + quantityToMove),                                 quantityNotIssued:((existingRes.quantityNotIssued ?: 0.0) + quantityToMove)]"/></then><else><service-call name="create#mantle.product.issuance.AssetReservation" out-map="[assetReservationId:newResOut.assetReservationId,assetId:newResOut.assetId,productId:newResOut.productId,orderId:newResOut.orderId,orderItemSeqId:newResOut.orderItemSeqId,reservationOrderEnumId:newResOut.reservationOrderEnumId,quantity:newResOut.quantity,quantityNotAvailable:newResOut.quantityNotAvailable,quantityNotIssued:newResOut.quantityNotIssued,reservedDate:newResOut.reservedDate,originalPromisedDate:newResOut.originalPromisedDate,currentPromisedDate:newResOut.currentPromisedDate,priority:newResOut.priority,sequenceNum:newResOut.sequenceNum,lastUpdatedStamp:newResOut.lastUpdatedStamp]" in-map="assetReservation.getMap() + [assetReservationId:null, assetId:assetId,                                 quantity:quantityToMove, quantityNotAvailable:0.0, quantityNotIssued:quantityToMove]"/><set field="newAssetReservationId" from="newResOut.assetReservationId"/></else></if><set field="assetReservation.quantity" from="assetReservation.quantity - quantityToMove"/><set field="assetReservation.quantityNotAvailable" from="assetReservation.quantityNotAvailable > quantityToMove ?                             assetReservation.quantityNotAvailable - quantityToMove : 0.0"/><set field="assetReservation.quantityNotIssued" from="assetReservation.quantityNotIssued - quantityToMove"/><if condition="assetReservation.quantity < 0.0"><return error="true" message="In move#AssetReservation got negative quantity ${assetReservation.quantity}, quantity to move ${quantityToMove}"/></if><entity-update value-field="assetReservation"/><service-call name="create#mantle.product.asset.AssetDetail" in-map="[assetId:assetReservation.assetId,                     effectiveDate:ec.user.nowTimestamp, availableToPromiseDiff:quantityToMove,                     assetReservationId:assetReservationId, productId:assetReservation.productId,                     orderId:assetReservation.orderId, orderItemSeqId:assetReservation.orderItemSeqId]"/><service-call name="create#mantle.product.asset.AssetDetail" in-map="[assetId:assetId,                     effectiveDate:ec.user.nowTimestamp, availableToPromiseDiff:-quantityToMove,                     assetReservationId:newAssetReservationId, productId:assetReservation.productId,                     orderId:assetReservation.orderId, orderItemSeqId:assetReservation.orderItemSeqId]"/></else></if></actions></service>