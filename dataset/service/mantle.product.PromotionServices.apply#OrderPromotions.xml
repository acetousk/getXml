<!--Service Location mantle.product.PromotionServices.apply#OrderPromotions--><service verb="apply" noun="OrderPromotions"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderPartSeqId"/><parameter name="orderHeader" type="EntityValue"/></in-parameters><out-parameters/><actions><set field="openStatusIdList" from="['OrderPlaced', 'OrderProcessing', 'OrderApproved', 'OrderSent', 'OrderCompleted', 'OrderHold']"/><if condition="orderHeader == null"><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/></if><set field="productStoreId" from="orderHeader.productStoreId"/><if condition="!productStoreId"><return/></if><entity-delete-by-condition entity-name="mantle.order.OrderItem"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/><econdition field-name="isPromo" value="Y"/></entity-delete-by-condition><entity-find entity-name="mantle.order.OrderPart" list="orderPartList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId" ignore-if-empty="true"/><order-by field-name="orderPartSeqId"/></entity-find><set field="firstOrderPart" from="orderPartList?.first"/><set field="customerPartyId" from="firstOrderPart?.customerPartyId"/><entity-find entity-name="mantle.product.store.ProductStorePromotion" list="storePromoList" cache="true"><date-filter valid-date="orderHeader.placedDate"/><econdition field-name="productStoreId"/><order-by field-name="sequenceNum"/></entity-find><set field="applicablePromoList" from="new ArrayList(storePromoList.size())"/><set field="promoCodesByPromo" from="[:]"/><set field="useLimitByPromo" from="[:]"/><iterate list="storePromoList" entry="storePromo"><set field="useLimitMin" from="1000.0"/><if condition="storePromo.productStoreId"><if condition="orderHeader.productStoreId && storePromo.productStoreId != orderHeader.productStoreId"><continue/></if></if><if condition="storePromo.requireCode == 'Y'"><entity-find entity-name="mantle.order.OrderPromoCode" list="orderPromoCodeList"><econdition field-name="orderId"/></entity-find><if condition="orderPromoCodeList.size() == 0"><continue/></if><set field="orderCodeIds" from="orderPromoCodeList*.promoCodeId"/><entity-find entity-name="mantle.product.store.ProductStorePromoCode" list="storePromoCodeList"><date-filter valid-date="orderHeader.placedDate"/><econdition field-name="promoCodeId" operator="in" from="orderCodeIds"/><econdition field-name="storePromotionId" from="storePromo.storePromotionId"/></entity-find><set field="validPromoCodeId" from="null"/><iterate list="storePromoCodeList" entry="storePromoCode"><if condition="storePromoCode.requireParty == 'Y'"><if condition="!customerPartyId"><continue/></if><entity-find-one entity-name="mantle.product.store.ProductStorePromoCodeParty" value-field="promoCodeParty"><field-map field-name="promoCodeId" from="storePromoCode.promoCodeId"/><field-map field-name="partyId" from="customerPartyId"/></entity-find-one><if condition="promoCodeParty == null"><continue/></if></if><if condition="storePromoCode.useLimitPerCode"><entity-find entity-name="mantle.order.OrderItemAndPartSummary" list="itemSummaryList"><econdition field-name="statusId" operator="in" from="openStatusIdList"/><econdition field-name="promoCodeId" from="storePromoCode.promoCodeId"/><select-field field-name="promoTimesUsed"/></entity-find><set field="promoTimesUsed" from="itemSummaryList?.first?.promoTimesUsed ?: 0.0"/><set field="curUseLimit" from="storePromoCode.useLimitPerCode - promoTimesUsed"/><if condition="curUseLimit <= 0.0"><continue/></if><if condition="curUseLimit < useLimitMin"><set field="useLimitMin" from="curUseLimit"/></if></if><if condition="storePromoCode.useLimitPerCustomer"><if condition="customerPartyId"><then><entity-find entity-name="mantle.order.OrderItemAndPartSummary" list="itemSummaryList"><econdition field-name="statusId" operator="in" from="openStatusIdList"/><econdition field-name="customerPartyId"/><econdition field-name="promoCodeId" from="storePromoCode.promoCodeId"/><select-field field-name="promoTimesUsed"/></entity-find><set field="promoTimesUsed" from="itemSummaryList?.first?.promoTimesUsed ?: 0.0"/><set field="curUseLimit" from="storePromoCode.useLimitPerCustomer - promoTimesUsed"/></then><else><set field="curUseLimit" from="storePromoCode.useLimitPerCustomer"/></else></if><if condition="curUseLimit <= 0.0"><continue/></if><if condition="curUseLimit < useLimitMin"><set field="useLimitMin" from="curUseLimit"/></if></if><set field="validPromoCodeId" from="storePromoCode.promoCodeId"/><break/></iterate><if condition="validPromoCodeId"><then><script><![CDATA[promoCodesByPromo.put(storePromo.storePromotionId, validPromoCodeId)]]></script></then><else><continue/></else></if></if><if condition="storePromo.useLimitPerOrder &&storePromo.useLimitPerOrder < useLimitMin"><set field="useLimitMin" from="storePromo.useLimitPerOrder"/></if><if condition="storePromo.useLimitPerPromotion"><entity-find entity-name="mantle.order.OrderItemAndPartSummary" list="itemSummaryList"><econdition field-name="statusId" operator="in" from="openStatusIdList"/><econdition field-name="storePromotionId" from="storePromo.storePromotionId"/><select-field field-name="promoTimesUsed"/></entity-find><set field="promoTimesUsed" from="itemSummaryList?.first?.promoTimesUsed ?: 0.0"/><set field="curUseLimit" from="storePromo.useLimitPerPromotion - promoTimesUsed"/><if condition="curUseLimit < useLimitMin"><set field="useLimitMin" from="curUseLimit"/></if></if><if condition="storePromo.useLimitPerCustomer"><if condition="customerPartyId"><then><entity-find entity-name="mantle.order.OrderItemAndPartSummary" list="itemSummaryList"><econdition field-name="statusId" operator="in" from="openStatusIdList"/><econdition field-name="customerPartyId"/><econdition field-name="storePromotionId" from="storePromo.storePromotionId"/><select-field field-name="promoTimesUsed"/></entity-find><set field="promoTimesUsed" from="itemSummaryList?.first?.promoTimesUsed ?: 0.0"/><set field="curUseLimit" from="storePromo.useLimitPerCustomer - promoTimesUsed"/></then><else><set field="curUseLimit" from="storePromo.useLimitPerCustomer"/></else></if><if condition="curUseLimit < useLimitMin"><set field="useLimitMin" from="curUseLimit"/></if></if><if condition="useLimitMin <= 0.0"><then><continue/></then><else><script><![CDATA[useLimitByPromo.put(storePromo.storePromotionId, useLimitMin)]]></script></else></if><script><![CDATA[applicablePromoList.add(storePromo)]]></script></iterate><script><![CDATA[for (storePromo in applicablePromoList) {
                String storePromotionId = storePromo.storePromotionId
                try {
                    Map parmMap = new HashMap(context)
                    parmMap.put("itemDescription", storePromo.itemDescription)
                    List promoParameterList = storePromo.parameters
                    for (promoParameter in promoParameterList) parmMap.put(promoParameter.parameterName, promoParameter.parameterValue)
                    parmMap.put("storePromotionId", storePromotionId)
                    parmMap.put("promoCodeId", promoCodesByPromo.get(storePromotionId))
                    parmMap.put("useLimit", useLimitByPromo.get(storePromotionId))
                    // ec.logger.warn("Calling store promotion service ${storePromotionId} promoCodeId ${promoCodesByPromo.get(storePromotionId)} useLimit ${useLimitByPromo.get(storePromotionId)}")

                    Map serviceRegister = storePromo.serviceRegister
                    Map result = ec.service.sync().name(serviceRegister.serviceName).parameters(parmMap).softValidate(true).disableAuthz().call()
                    if (result != null && !ec.message.hasError()) ec.context.putAll(result)
                } catch (Throwable t) {
                    ec.logger.log(300, "Error calling store promotion service ${storePromotionId}", t)
                }
            }]]></script></actions></service>