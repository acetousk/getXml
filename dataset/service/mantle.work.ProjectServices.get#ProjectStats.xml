<!--Service Location mantle.work.ProjectServices.get#ProjectStats--><service verb="get" noun="ProjectStats"><in-parameters><parameter name="workEffort" type="Map"/><parameter name="workEffortId"/></in-parameters><out-parameters><parameter name="actualProfit" type="BigDecimal"/><parameter name="clientBudgetRemaining" type="BigDecimal"/><parameter name="clientBudgetUsedPercent" type="BigDecimal"/><parameter name="clientActualOverBudget" type="Boolean"/><parameter name="actualPlusRemainingTime" type="BigDecimal"/><parameter name="bestTimeEstimate" type="BigDecimal"/><parameter name="estimatedCompletePercent" type="BigDecimal"/><parameter name="estimatedRemainingPercent" type="BigDecimal"/><parameter name="estimatedActualPlusRemainingDiff" type="BigDecimal"/><parameter name="actualPlusRemainingOverEstimated" type="Boolean"/><parameter name="timeBudgetCompletePercent" type="BigDecimal"/><parameter name="timeBudgetRemainingPercent" type="BigDecimal"/><parameter name="timeBudgetActualPlusRemainingDiff" type="BigDecimal"/><parameter name="actualPlusRemainingOverTimeBudget" type="Boolean"/><parameter name="clientAverageHourCost" type="BigDecimal"/><parameter name="clientEstimatedCost" type="BigDecimal"/><parameter name="clientBudgetEstimateDiff" type="BigDecimal"/><parameter name="estimatedCompleteBudgetPercentGap" type="BigDecimal"/><parameter name="estimatedCompleteOverBudget" type="Boolean"/><parameter name="projectWarning" type="Boolean"/><parameter name="projectDanger" type="Boolean"/><parameter name="taskCount" type="Long"/><parameter name="taskCountByStatusMap" type="Map"/></out-parameters><actions><if condition="workEffort == null"><entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort"/></if><set field="actualProfit" from="(workEffort.actualClientCost ?: 0) - (workEffort.actualCost ?: 0)"/><set field="clientBudgetRemaining" from="(workEffort.totalClientCostAllowed ?: 0) - (workEffort.actualClientCost ?: 0)"/><set field="clientBudgetUsedPercent" from="workEffort.totalClientCostAllowed ? ((workEffort.actualClientCost ?: 0) / workEffort.totalClientCostAllowed) * 100 : 0"/><set field="clientActualOverBudget" from="workEffort.actualClientCost > workEffort.totalClientCostAllowed && workEffort.totalClientCostAllowed"/><set field="actualPlusRemainingTime" from="(workEffort.actualWorkTime ?: 0) + (workEffort.remainingWorkTime ?: 0)"/><set field="bestTimeEstimate" from="actualPlusRemainingTime > workEffort.estimatedWorkTime ? actualPlusRemainingTime : workEffort.estimatedWorkTime "/><set field="estimatedCompletePercent" from="workEffort.estimatedWorkTime ? ((workEffort.actualWorkTime ?: 0) / workEffort.estimatedWorkTime) * 100 : 0"/><set field="estimatedRemainingPercent" from="workEffort.estimatedWorkTime ? ((workEffort.remainingWorkTime ?: 0) / workEffort.estimatedWorkTime) * 100 : 0"/><set field="estimatedActualPlusRemainingDiff" from="(workEffort.estimatedWorkTime ?: 0) - actualPlusRemainingTime"/><set field="actualPlusRemainingOverEstimated" from="actualPlusRemainingTime > (workEffort.estimatedWorkTime ?: 0)"/><set field="timeBudgetCompletePercent" from="workEffort.totalTimeAllowed ? ((workEffort.actualWorkTime ?: 0) / workEffort.totalTimeAllowed) * 100 : 0"/><set field="timeBudgetRemainingPercent" from="workEffort.totalTimeAllowed ? ((workEffort.remainingWorkTime ?: 0) / workEffort.totalTimeAllowed) * 100 : 0"/><set field="timeBudgetActualPlusRemainingDiff" from="(workEffort.totalTimeAllowed ?: 0) - actualPlusRemainingTime"/><set field="actualPlusRemainingOverTimeBudget" from="actualPlusRemainingTime > (workEffort.totalTimeAllowed ?: 0)"/><set field="clientAverageHourCost" from="workEffort.actualWorkTime ? ((workEffort.actualClientCost ?: 0) / workEffort.actualWorkTime) : 0"/><set field="clientEstimatedCost" from="clientAverageHourCost * bestTimeEstimate"/><set field="clientBudgetEstimateDiff" from="(workEffort.totalClientCostAllowed ?: 0) - clientEstimatedCost"/><set field="estimatedCompleteBudgetPercentGap" from="(estimatedCompletePercent ?: 0) - clientBudgetUsedPercent"/><set field="estimatedCompleteOverBudget" from="estimatedCompletePercent < clientBudgetUsedPercent"/><set field="projectDanger" from="clientActualOverBudget | actualPlusRemainingOverEstimated"/><set field="projectWarning" from="estimatedCompleteOverBudget"/><entity-find-count entity-name="mantle.work.effort.WorkEffort" count-field="taskCount"><econdition field-name="rootWorkEffortId" from="workEffort.workEffortId"/><econdition field-name="workEffortTypeEnumId" value="WetTask"/></entity-find-count><entity-find entity-name="mantle.work.effort.ProjectTaskCounts" list="taskStatusCountList"><econdition field-name="rootWorkEffortId" from="workEffort.workEffortId"/><select-field field-name="statusId"/><select-field field-name="taskCount"/></entity-find><set field="taskCountByStatusMap" from="[:]"/><iterate list="taskStatusCountList" entry="taskStatusCount"><script><![CDATA[taskCountByStatusMap.put(taskStatusCount.statusId, taskStatusCount.taskCount)]]></script></iterate></actions></service>