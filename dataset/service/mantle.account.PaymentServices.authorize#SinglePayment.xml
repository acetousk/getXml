<!--Service Location mantle.account.PaymentServices.authorize#SinglePayment--><service verb="authorize" noun="SinglePayment"><in-parameters><parameter name="paymentGatewayConfigId"><description><![CDATA[A payment gateway config is required, but may be
                determined by a default (such as from PaymentMethod, auto for FinancialAccount payments, etc)]]></description></parameter><parameter name="paymentId" required="true"/><parameter name="cardSecurityCode"/><parameter name="payment" type="EntityValue"/></in-parameters><out-parameters><parameter name="paymentGatewayResponseId"/><parameter name="paymentGatewayResponse" type="EntityValue"/></out-parameters><actions><if condition="payment == null"><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/></if><if condition="payment == null"><return message="Payment ${paymentId} not found"/></if><if condition="payment.statusId == 'PmntDelivered'"><log message="Not authorizing Payment ${paymentId}, already delivered (captured)"/><return/></if><if condition="payment.statusId in ['PmntCancelled', 'PmntVoid']"><return message="Not authorizing cancelled or void Payment ${paymentId} [${payment.statusId}]"/></if><if condition="payment.amount == null || payment.amount == 0.0"><log message="Payment ${paymentId} has a zero amount, setting status to Authorized and Delivered without gateway authorization or capture"/><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId, statusId:'PmntAuthorized']"/><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId, statusId:'PmntDelivered', effectiveDate:(payment.effectiveDate ?: ec.user.nowTimestamp)]"/><return/></if><if condition="payment.paymentMethodId"><set field="paymentMethod" from="payment.method"/><if condition="paymentMethod?.paymentGatewayConfigId"><set field="paymentGatewayConfigId" from="paymentMethod.paymentGatewayConfigId"/></if></if><if condition="!paymentGatewayConfigId"><set field="paymentGatewayConfigId" from="payment.paymentGatewayConfigId"/></if><if condition="!paymentGatewayConfigId && payment.paymentInstrumentEnumId == 'PiFinancialAccount'"><set field="paymentGatewayConfigId" value="FinancialAccountLocal"/></if><entity-find-one entity-name="mantle.account.method.PaymentGatewayConfig" value-field="paymentGatewayConfig" cache="true"/><if condition="paymentGatewayConfig == null"><return message="Not authorizing Payment ${paymentId}, could not find Payment Gateway Config"/></if><if condition="!paymentGatewayConfig.authorizeServiceName"><log message="Not authorizing Payment ${paymentId}, no authorizeServiceName in PaymentGatewayConfig [${paymentGatewayConfigId}]"/><return/></if><if condition="!payment.paymentGatewayConfigId"><set field="payment.paymentGatewayConfigId" from="paymentGatewayConfigId"/><entity-update value-field="payment"/></if><service-call name="${paymentGatewayConfig.authorizeServiceName}" out-map="authOut" in-map="[paymentId:payment.paymentId, cardSecurityCode:cardSecurityCode,                         paymentGatewayConfigId:paymentGatewayConfig.paymentGatewayConfigId]"/><set field="paymentGatewayResponseId" from="authOut.paymentGatewayResponseId"/><if condition="!paymentGatewayResponseId"><then><log level="warn" message="Call to ${paymentGatewayConfig.authorizeServiceName} did not return a paymentGatewayResponseId (for Payment ${payment.paymentId})"/><entity-find entity-name="mantle.account.method.PaymentGatewayResponse" list="paymentGatewayResponseList"><econdition field-name="paymentMethodId" from="payment.paymentMethodId"/><order-by field-name="-transactionDate"/></entity-find><if condition="paymentGatewayResponseList && (paymentGatewayResponseList[0].transactionDate.time + 60000) > ec.user.nowTimestamp.time"><set field="paymentGatewayResponse" from="paymentGatewayResponseList[0]"/><set field="paymentGatewayResponseId" from="paymentGatewayResponse.paymentGatewayResponseId"/></if></then><else><entity-find-one entity-name="mantle.account.method.PaymentGatewayResponse" value-field="paymentGatewayResponse"><field-map field-name="paymentGatewayResponseId"/></entity-find-one></else></if><if condition="paymentGatewayResponse == null"><log level="error" message="No PaymentGatewayResponse found after call to ${paymentGatewayConfig.authorizeServiceName} (for Payment ${payment.paymentId})"/></if><if condition="paymentGatewayResponse?.resultSuccess == 'Y'"><then><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId,                         statusId:'PmntAuthorized', paymentGatewayConfigId:paymentGatewayConfigId,                         paymentAuthCode:paymentGatewayResponse.approvalCode, paymentRefNum:paymentGatewayResponse.referenceNum]"/><if condition="paymentGatewayResponse.paymentOperationEnumId == 'PgoAuthAndCapture'"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId, statusId:'PmntDelivered', effectiveDate:(payment.effectiveDate ?: ec.user.nowTimestamp)]"/></if><set field="creditCard" from="payment.'mantle.account.method.CreditCard'"/><if condition="creditCard?.cardSecurityCode"><set field="creditCard.cardSecurityCode" from="null"/><entity-update value-field="creditCard"/></if></then><else-if condition="paymentGatewayResponse?.resultDeclined == 'Y'"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId,                         statusId:'PmntDeclined', paymentGatewayConfigId:paymentGatewayConfigId]"/></else-if></if></actions></service>