<!--Service Location ai.get#TablesFromDirectory--><service verb="get" noun="TablesFromDirectory"><in-parameters><parameter name="directory" required="true" default-value="/home/user/ai/dbs"/><parameter name="modelEnumId" required="true" default-value="text-embedding-3-small"/><parameter name="databaseNameList" type="List" default="['work_effort']"/><parameter name="systemMessageRemoteId" required="true" default-value="OpenAiEmbedding"/></in-parameters><out-parameters><parameter name="tableIdList" type="List"/></out-parameters><actions><set field="tableList" from="[]"/><set field="tableIdList" from="[]"/><set field="directoryReference" from="ec.resource.getLocationReference(directory)"/><entity-find-one entity-name="SystemMessageRemote" value-field="systemMessageRemote" auto-field-map="[systemMessageRemoteId:systemMessageRemoteId]"/><if condition="!systemMessageRemote"><return type="danger" error="true" message="Could not find SystemMessageRemote with ID ${systemMessageRemoteId}"/></if><iterate list="directoryReference.getDirectoryEntries()" entry="databaseDirectory"><set field="databaseName" from="databaseDirectory.fileName"/><iterate list="databaseDirectory.getDirectoryEntries()" entry="tableFile"><set field="tableName" from="tableFile.fileName - '.sql'"/><if condition="tableFile.fileName.endsWith('.sql') && (databaseNameList == [] || databaseNameList.contains(tableName))"><set field="respMap" from="[:]"/><set field="tableLineList" from="tableFile.getText().tokenize('\n')"/><set field="tableFileCleanedText" value=""/><iterate list="tableLineList" entry="tableLine"><if condition="tableLine.startsWith('--') || tableLine.startsWith('SET')                                 || tableLine.startsWith('CREATE INDEX') || tableLine.startsWith('SELECT pg_catalog')                                 || tableLine.startsWith('OWNER TO')"><continue/></if><set field="tableFileCleanedText" from="tableFileCleanedText + (tableLine - 'public.') + '\n'"/></iterate><service-call name="create#ai.sql.TableEmbedding" in-map="[                             databaseName: databaseName,                             tableName: tableName,                             tableText: tableFileCleanedText,                             location: tableFile.location]" out-map="[tableId:context.tableId,databaseName:context.databaseName,tableName:context.tableName,tableText:context.tableText,location:context.location,response:context.response,embedding:context.embedding,modelEnumId:context.modelEnumId,lastUpdatedStamp:context.lastUpdatedStamp]"/><set field="tableIdList" from="tableIdList + tableId"/></if></iterate></iterate></actions></service>