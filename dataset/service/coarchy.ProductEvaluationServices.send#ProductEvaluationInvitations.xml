<!--Service Location coarchy.ProductEvaluationServices.send#ProductEvaluationInvitations--><service verb="send" noun="ProductEvaluationInvitations"><in-parameters><parameter name="productEvaluationId" required="true"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="coarchy.product.ProductEvaluation" value-field="productEvaluation" auto-field-map="[productEvaluationId:productEvaluationId]"/><set field="organizationId" from="productEvaluation.organizationId"/><entity-find-one entity-name="mantle.product.Product" value-field="product" auto-field-map="[productId:productEvaluation?.productId]"/><if condition="product?.productClassEnumId != 'PclsCoarchy'"><return error="true" message="Invalid product."/></if><entity-find-one entity-name="mantle.party.PartyDetail" value-field="organization" auto-field-map="[partyId:organizationId]"/><if condition="!organization || !organization.ownerPartyId"><return/></if><entity-find entity-name="coarchy.product.ProductEvaluationParty" list="pePartyList"><date-filter/><econdition field-name="productEvaluationId"/><econdition field-name="roleTypeId" value="VendorRepresentative"/><econdition field-name="statusId" operator="in" value="PepPlanned"/></entity-find><set field="baseLinkUrl" from="!'production'.equals(System.getProperty('instance_purpose')) ? 'http://localhost:8080' : 'https://coarchy.com'"/><iterate list="pePartyList" entry="peParty"><service-call name="mantle.party.ContactServices.get#PrimaryEmailAddress" in-map="[partyId:peParty.partyId]" out-map="[emailAddress:emailOut.emailAddress,contactMechId:emailOut.contactMechId]"/><entity-find entity-name="moqui.security.UserAccount" list="existingUaList"><econdition field-name="partyId" from="peParty.partyId"/></entity-find><if condition="!existingUaList"><log message="No user account found for partyId ${peParty.partyId}" level="warn"/><continue/></if><set field="existingUa" from="existingUaList[0]"/><set field="userAccountActivated" from="existingUa?.currentPassword != null"/><if condition="!userAccountActivated"><then><entity-find-one entity-name="moqui.security.UserAccount" value-field="userAccount" auto-field-map="[userId:existingUa.userId]" for-update="true"/><set field="resetPassword" from="getRandomString(12)"/><set field="passwordNode" from="ec.ecfi.confXmlRoot.first('user-facade').first('password')"/><set field="userAccount.resetPassword" from="ec.ecfi.getSimpleHash(resetPassword, userAccount.passwordSalt, userAccount.passwordHashType, 'Y'.equals(userAccount.passwordBase64))"/><set field="userAccount.requirePasswordChange" from="(passwordNode.attribute('email-require-change') == 'true') ? 'Y' : 'N'"/><entity-update value-field="userAccount"/><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                             contactListId:'CoarchyInvitation',emailTemplateId:'VENDOR_INVITE_RESET_PASSWORD',                             partyId:peParty.partyId,preferredContactMechId:emailOut.contactMechId,toAddresses:existingUa.emailAddress,                             bodyParameters:[organization:organization, product:product, linkUrl:baseLinkUrl+'/ChangePassword?username='+existingUa.emailAddress+'&oldPassword='+resetPassword+'&action=signup',                             title: (organization.organizationName+' is Requesting for Information about ' + product.productName), baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/><service-call name="update#coarchy.product.ProductEvaluationParty" in-map="[productEvaluationId:peParty.productEvaluationId, roleTypeId:peParty.roleTypeId, fromDate:peParty.fromDate, partyId:peParty.partyId, statusId: 'PepAccepted']"/></then><else-if condition="userAccountActivated"><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                             contactListId:'CoarchyInvitation',emailTemplateId:'VENDOR_INVITE',                             partyId:peParty.partyId,preferredContactMechId:null,toAddresses:existingUa.emailAddress,                             bodyParameters:[organization:organization, product:product, linkUrl:baseLinkUrl+'/Login?username='+existingUa?.username?:existingUa.emailAddress,                             title: (organization.organizationName+' is Requesting for Information about ' + product.productName), baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/><service-call name="update#coarchy.product.ProductEvaluationParty" in-map="[productEvaluationId:peParty.productEvaluationId, roleTypeId:peParty.roleTypeId, fromDate:peParty.fromDate, partyId:peParty.partyId, statusId: 'PepAccepted']"/></else-if></if></iterate></actions></service>