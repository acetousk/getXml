<!--Service Location mantle.shipment.CarrierServices.get#OrderShippingRatesBulk--><service verb="get" noun="OrderShippingRatesBulk"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderPartSeqId" required="true"/><parameter name="postalContactMechId"><description><![CDATA[Overrides the OrderPart.postalContactMechId if specified.]]></description></parameter><parameter name="carrierShipmentMethodList" type="List"><description><![CDATA[If not specified and OrderHeader.productStoreId is populated all ProductStoreShipOption values will be used]]></description><parameter name="carrierMethodMap" type="Map"><parameter name="carrierPartyId" required="true"/><parameter name="shipmentMethodEnumId" required="true"/></parameter></parameter></in-parameters><out-parameters><parameter name="shippingRateInfoList" type="List"><description><![CDATA[See get#ShippingRatesBulk service interface for details]]></description><parameter name="rateInfo" type="Map"/></parameter><parameter name="postalContactMechId"><description><![CDATA[Returned if address was validated and replaced]]></description></parameter></out-parameters><actions><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><set field="productStoreId" from="orderHeader.productStoreId"/><if condition="!productStoreId"><return/></if><entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/><entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore" cache="true"/><if condition="!carrierShipmentMethodList"><entity-find entity-name="mantle.product.store.ProductStoreShipOption" list="carrierShipmentMethodList" cache="true"><econdition field-name="productStoreId"/><order-by field-name="sequenceNum"/></entity-find></if><set field="carrierIdSet" from="new HashSet(carrierShipmentMethodList*.carrierPartyId)"/><entity-find entity-name="mantle.product.store.ProductStoreShippingGateway" list="storeGatewayList"><econdition field-name="productStoreId"/><econdition field-name="carrierPartyId" operator="in" from="carrierIdSet"/></entity-find><set field="carriersByGateway" from="[:]"/><iterate list="storeGatewayList" entry="storeGateway"><script><![CDATA[addToSetInMap(storeGateway.shippingGatewayConfigId, storeGateway.carrierPartyId, carriersByGateway)]]></script></iterate><set field="shippingRateInfoList" from="[]"/><iterate list="carriersByGateway" entry="carrierPartyIdSet" key="shippingGatewayConfigId"><entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayConfig" value-field="shippingGatewayConfig" cache="true"><field-map field-name="shippingGatewayConfigId"/></entity-find-one><if condition="shippingGatewayConfig == null"><continue/></if><set field="otherCarrierMethodList" from="carrierShipmentMethodList.findAll({ it.carrierPartyId != '_NA_' && it.carrierPartyId in carrierPartyIdSet })"/><set field="naCarrierMethodList" from="carrierShipmentMethodList.findAll({ it.carrierPartyId == '_NA_' && it.carrierPartyId in carrierPartyIdSet })"/><if condition="shippingGatewayConfig.getShippingRatesBulkName && shippingGatewayConfig.getOrderRateServiceName"><then><set field="bulkCarrierMethodList" from="otherCarrierMethodList"/><set field="singleCarrierMethodList" from="naCarrierMethodList"/></then><else-if condition="shippingGatewayConfig.getShippingRatesBulkName"><set field="bulkCarrierMethodList" from="otherCarrierMethodList + naCarrierMethodList"/><set field="singleCarrierMethodList" from="null"/></else-if><else-if condition="shippingGatewayConfig.getOrderRateServiceName"><set field="bulkCarrierMethodList" from="null"/><set field="singleCarrierMethodList" from="otherCarrierMethodList + naCarrierMethodList"/></else-if></if><set field="getAutoPackageInfoName" from="shippingGatewayConfig.getAutoPackageInfoName"/><if condition="getAutoPackageInfoName"><entity-find entity-name="mantle.order.OrderItem" list="itemInfoList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/><econdition field-name="productId" operator="is-not-null"/></entity-find><service-call name="${getAutoPackageInfoName}" out-map="context" in-map="context"/></if><if condition="bulkCarrierMethodList"><set field="fromPartyId" from="orderPart.vendorPartyId"/><if condition="!fromPartyId"><continue/></if><set field="toPartyId" from="orderPart.customerPartyId"/><if condition="!toPartyId"><continue/></if><set field="originFacilityId" from="orderPart.facilityId"/><if condition="!originFacilityId"><continue/></if><service-call name="mantle.facility.ContactServices.get#FacilityDefaultShipOrigin" out-map="[postalContactMechId:facOriginOut.postalContactMechId,telecomContactMechId:facOriginOut.telecomContactMechId]" in-map="[facilityId:originFacilityId]"/><if condition="!facOriginOut.postalContactMechId"><continue/></if><set field="destPostalContactMechId" from="postalContactMechId ?: orderPart.postalContactMechId"/><if condition="!destPostalContactMechId"><continue/></if><service-call name="${shippingGatewayConfig.getShippingRatesBulkName}" out-map="bulkOut" out-map-add-to-existing="false" in-map="[shippingGatewayConfigId:shippingGatewayConfigId, carrierShipmentMethodList:bulkCarrierMethodList,                                     fromPartyId:fromPartyId, toPartyId:toPartyId, originFacilityId:originFacilityId,                                     originPostalContactMechId:facOriginOut.postalContactMechId,                                     destPostalContactMechId:destPostalContactMechId, packageInfoList:packageInfoList,                                     productStoreId:productStoreId, vendorPartyId:orderPart.vendorPartyId,                                     currencyUomId:orderHeader.currencyUomId]"/><iterate list="bulkOut.shippingRateInfoList" entry="shippingRateInfo"><if condition="productStore?.markupOrderShipLabels == 'Y' || ec.user.getPreference('AllStoresMarkupLabelOrder') == 'true'"><service-call name="mantle.shipment.CarrierServices.get#ShipLabelMarkup" out-map="[markupAmount:markupOut.markupAmount,markupPercent:markupOut.markupPercent,markupMultiplier:markupOut.markupMultiplier,markedUpAmount:markupOut.markedUpAmount]" out-map-add-to-existing="false" in-map="[productStoreId:productStore.productStoreId, carrierPartyId:shippingRateInfo.carrierPartyId,                                         shipmentMethodEnumId:shippingRateInfo.shipmentMethodEnumId]"/><set field="markupAmount" from="markupOut?.markupAmount ?: 0.0"/><set field="markupMultiplier" from="markupOut?.markupMultiplier ?: 0.0"/><if condition="(markupMultiplier != 0.0 || markupAmount != 0.0) && shippingRateInfo.shippingTotal"><set field="shippingRateInfo.shippingTotal" from="shippingRateInfo.shippingTotal + markupAmount +                                     (markupMultiplier as BigDecimal).multiply(shippingRateInfo.shippingTotal).setScale(2, BigDecimal.ROUND_HALF_UP)"/></if></if><script><![CDATA[shippingRateInfoList.add(shippingRateInfo)]]></script></iterate><if condition="!postalContactMechId && bulkOut.destPostalContactMechId && bulkOut.destPostalContactMechId != orderPart.postalContactMechId"><set field="orderPart.postalContactMechId" from="bulkOut.destPostalContactMechId"/><service-call name="update#mantle.order.OrderPart" in-map="[orderId:orderId,                                 orderPartSeqId:orderPartSeqId, postalContactMechId:bulkOut.destPostalContactMechId]"/></if><set field="postalContactMechId" from="bulkOut.destPostalContactMechId"/></if><if condition="singleCarrierMethodList"><iterate list="singleCarrierMethodList" entry="curCarrierMethod"><service-call name="${shippingGatewayConfig.getOrderRateServiceName}" out-map="singleOut" out-map-add-to-existing="false" in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, shippingGatewayConfigId:shippingGatewayConfigId,                                     createOrderItem:false, carrierPartyId:curCarrierMethod.carrierPartyId,                                     shipmentMethodEnumId:curCarrierMethod.shipmentMethodEnumId,                                     postalContactMechId:postalContactMechId, packageInfoList:packageInfoList]"/><script><![CDATA[shippingRateInfoList.add(singleOut + [carrierPartyId:curCarrierMethod.carrierPartyId,
                                shipmentMethodEnumId:curCarrierMethod.shipmentMethodEnumId])]]></script></iterate></if></iterate></actions></service>