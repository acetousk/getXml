<!--Service Location mantle.shipment.ShipmentServices.get#ShipmentPickPackInfo--><service verb="get" noun="ShipmentPickPackInfo"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="locationOrderBy" default-value="facilityId,sequenceNum,areaId,aisleId,sectionId,levelId,positionId"/><parameter name="productOrderBy" default-value="pseudoId,productName"/><parameter name="templateSettingSuffix"/></in-parameters><out-parameters><parameter name="shipment" type="Map"/><parameter name="orderIdSet" type="Set"><parameter name="orderId"/></parameter><parameter name="orderPartList" type="List"><parameter name="orderHeaderAndPart" type="Map"/></parameter><parameter name="invoiceIdSet" type="Set"><parameter name="invoiceId"/></parameter><parameter name="invoiceList" type="List"><parameter name="invoice" type="Map"/></parameter><parameter name="firstRouteSegment" type="Map"/><parameter name="carrierParty" type="Map"/><parameter name="shipmentMethodEnum" type="Map"/><parameter name="carrierShipmentMethod" type="Map"/><parameter name="lastRouteSegment" type="Map"/><parameter name="originFacility" type="Map"/><parameter name="destinationFacility" type="Map"/><parameter name="fromPartyId"><description><![CDATA[Shipment.fromPartyId or if empty then warehouse Facility.ownerPartyId]]></description></parameter><parameter name="fromPartyDetail" type="Map"/><parameter name="fromContactInfo" type="Map"><description><![CDATA[The from ship info, first by
                ShipmentRouteSegment.origin* fields then the warehouse Facility
                (using mantle.facility.ContactServices.get#FacilityDefaultShipOrigin) or if no warehouse or contact info
                found then from the mantle.party.ContactServices.get#PartyContactInfo service for the fromPartyId.]]></description></parameter><parameter name="logoImageLocation"/><parameter name="toPartyDetail" type="Map"/><parameter name="toContactInfo" type="Map"><description><![CDATA[The to ship info, first by ShipmentRouteSegment.dest*,
                then from the mantle.party.ContactServices.get#PartyContactInfo service for Shipment.toPartyId.]]></description></parameter><parameter name="toBillingContactInfo" type="Map"><description><![CDATA[If there is an order associated with this shipment the
                billing address for the order using OrderInfoServices.get#OrderPartBillingAddress]]></description></parameter><parameter name="reservedLocationInfoList" type="List"><parameter name="reservedLocationInfo" type="Map"/></parameter><parameter name="otherLocationInfoList" type="List"><parameter name="otherLocationInfo" type="Map"/></parameter><parameter name="productInfoList" type="List"><parameter name="productInfo" type="Map"/></parameter><parameter name="packageInfoList" type="List"><parameter name="packageInfo" type="Map"/></parameter><parameter name="reservedLocationInfoMap" type="Map"/><parameter name="otherLocationInfoMap" type="Map"/><parameter name="productInfoMap" type="Map"/><parameter name="templateLocation"><description><![CDATA[If templateSettingSuffix specified this is looked up from
                ProductStoreSetting and if no setting found for store then from PartySetting.]]></description></parameter></out-parameters><actions><service-call name="mantle.shipment.ShipmentServices.get#ShipmentContactInfo" out-map="[shipment:context.shipment,shipmentRouteSegmentList:context.shipmentRouteSegmentList,firstRouteSegment:context.firstRouteSegment,carrierParty:context.carrierParty,shipmentMethodEnum:context.shipmentMethodEnum,carrierShipmentMethod:context.carrierShipmentMethod,lastRouteSegment:context.lastRouteSegment,originFacility:context.originFacility,destinationFacility:context.destinationFacility,fromPartyId:context.fromPartyId,fromPartyDetail:context.fromPartyDetail,fromContactInfo:context.fromContactInfo,logoImageLocation:context.logoImageLocation,toPartyId:context.toPartyId,toPartyDetail:context.toPartyDetail,toContactInfo:context.toContactInfo]" in-map="[shipmentId:shipmentId]"/><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="shipmentItemSourceList"><econdition field-name="shipmentId"/></entity-find><set field="orderIdSet" from="new TreeSet()"/><set field="invoiceIdSet" from="new TreeSet()"/><set field="orderPartsById" from="[:]"/><iterate list="shipmentItemSourceList" entry="shipmentItemSource"><script><![CDATA[if (shipmentItemSource.orderId) orderIdSet.add(shipmentItemSource.orderId)
                if (shipmentItemSource.invoiceId) invoiceIdSet.add(shipmentItemSource.invoiceId)]]></script><if condition="shipmentItemSource.orderId && shipmentItemSource.orderItemSeqId"><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"><field-map field-name="orderId" from="shipmentItemSource.orderId"/><field-map field-name="orderItemSeqId" from="shipmentItemSource.orderItemSeqId"/></entity-find-one><set field="combinedPartId" from="orderItem.orderId + '::' + orderItem.orderPartSeqId"/><if condition="orderPartsById.get(combinedPartId) == null"><entity-find-one entity-name="mantle.order.OrderHeaderAndPart" value-field="orderHeaderAndPart"><field-map field-name="orderId" from="orderItem.orderId"/><field-map field-name="orderPartSeqId" from="orderItem.orderPartSeqId"/></entity-find-one><script><![CDATA[orderPartsById.put(combinedPartId, orderHeaderAndPart)]]></script></if></if></iterate><if condition="invoiceIdSet"><entity-find entity-name="mantle.account.invoice.Invoice" list="invoiceList"><econdition field-name="invoiceId" operator="in" from="invoiceIdSet"/></entity-find></if><set field="orderPartList" from="new ArrayList(orderPartsById.values())"/><order-map-list list="orderPartList"><order-by field-name="orderId"/><order-by field-name="orderPartSeqId"/></order-map-list><if condition="orderPartList"><service-call name="mantle.order.OrderInfoServices.get#OrderPartBillingAddress" out-map="[postalContactMechIdList:billAddrOut.postalContactMechIdList]" in-map="[orderId:orderPartList[0].orderId, orderPartSeqId:orderPartList[0].orderPartSeqId]"/><if condition="billAddrOut.postalContactMechIdList"><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:toBillingContactInfo.postalContactMechId,postalContactMech:toBillingContactInfo.postalContactMech,postalContactMechPurposeId:toBillingContactInfo.postalContactMechPurposeId,postalAddress:toBillingContactInfo.postalAddress,postalAddressStateGeo:toBillingContactInfo.postalAddressStateGeo,postalAddressCountryGeo:toBillingContactInfo.postalAddressCountryGeo,postalAddressGeoPoint:toBillingContactInfo.postalAddressGeoPoint,postalTrustLevelEnum:toBillingContactInfo.postalTrustLevelEnum,telecomContactMechId:toBillingContactInfo.telecomContactMechId,telecomContactMech:toBillingContactInfo.telecomContactMech,telecomPartyContactMech:toBillingContactInfo.telecomPartyContactMech,telecomContactMechPurposeId:toBillingContactInfo.telecomContactMechPurposeId,telecomNumber:toBillingContactInfo.telecomNumber,faxContactMechId:toBillingContactInfo.faxContactMechId,faxContactMech:toBillingContactInfo.faxContactMech,faxPartyContactMech:toBillingContactInfo.faxPartyContactMech,faxContactMechPurposeId:toBillingContactInfo.faxContactMechPurposeId,faxTelecomNumber:toBillingContactInfo.faxTelecomNumber,emailContactMechId:toBillingContactInfo.emailContactMechId,emailContactMech:toBillingContactInfo.emailContactMech,emailPartyContactMech:toBillingContactInfo.emailPartyContactMech,emailContactMechPurposeId:toBillingContactInfo.emailContactMechPurposeId,emailAddress:toBillingContactInfo.emailAddress,webContactMechId:toBillingContactInfo.webContactMechId,webContactMech:toBillingContactInfo.webContactMech,webPartyContactMech:toBillingContactInfo.webPartyContactMech,webContactMechPurposeId:toBillingContactInfo.webContactMechPurposeId,webAddress:toBillingContactInfo.webAddress,otherContactMechId:toBillingContactInfo.otherContactMechId,otherContactMech:toBillingContactInfo.otherContactMech,otherContactMechPurposeId:toBillingContactInfo.otherContactMechPurposeId,otherInfoString:toBillingContactInfo.otherInfoString]" in-map="[partyId:orderPartList[0].customerPartyId, postalContactMechId:billAddrOut.postalContactMechIdList[0]]"/></if></if><set field="assetAllowOtherOwner" from="originFacility?.assetAllowOtherOwner"/><set field="ownerPartyIdSet" from="new HashSet()"/><script><![CDATA[if (orderPartList) ownerPartyIdSet.addAll(orderPartList*.vendorPartyId)]]></script><if condition="ownerPartyIdSet && assetAllowOtherOwner != 'Y'"><set field="origOwnerPartyIdList" from="new ArrayList(ownerPartyIdSet)"/><iterate list="origOwnerPartyIdList" entry="ownerPartyId"><entity-find entity-name="mantle.party.PartyRelationship" list="parentRelList" cache="true"><date-filter/><econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup"/><econdition field-name="fromPartyId" from="ownerPartyId"/><econdition field-name="toPartyId" operator="is-not-null"/></entity-find><script><![CDATA[if (parentRelList) ownerPartyIdSet.addAll(parentRelList*.toPartyId)]]></script></iterate></if><set field="productInfoList" from="[]"/><set field="productInfoMap" from="[:]"/><set field="reservedLocationInfoMap" from="[:]"/><set field="otherLocationInfoMap" from="[:]"/><set field="issuedLocationInfoMap" from="[:]"/><entity-find entity-name="mantle.shipment.ShipmentItem" list="shipmentItemList"><econdition field-name="shipmentId"/><order-by field-name="productId"/></entity-find><set field="shipmentProductList" from="[]"/><iterate list="shipmentItemList" entry="shipmentItem"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="shipmentItem.productId"/></entity-find-one><if condition="product.productTypeEnumId == 'PtPickAssembly'"><then><entity-find entity-name="mantle.product.ProductAssoc" list="assocList"><date-filter/><econdition field-name="productId" from="shipmentItem.productId"/><econdition field-name="productAssocTypeEnumId" value="PatMfgBom"/></entity-find><iterate list="assocList" entry="assoc"><script><![CDATA[shipmentProductList.add([productId:assoc.toProductId, shipmentProductId:shipmentItem.productId,
                                quantity:shipmentItem.quantity, qtyMultiplier:assoc.quantity])]]></script></iterate></then><else><script><![CDATA[shipmentProductList.add([productId:shipmentItem.productId, shipmentProductId:shipmentItem.productId,
                            quantity:shipmentItem.quantity, qtyMultiplier:1.0])]]></script></else></if></iterate><iterate list="shipmentProductList" entry="shipmentProduct"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="shipmentProduct.productId"/></entity-find-one><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="sisList"><econdition field-name="shipmentId"/><econdition field-name="productId" from="shipmentProduct.shipmentProductId"/></entity-find><set field="productQuantity" from="0.0"/><set field="productReservedLocationInfoMap" from="[:]"/><set field="productOtherLocationInfoMap" from="[:]"/><set field="priceQuantityMap" from="[:]"/><iterate list="sisList" entry="sis"><if condition="!sis.quantityNotHandled"><continue/></if><set field="binLocationNumber" from="sis.binLocationNumber ?: shipment.binLocationNumber ?: 'N/A'"/><entity-find entity-name="mantle.product.issuance.AssetReservation" list="assetResList"><econdition field-name="orderId" from="sis.orderId"/><econdition field-name="orderItemSeqId" from="sis.orderItemSeqId"/><econdition field-name="productId" from="shipmentProduct.productId"/></entity-find><set field="reservedAssetIds" from="assetResList*.assetId"/><set field="curQuantityNotHandled" from="(sis.quantityNotHandled ?: 0.0) * (shipmentProduct.qtyMultiplier ?: 1.0)"/><iterate list="assetResList" entry="assetRes"><set field="resAsset" from="assetRes.asset"/><set field="assetLocKey" from="[facilityId:resAsset.facilityId, locationSeqId:resAsset.locationSeqId, lotId:resAsset.lotId]"/><set field="facLoc" from="resAsset.location"/><set field="geoPoint" from="facLoc?.geoPoint"/><entity-find-one entity-name="mantle.product.asset.LotAndMfgParty" value-field="lotAndMfg" cache="true"><field-map field-name="lotId" from="resAsset.lotId"/></entity-find-one><set field="assetLocInfo" from="[locationTypeEnum:facLoc?.type, lot:lotAndMfg, container:resAsset.container]"/><script><![CDATA[if (facLoc != null) assetLocInfo.putAll(facLoc)]]></script><script><![CDATA[if (geoPoint != null) assetLocInfo.putAll(geoPoint)]]></script><set field="reservedLocationInfo" from="reservedLocationInfoMap.get(assetLocKey)"/><if condition="!reservedLocationInfo"><set field="reservedLocationInfo" from="new HashMap(assetLocInfo)"/><set field="reservedLocationInfo.productInfoMap" from="[:]"/><script><![CDATA[reservedLocationInfoMap.put(assetLocKey, reservedLocationInfo)]]></script></if><set field="productReservedLocationInfo" from="productReservedLocationInfoMap.get(assetLocKey)"/><if condition="!productReservedLocationInfo"><set field="productReservedLocationInfo" from="new HashMap(assetLocInfo)"/><set field="productReservedLocationInfo.quantity" from="0.0"/><set field="productReservedLocationInfo.quantityByBin" from="new TreeMap()"/><script><![CDATA[productReservedLocationInfoMap.put(assetLocKey, productReservedLocationInfo)]]></script></if><set field="quantityNotIssued" from="assetRes.quantityNotIssued ?: 0.0"/><set field="quantityToAdd" from="curQuantityNotHandled > quantityNotIssued ? quantityNotIssued : curQuantityNotHandled"/><set field="productQuantity" from="productQuantity + quantityToAdd"/><set field="reservedProductInfo" from="reservedLocationInfo.productInfoMap.get(shipmentProduct.productId)"/><if condition="!reservedProductInfo"><script><![CDATA[reservedProductInfo = [quantity:0.0, quantityByBin:new TreeMap()]
                            reservedProductInfo.putAll(product)
                            reservedLocationInfo.productInfoMap.put(shipmentProduct.productId, reservedProductInfo)]]></script></if><set field="reservedProductInfo.quantity" from="reservedProductInfo.quantity + quantityToAdd"/><script><![CDATA[addToBigDecimalInMap(binLocationNumber, quantityToAdd, reservedProductInfo.quantityByBin)]]></script><set field="productReservedLocationInfo.quantity" from="productReservedLocationInfo.quantity + quantityToAdd"/><script><![CDATA[addToBigDecimalInMap(binLocationNumber, quantityToAdd, productReservedLocationInfo.quantityByBin)]]></script><set field="curQuantityNotHandled" from="curQuantityNotHandled - quantityToAdd"/><if condition="curQuantityNotHandled == 0.0"><break/></if></iterate><entity-find entity-name="mantle.product.asset.Asset" list="assetList"><econdition field-name="productId" from="shipmentProduct.productId"/><econdition field-name="statusId" value="AstAvailable"/><econdition field-name="availableToPromiseTotal" operator="greater" from="0"/><econdition field-name="facilityId" from="originFacility?.facilityId" ignore-if-empty="true"/><econdition field-name="assetId" operator="not-in" from="reservedAssetIds" ignore-if-empty="true"/><econdition field-name="ownerPartyId" operator="in" from="ownerPartyIdSet" ignore="assetAllowOtherOwner == 'Y' || !ownerPartyIdSet"/><order-by field-name="receivedDate"/></entity-find><set field="curQuantityNotHandled" from="(sis.quantityNotHandled ?: 0.0) * (shipmentProduct.qtyMultiplier ?: 1.0)"/><iterate list="assetList" entry="asset"><set field="assetLocKey" from="[facilityId:asset.facilityId, locationSeqId:asset.locationSeqId, lotId:asset.lotId]"/><set field="facLoc" from="asset.location"/><set field="geoPoint" from="facLoc?.geoPoint"/><entity-find-one entity-name="mantle.product.asset.LotAndMfgParty" value-field="lotAndMfg" cache="true"><field-map field-name="lotId" from="asset.lotId"/></entity-find-one><set field="assetLocInfo" from="[locationTypeEnum:facLoc?.type, lot:lotAndMfg, container:asset.container]"/><script><![CDATA[if (facLoc != null) assetLocInfo.putAll(facLoc)]]></script><script><![CDATA[if (geoPoint != null) assetLocInfo.putAll(geoPoint)]]></script><set field="otherLocationInfo" from="otherLocationInfoMap.get(assetLocKey)"/><if condition="!otherLocationInfo"><set field="otherLocationInfo" from="new HashMap(assetLocInfo)"/><set field="otherLocationInfo.productInfoMap" from="[:]"/><script><![CDATA[otherLocationInfoMap.put(assetLocKey, otherLocationInfo)]]></script></if><set field="productOtherLocationInfo" from="productOtherLocationInfoMap.get(assetLocKey)"/><if condition="!productOtherLocationInfo"><set field="productOtherLocationInfo" from="new HashMap(assetLocInfo)"/><set field="productOtherLocationInfo.quantity" from="0.0"/><set field="productOtherLocationInfo.quantityByBin" from="new TreeMap()"/><script><![CDATA[productOtherLocationInfoMap.put(assetLocKey, productOtherLocationInfo)]]></script></if><set field="quantityToAdd" from="curQuantityNotHandled > asset.availableToPromiseTotal ? asset.availableToPromiseTotal : curQuantityNotHandled"/><set field="productInfo" from="otherLocationInfo.productInfoMap.get(shipmentProduct.productId)"/><if condition="!productInfo"><script><![CDATA[productInfo = [quantity:0.0, quantityByBin:new TreeMap()]
                            productInfo.putAll(product)
                            otherLocationInfo.productInfoMap.put(shipmentProduct.productId, productInfo)]]></script></if><set field="productInfo.quantity" from="productInfo.quantity + quantityToAdd"/><script><![CDATA[addToBigDecimalInMap(binLocationNumber, quantityToAdd, productInfo.quantityByBin)]]></script><set field="productOtherLocationInfo.quantity" from="productOtherLocationInfo.quantity + quantityToAdd"/><script><![CDATA[addToBigDecimalInMap(binLocationNumber, quantityToAdd, productOtherLocationInfo.quantityByBin)]]></script><set field="curQuantityNotHandled" from="curQuantityNotHandled - quantityToAdd"/><if condition="curQuantityNotHandled == 0.0"><break/></if></iterate></iterate><set field="productReservedLocationInfoList" from="new ArrayList(productReservedLocationInfoMap.values())"/><order-map-list list="productReservedLocationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><set field="productOtherLocationInfoList" from="new ArrayList(productOtherLocationInfoMap.values())"/><order-map-list list="productOtherLocationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><set field="productIssuedLocationInfoMap" from="[:]"/><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="assetIssuanceList"><econdition field-name="shipmentId"/><econdition field-name="productId" from="shipmentProduct.productId"/></entity-find><iterate list="assetIssuanceList" entry="assetIssuance"><set field="issAsset" from="assetIssuance.asset"/><set field="assetLocKey" from="[facilityId:issAsset.facilityId, locationSeqId:issAsset.locationSeqId, lotId:issAsset.lotId]"/><set field="facLoc" from="issAsset.location"/><set field="geoPoint" from="facLoc?.geoPoint"/><entity-find-one entity-name="mantle.product.asset.LotAndMfgParty" value-field="lotAndMfg" cache="true"><field-map field-name="lotId" from="issAsset.lotId"/></entity-find-one><set field="assetLocInfo" from="[locationTypeEnum:facLoc?.type, lot:lotAndMfg]"/><script><![CDATA[if (facLoc != null) assetLocInfo.putAll(facLoc)]]></script><script><![CDATA[if (geoPoint != null) assetLocInfo.putAll(geoPoint)]]></script><set field="issuedLocationInfo" from="issuedLocationInfoMap.get(assetLocKey)"/><if condition="!issuedLocationInfo"><set field="issuedLocationInfo" from="new HashMap(assetLocInfo)"/><set field="issuedLocationInfo.productInfoMap" from="[:]"/><script><![CDATA[issuedLocationInfoMap.put(assetLocKey, issuedLocationInfo)]]></script></if><set field="productIssuedLocationInfo" from="productIssuedLocationInfoMap.get(assetLocKey)"/><if condition="!productIssuedLocationInfo"><set field="productIssuedLocationInfo" from="new HashMap(assetLocInfo)"/><script><![CDATA[productIssuedLocationInfoMap.put(assetLocKey, productIssuedLocationInfo)]]></script></if><set field="productQuantity" from="productQuantity + assetIssuance.quantity"/><set field="issuedProductInfo" from="issuedLocationInfo.productInfoMap.get(shipmentProduct.productId)"/><if condition="!issuedProductInfo"><script><![CDATA[issuedProductInfo = [:]
                        issuedProductInfo.putAll(product)
                        issuedLocationInfo.productInfoMap.put(shipmentProduct.productId, issuedProductInfo)]]></script></if><script><![CDATA[addToBigDecimalInMap('quantity', assetIssuance.quantity, issuedProductInfo)]]></script><script><![CDATA[addToBigDecimalInMap('quantity', assetIssuance.quantity, productIssuedLocationInfo)]]></script><set field="issOrderItem" from="assetIssuance.orderItem"/><if condition="issOrderItem != null"><if condition="productIssuedLocationInfo.priceQuantityMap == null"><set field="productIssuedLocationInfo.priceQuantityMap" from="[:]"/></if><script><![CDATA[addToBigDecimalInMap(issOrderItem.unitAmount, assetIssuance.quantity, productIssuedLocationInfo.priceQuantityMap)]]></script><script><![CDATA[addToBigDecimalInMap(issOrderItem.unitAmount, assetIssuance.quantity, priceQuantityMap)]]></script></if></iterate><set field="productIssuedLocationInfoList" from="new ArrayList(productIssuedLocationInfoMap.values())"/><order-map-list list="productIssuedLocationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><script><![CDATA[productInfo = [reservedLocationInfoList:productReservedLocationInfoList,
                                   productReservedLocationInfoMap:productReservedLocationInfoMap,
                                   otherLocationInfoList:productOtherLocationInfoList,
                                   productOtherLocationInfoMap:productOtherLocationInfoMap,
                                   productIssuedLocationInfoList:productIssuedLocationInfoList,
                                   quantity:productQuantity, priceQuantityMap:priceQuantityMap]
                    productInfo.putAll(product)
                    productInfoList.add(productInfo)
                    productInfoMap.put(shipmentProduct.productId, productInfo)]]></script></iterate><iterate list="reservedLocationInfoMap" entry="locationInfo" key="assetLocKey"><set field="locationInfo.productInfoList" from="new ArrayList(locationInfo.productInfoMap.values())"/><order-map-list list="locationInfo.productInfoList"><order-by field-name="${productOrderBy}"/></order-map-list></iterate><iterate list="otherLocationInfoMap" entry="locationInfo" key="assetLocKey"><set field="locationInfo.productInfoList" from="new ArrayList(locationInfo.productInfoMap.values())"/><order-map-list list="locationInfo.productInfoList"><order-by field-name="${productOrderBy}"/></order-map-list></iterate><set field="reservedLocationInfoList" from="new ArrayList(reservedLocationInfoMap.values())"/><order-map-list list="reservedLocationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><set field="otherLocationInfoList" from="new ArrayList(otherLocationInfoMap.values())"/><order-map-list list="otherLocationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><order-map-list list="productInfoList"><order-by field-name="${productOrderBy}"/></order-map-list><set field="orderedQuantityByProductId" from="[:]"/><set field="otherPartyProductIdByProductId" from="[:]"/><set field="shippedQuantityByProductId" from="[:]"/><if condition="orderIdSet"><entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true"><econdition field-name="enumGroupEnumId" value="EngItemsProduct"/></entity-find><set field="productItemTypes" from="productItemTypeEgms*.enumId"/><entity-find entity-name="mantle.order.OrderItemSummary" list="orderItemSummaryList"><econdition field-name="orderId" operator="in" from="orderIdSet"/><econdition field-name="productId" operator="is-not-null"/><econdition field-name="itemTypeEnumId" operator="in" from="productItemTypes"/><select-field field-name="productId,quantity"/></entity-find><iterate list="orderItemSummaryList" entry="oiSummary"><script><![CDATA[orderedQuantityByProductId.put(oiSummary.productId, oiSummary.quantity)]]></script></iterate><entity-find entity-name="mantle.order.OrderItem" list="orderItemProductIdList"><econdition field-name="orderId" operator="in" from="orderIdSet"/><econdition field-name="productId" operator="is-not-null"/><econdition field-name="otherPartyProductId" operator="is-not-null"/><select-field field-name="productId,otherPartyProductId"/></entity-find><iterate list="orderItemProductIdList" entry="orderItem"><script><![CDATA[otherPartyProductIdByProductId.put(orderItem.productId, orderItem.otherPartyProductId)]]></script></iterate><entity-find entity-name="mantle.shipment.ShipmentItemSourceSummary" list="sisSummaryList"><econdition field-name="orderId" operator="in" from="orderIdSet"/><econdition field-name="productId" operator="is-not-null"/><select-field field-name="productId,quantityShipped"/></entity-find><iterate list="sisSummaryList" entry="sisSummary"><script><![CDATA[shippedQuantityByProductId.put(sisSummary.productId, sisSummary.quantityShipped)]]></script></iterate></if><entity-find entity-name="mantle.shipment.ShipmentPackage" list="shipmentPackageList"><econdition field-name="shipmentId"/><order-by field-name="shipmentPackageSeqId"/></entity-find><set field="packageInfoList" from="[]"/><iterate list="shipmentPackageList" entry="shipmentPackage"><set field="shipmentBoxType" from="shipmentPackage.boxType"/><set field="weightUom" from="shipmentPackage.weightUom"/><entity-find entity-name="mantle.shipment.ShipmentPackageContent" list="shipmentPackageContentList"><econdition field-name="shipmentId"/><econdition field-name="shipmentPackageSeqId" from="shipmentPackage.shipmentPackageSeqId"/><order-by field-name="productId"/></entity-find><set field="contentInfoList" from="[]"/><iterate list="shipmentPackageContentList" entry="packageContent"><set field="productInfo" from="productInfoMap.get(packageContent.productId)"/><script><![CDATA[contentInfoList.add([packageContent:packageContent, productInfo:productInfo,
                            quantityOrdered:orderedQuantityByProductId.get(packageContent.productId),
                            otherPartyProductId:otherPartyProductIdByProductId.get(packageContent.productId),
                            quantityShipped:shippedQuantityByProductId.get(packageContent.productId)])]]></script></iterate><script><![CDATA[packageInfoList.add([shipmentPackage:shipmentPackage, shipmentBoxType:shipmentBoxType, weightUom:weightUom,
                                             contentInfoList:contentInfoList])]]></script></iterate><if condition="templateSettingSuffix"><set field="templateLocation" from="null"/><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="shipmentItemSourceList" distinct="true"><econdition field-name="shipmentId"/><select-field field-name="orderId"/></entity-find><set field="orderIdSet" from="new HashSet(shipmentItemSourceList*.orderId)"/><if condition="orderIdSet"><entity-find entity-name="mantle.order.OrderHeader" list="orderHeaderList" distinct="true"><econdition field-name="orderId" operator="in" from="orderIdSet"/><econdition field-name="productStoreId" operator="is-not-null"/><select-field field-name="productStoreId"/></entity-find><set field="productStoreIdSet" from="new HashSet(orderHeaderList*.productStoreId)"/><if condition="productStoreIdSet"><entity-find entity-name="mantle.product.store.ProductStoreSetting" list="productStoreSettingList" cache="true"><date-filter/><econdition field-name="productStoreId" from="productStoreIdSet.first()"/><econdition field-name="settingTypeEnumId" value="Psst${templateSettingSuffix}"/><order-by field-name="-fromDate"/></entity-find><if condition="productStoreSettingList"><set field="templateLocation" from="productStoreSettingList[0].settingValue"/></if></if></if><if condition="!templateLocation && shipment.fromPartyId"><service-call name="mantle.party.PartyServices.get#PartySettingValue" out-map="[settingValue:ptySettingOut.settingValue]" in-map="[partyId:shipment.fromPartyId, partySettingTypeId:('Org' + templateSettingSuffix)]"/><set field="templateLocation" from="ptySettingOut?.settingValue"/></if></if></actions></service>