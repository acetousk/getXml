<!--Service Location org.moqui.impl.EntityServices.rewrite#EntityEncryptedFieldsAll--><service verb="rewrite" noun="EntityEncryptedFieldsAll"><in-parameters><parameter name="entityNameRegex"/></in-parameters><out-parameters><parameter name="entitiesUpdated" type="Long"/><parameter name="recordsUpdated" type="Long"/></out-parameters><actions><set field="entityNamePattern" from="entityNameRegex ? java.util.regex.Pattern.compile(entityNameRegex, (java.util.regex.Pattern.CASE_INSENSITIVE | java.util.regex.Pattern.DOTALL)) : null"/><set field="entitiesUpdated" from="0L"/><set field="recordsUpdated" from="0L"/><iterate list="ec.entity.getAllEntityNames()" entry="entityName"><if condition="entityNamePattern != null && !entityNamePattern.matcher(entityName).matches()"><continue/></if><set field="entityDef" from="ec.entity.getEntityDefinition(entityName)"/><if condition="entityDef.isViewEntity"><continue/></if><if condition="entityDef.entityInfo.needsEncrypt"><log message="Starting encrypted fields rewrite for entity ${entityName}"/><service-call name="org.moqui.impl.EntityServices.rewrite#EntityEncryptedFields" transaction="force-new" out-map="[recordsUpdated:rewriteOut.recordsUpdated]" out-map-add-to-existing="false" in-map="[entityName:entityName]"/><log message="Finished encrypted fields rewrite for entity ${entityName}, updated ${rewriteOut.recordsUpdated} records"/><set field="entitiesUpdated" from="entitiesUpdated + 1L"/><set field="recordsUpdated" from="recordsUpdated + (rewriteOut.recordsUpdated ?: 0L)"/></if></iterate></actions></service>