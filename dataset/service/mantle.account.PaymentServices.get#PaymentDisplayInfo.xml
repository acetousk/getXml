<!--Service Location mantle.account.PaymentServices.get#PaymentDisplayInfo--><service verb="get" noun="PaymentDisplayInfo"><in-parameters><parameter name="paymentId" required="true"/></in-parameters><out-parameters><parameter name="payment" type="Map"/><parameter name="isFromPartyOrgInternal" type="Boolean"><description><![CDATA[If true payment is outgoing]]></description></parameter><parameter name="isToPartyOrgInternal" type="Boolean"><description><![CDATA[If true payment is incoming]]></description></parameter><parameter name="dupPaymentList" type="List"><description><![CDATA[List of payments matching paymentRefNum and fromPartyId]]></description><parameter name="dupPayment" type="Map"/></parameter><parameter name="paymentDescription"/><parameter name="paymentTotal" type="BigDecimal"/><parameter name="appliedTotal" type="BigDecimal"/><parameter name="unappliedTotal" type="BigDecimal"/><parameter name="statusHistoryList" type="List"><parameter name="auditLog" type="Map"/></parameter><parameter name="paymentApplicationList" type="List"><parameter name="paymentApplication" type="Map"/></parameter><parameter name="orderItemBillingList" type="List"><parameter name="orderItemBilling" type="Map"/></parameter><parameter name="invoiceIdSet" type="Set"><parameter name="invoiceId"/></parameter><parameter name="returnItemList" type="List"><parameter name="returnItem" type="Map"/></parameter><parameter name="returnIdSet" type="Set"><parameter name="returnId"/></parameter><parameter name="acctgTransList" type="List"><parameter name="acctgTrans" type="Map"/></parameter><parameter name="acctgTransIdSet" type="Set"><parameter name="acctgTransId"/></parameter><parameter name="unpaidInvoiceInfoList" type="List"><parameter name="unpaidInvoiceInfo" type="Map"><parameter name="invoice" type="Map"/><parameter name="invoiceTotal" type="BigDecimal"/><parameter name="appliedPaymentsTotal" type="BigDecimal"/><parameter name="unpaidTotal" type="BigDecimal"/><parameter name="maxApplicableAmount" type="BigDecimal"/></parameter></parameter><parameter name="unappliedPaymentInfoList" type="List"><parameter name="unappliedPaymentInfo" type="Map"/></parameter><parameter name="refundPaymentList" type="List"><parameter name="refundPayment" type="Map"/></parameter></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/><if condition="payment == null"><return error="true" message="Payment ${paymentId} not found"/></if><entity-find entity-name="mantle.party.PartyRole" list="fromOrgInternalList"><econdition field-name="partyId" from="payment.fromPartyId"/><econdition field-name="roleTypeId" value="OrgInternal"/></entity-find><set field="isFromPartyOrgInternal" from="fromOrgInternalList as boolean"/><entity-find entity-name="mantle.party.PartyRole" list="toOrgInternalList"><econdition field-name="partyId" from="payment.toPartyId"/><econdition field-name="roleTypeId" value="OrgInternal"/></entity-find><set field="isToPartyOrgInternal" from="toOrgInternalList as boolean"/><if condition="payment.paymentRefNum"><entity-find entity-name="mantle.account.payment.Payment" list="dupPaymentList"><econdition field-name="paymentId" operator="not-equals"/><econdition field-name="fromPartyId" from="payment.fromPartyId"/><econdition field-name="paymentMethodId" from="payment.paymentMethodId" ignore-if-empty="true"/><econdition field-name="paymentRefNum" from="payment.paymentRefNum"/></entity-find></if><service-call name="mantle.account.PaymentServices.get#PaymentDescription" in-map="context" out-map="[paymentDescription:context.paymentDescription]"/><service-call name="mantle.account.PaymentServices.get#PaymentTotals" in-map="context" out-map="[paymentTotal:context.paymentTotal,appliedTotal:context.appliedTotal,unappliedTotal:context.unappliedTotal]"/><entity-find entity-name="moqui.entity.EntityAuditLog" list="statusHistoryList"><econdition field-name="changedEntityName" value="mantle.account.payment.Payment"/><econdition field-name="changedFieldName" value="statusId"/><econdition field-name="pkPrimaryValue" from="paymentId"/><order-by field-name="changedDate"/></entity-find><entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList"><econditions combine="or"><econdition field-name="paymentId"/><econdition field-name="toPaymentId" from="paymentId"/></econditions><order-by field-name="appliedDate"/></entity-find><if condition="payment.orderId"><entity-find entity-name="mantle.order.OrderItemBilling" list="orderItemBillingList"><econdition field-name="orderId" from="payment.orderId"/><order-by field-name="invoiceId,invoiceItemSeqId"/></entity-find></if><set field="invoiceIdSet" from="new TreeSet()"/><iterate list="paymentApplicationList" entry="paymentApplication"><script><![CDATA[if (paymentApplication.invoiceId) invoiceIdSet.add(paymentApplication.invoiceId)]]></script></iterate><iterate list="orderItemBillingList" entry="orderItemBilling"><script><![CDATA[invoiceIdSet.add(orderItemBilling.invoiceId)]]></script></iterate><entity-find entity-name="mantle.order.return.ReturnItem" list="returnItemList"><econdition field-name="refundPaymentId" from="paymentId"/><order-by field-name="returnId,returnItemSeqId"/></entity-find><set field="returnIdSet" from="new TreeSet(returnItemList*.returnId)"/><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="acctgTransList"><econdition field-name="paymentId"/></entity-find><set field="acctgTransIdSet" from="new TreeSet()"/><iterate list="acctgTransList" entry="acctgTrans"><script><![CDATA[acctgTransIdSet.add(acctgTrans.acctgTransId)]]></script></iterate><entity-find entity-name="mantle.account.invoice.Invoice" list="unpaidInvoiceList"><econdition field-name="fromPartyId" from="payment.toPartyId"/><econdition field-name="toPartyId" from="payment.fromPartyId"/><econdition field-name="statusId" operator="in" value="InvoiceInProcess,InvoiceFinalized,InvoiceSent,InvoiceAcked,InvoiceReceived,InvoiceApproved"/><econdition field-name="unpaidTotal" operator="greater" from="0.0"/><order-by field-name="invoiceDate,invoiceId"/></entity-find><set field="unpaidInvoiceInfoList" from="[]"/><iterate list="unpaidInvoiceList" entry="unpaidInvoice"><service-call name="mantle.account.InvoiceServices.get#InvoiceTotal" in-map="[invoiceId:unpaidInvoice.invoiceId]" out-map="[invoiceTotal:invTot.invoiceTotal,appliedPaymentsTotal:invTot.appliedPaymentsTotal,unpaidTotal:invTot.unpaidTotal]" out-map-add-to-existing="false"/><set field="maxApplicableAmount" from="unappliedTotal"/><if condition="maxApplicableAmount > invTot.unpaidTotal"><set field="maxApplicableAmount" from="invTot.unpaidTotal"/></if><script><![CDATA[unpaidInvoiceInfoList.add(invTot + [invoice:unpaidInvoice, maxApplicableAmount:maxApplicableAmount,
                        allowApply:(maxApplicableAmount && unpaidInvoice.statusId in ['InvoiceFinalized','InvoiceSent','InvoiceAcked','InvoiceApproved'])])]]></script></iterate><entity-find entity-name="mantle.account.payment.Payment" list="unappliedPaymentList"><econdition field-name="fromPartyId" from="payment.toPartyId"/><econdition field-name="toPartyId" from="payment.fromPartyId"/><econdition field-name="paymentTypeEnumId" operator="in" value="PtInvoicePayment,PtPrePayment,PtPrePaymentInventory,PtRefund"/><econdition field-name="statusId" operator="in" value="PmntPromised,PmntAuthorized,PmntDelivered,PmntConfirmed"/><econdition field-name="unappliedTotal" operator="greater" from="0.0"/><order-by field-name="effectiveDate,paymentId"/></entity-find><set field="unappliedPaymentInfoList" from="[]"/><iterate list="unappliedPaymentList" entry="unappliedPayment"><service-call name="mantle.account.PaymentServices.get#PaymentTotals" in-map="[paymentId:unappliedPayment.paymentId]" out-map="[paymentTotal:pmtTotal.paymentTotal,appliedTotal:pmtTotal.appliedTotal,unappliedTotal:pmtTotal.unappliedTotal]" out-map-add-to-existing="false"/><set field="maxApplicableAmount" from="unappliedTotal"/><if condition="maxApplicableAmount > pmtTotal.unappliedTotal"><set field="maxApplicableAmount" from="pmtTotal.unappliedTotal"/></if><script><![CDATA[unappliedPaymentInfoList.add(pmtTotal + [payment:unappliedPayment, maxApplicableAmount:maxApplicableAmount,
                    allowApply:(maxApplicableAmount && unappliedPayment.statusId in ['PmntDelivered','PmntConfirmed'])])]]></script></iterate><entity-find entity-name="mantle.account.payment.Payment" list="refundPaymentList"><econdition field-name="refundForPaymentId" from="paymentId"/></entity-find></actions></service>