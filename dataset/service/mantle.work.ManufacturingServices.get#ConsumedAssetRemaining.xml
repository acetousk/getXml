<!--Service Location mantle.work.ManufacturingServices.get#ConsumedAssetRemaining--><service verb="get" noun="ConsumedAssetRemaining"><in-parameters><parameter name="workEffortId" required="true"/></in-parameters><out-parameters><parameter name="consumeWepList" type="List"><parameter name="consumeWep" type="Map"/></parameter><parameter name="produceWepList" type="List"><parameter name="produceWep" type="Map"/></parameter><parameter name="componentIssuedQtyByProduct" type="Map"/><parameter name="componentUsedQtyByProduct" type="Map"/><parameter name="componentIssuedAvailable" type="Map"><description><![CDATA[Issued to WE and available, or in other words unused in produced assemblies]]></description></parameter><parameter name="assemblyCanProduceQty" type="Map"/><parameter name="assemblyReceivedByProduct" type="Map"/></out-parameters><actions><entity-find entity-name="mantle.work.effort.WorkEffortProduct" list="allWorkEffortProductList"><date-filter/><econdition field-name="workEffortId"/><order-by field-name="productId"/></entity-find><filter-map-list list="allWorkEffortProductList" to-list="consumeWepList"><field-map field-name="typeEnumId" value="WeptConsume"/></filter-map-list><filter-map-list list="allWorkEffortProductList" to-list="produceWepList"><field-map field-name="typeEnumId" value="WeptProduce"/></filter-map-list><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="issuanceList"><econdition field-name="workEffortId"/></entity-find><entity-find entity-name="mantle.product.receipt.AssetReceipt" list="receiptList"><econdition field-name="workEffortId"/></entity-find><entity-find entity-name="mantle.work.effort.WorkEffortProductAssoc" list="produceBomAssocList"><date-filter/><date-filter from-field-name="componentFromDate" thru-field-name="componentThruDate"/><econdition field-name="workEffortId"/><econdition field-name="typeEnumId" value="WeptProduce"/></entity-find><set field="componentIssuedQtyByProduct" from="[:]"/><iterate list="issuanceList" entry="issuance"><script><![CDATA[addToBigDecimalInMap(issuance.productId, issuance.quantity, componentIssuedQtyByProduct)]]></script></iterate><set field="assemblyReceivedByProduct" from="[:]"/><iterate list="receiptList" entry="receipt"><script><![CDATA[addToBigDecimalInMap(receipt.productId, receipt.quantityAccepted, assemblyReceivedByProduct)]]></script></iterate><set field="componentUsedQtyByProduct" from="[:]"/><iterate list="receiptList" entry="receipt"><filter-map-list list="produceBomAssocList" to-list="curBomAssocList"><field-map field-name="productId" from="receipt.productId"/></filter-map-list><iterate list="curBomAssocList" entry="curBomAssoc"><set field="usedQuantity" from="(receipt.quantityAccepted ?: 0.0) * (curBomAssoc.componentQuantity ?: 1.0)"/><script><![CDATA[addToBigDecimalInMap(curBomAssoc.toProductId, usedQuantity, componentUsedQtyByProduct)]]></script></iterate></iterate><set field="componentIssuedAvailable" from="[:]"/><iterate list="componentIssuedQtyByProduct" key="productId" entry="issuedQuantity"><set field="usedQuantity" from="componentUsedQtyByProduct.get(productId) ?: 0.0"/><set field="availQuantity" from="(issuedQuantity ?: 0.0) - usedQuantity"/><script><![CDATA[if (availQuantity != 0.0) componentIssuedAvailable.put(productId, availQuantity)]]></script></iterate><set field="assemblyCanProduceQty" from="[:]"/><iterate list="produceWepList" entry="produceProd"><filter-map-list list="produceBomAssocList" to-list="curBomAssocList"><field-map field-name="productId" from="produceProd.productId"/></filter-map-list><set field="produceQty" from="0.0"/><iterate list="curBomAssocList" entry="curBomAssoc"><set field="availableQty" from="componentIssuedAvailable.get(curBomAssoc.toProductId)"/><if condition="!availableQty"><set field="produceQty" from="0.0"/><break/></if><set field="compScale" from="curBomAssoc.componentQuantity != null ? curBomAssoc.componentQuantity.scale() : 0"/><set field="proratedQty" from="availableQty.divide((curBomAssoc.componentQuantity ?: 1.0), compScale, BigDecimal.ROUND_FLOOR)"/><if condition="produceQty == 0.0 || produceQty > proratedQty"><set field="produceQty" from="proratedQty"/></if></iterate><if condition="produceQty"><if condition="produceQty > produceProd.estimatedQuantity"><set field="produceQty" from="produceProd.estimatedQuantity"/></if><script><![CDATA[assemblyCanProduceQty.put(produceProd.productId, produceQty)]]></script></if></iterate></actions></service>