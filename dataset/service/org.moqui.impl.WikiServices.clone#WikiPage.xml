<!--Service Location org.moqui.impl.WikiServices.clone#WikiPage--><service verb="clone" noun="WikiPage"><in-parameters><parameter name="baseWikiSpaceId" required="true"><description><![CDATA[Source/base wiki space]]></description></parameter><parameter name="wikiSpaceId" required="true" entity-name="moqui.resource.wiki.WikiPage" field-name="wikiSpaceId"><description><![CDATA[Destination/target wiki space]]></description></parameter><parameter name="pagePath" entity-name="moqui.resource.wiki.WikiPage" field-name="pagePath"><description><![CDATA[Source page path]]></description></parameter><parameter name="parentPath"><description><![CDATA[Path of parent page in target space (wikiSpaceId), if not specified use the same pagePath as the source]]></description></parameter><parameter name="copyAttachments" type="Boolean" default="true"/><parameter name="publishNew" type="Boolean" default="true"/></in-parameters><out-parameters><parameter name="basePageInfo" type="Map"/><parameter name="wikiPageId" entity-name="moqui.resource.wiki.WikiPage" field-name="wikiPageId"/><parameter name="pagePath" entity-name="moqui.resource.wiki.WikiPage" field-name="pagePath"/></out-parameters><actions><log message="Cloning WikiPage ${pagePath} from space ${baseWikiSpaceId} to space ${wikiSpaceId} with parentPath ${parentPath}"/><service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" out-map="[wikiSpaceId:basePageInfo.wikiSpaceId,pagePath:basePageInfo.pagePath,wikiPageId:basePageInfo.wikiPageId,wikiSpace:basePageInfo.wikiSpace,wikiPage:basePageInfo.wikiPage,rootPageLocation:basePageInfo.rootPageLocation,rootPageRef:basePageInfo.rootPageRef,spaceRootName:basePageInfo.spaceRootName,pageReference:basePageInfo.pageReference,wikiType:basePageInfo.wikiType,versionName:basePageInfo.versionName,currentVersionName:basePageInfo.currentVersionName,publishedVersionName:basePageInfo.publishedVersionName,attachmentList:basePageInfo.attachmentList,pageLocation:basePageInfo.pageLocation,pageName:basePageInfo.pageName,parentPath:basePageInfo.parentPath,breadcrumbNameList:basePageInfo.breadcrumbNameList,breadcrumbMapList:basePageInfo.breadcrumbMapList]" in-map="[wikiSpaceId:baseWikiSpaceId, pagePath:pagePath]"/><if condition="pagePath"><then><if condition="parentPath == wikiSpaceId"><then><set field="parentPath" from="null"/></then><else><set field="parentPath" from="parentPath ?: basePageInfo.parentPath"/><service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" out-map="[wikiSpaceId:parentPageInfo.wikiSpaceId,pagePath:parentPageInfo.pagePath,wikiPageId:parentPageInfo.wikiPageId,wikiSpace:parentPageInfo.wikiSpace,wikiPage:parentPageInfo.wikiPage,rootPageLocation:parentPageInfo.rootPageLocation,rootPageRef:parentPageInfo.rootPageRef,spaceRootName:parentPageInfo.spaceRootName,pageReference:parentPageInfo.pageReference,wikiType:parentPageInfo.wikiType,versionName:parentPageInfo.versionName,currentVersionName:parentPageInfo.currentVersionName,publishedVersionName:parentPageInfo.publishedVersionName,attachmentList:parentPageInfo.attachmentList,pageLocation:parentPageInfo.pageLocation,pageName:parentPageInfo.pageName,parentPath:parentPageInfo.parentPath,breadcrumbNameList:parentPageInfo.breadcrumbNameList,breadcrumbMapList:parentPageInfo.breadcrumbMapList]" in-map="[wikiSpaceId:wikiSpaceId, pagePath:parentPath]"/><if condition="parentPageInfo.pageReference == null || !parentPageInfo.pageReference.exists"><message><![CDATA[Parent page not found at ${parentPath}, copying under Root Page]]></message><set field="parentPath" from="null"/></if></else></if><service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" out-map="[wikiSpaceId:existingPageInfo.wikiSpaceId,pagePath:existingPageInfo.pagePath,wikiPageId:existingPageInfo.wikiPageId,wikiSpace:existingPageInfo.wikiSpace,wikiPage:existingPageInfo.wikiPage,rootPageLocation:existingPageInfo.rootPageLocation,rootPageRef:existingPageInfo.rootPageRef,spaceRootName:existingPageInfo.spaceRootName,pageReference:existingPageInfo.pageReference,wikiType:existingPageInfo.wikiType,versionName:existingPageInfo.versionName,currentVersionName:existingPageInfo.currentVersionName,publishedVersionName:existingPageInfo.publishedVersionName,attachmentList:existingPageInfo.attachmentList,pageLocation:existingPageInfo.pageLocation,pageName:existingPageInfo.pageName,parentPath:existingPageInfo.parentPath,breadcrumbNameList:existingPageInfo.breadcrumbNameList,breadcrumbMapList:existingPageInfo.breadcrumbMapList]" in-map="[wikiSpaceId:wikiSpaceId, pagePath:((parentPath ? parentPath+'/' : '') + (basePageInfo.pageName?:''))]"/><if condition="existingPageInfo.pageReference?.exists"><return type="danger" message="Page already exists in space ${wikiSpaceId} at ${parentPath?:''}/${basePageInfo.pageName}"/></if><service-call name="org.moqui.impl.WikiServices.update#WikiPage" out-map="[wikiPageId:newPageOut.wikiPageId,pagePath:newPageOut.pagePath,encodedPagePath:newPageOut.encodedPagePath]" in-map="[wikiSpaceId:wikiSpaceId, pageName:basePageInfo.pageName,                             parentPath:parentPath, wikiType:basePageInfo.wikiType,                             pageText:basePageInfo.pageReference.getText()]"/><service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" out-map="[wikiSpaceId:newPageInfo.wikiSpaceId,pagePath:newPageInfo.pagePath,wikiPageId:newPageInfo.wikiPageId,wikiSpace:newPageInfo.wikiSpace,wikiPage:newPageInfo.wikiPage,rootPageLocation:newPageInfo.rootPageLocation,rootPageRef:newPageInfo.rootPageRef,spaceRootName:newPageInfo.spaceRootName,pageReference:newPageInfo.pageReference,wikiType:newPageInfo.wikiType,versionName:newPageInfo.versionName,currentVersionName:newPageInfo.currentVersionName,publishedVersionName:newPageInfo.publishedVersionName,attachmentList:newPageInfo.attachmentList,pageLocation:newPageInfo.pageLocation,pageName:newPageInfo.pageName,parentPath:newPageInfo.parentPath,breadcrumbNameList:newPageInfo.breadcrumbNameList,breadcrumbMapList:newPageInfo.breadcrumbMapList]" in-map="[wikiSpaceId:wikiSpaceId, pagePath:newPageOut.pagePath]"/></then><else><service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" out-map="[wikiSpaceId:newPageInfo.wikiSpaceId,pagePath:newPageInfo.pagePath,wikiPageId:newPageInfo.wikiPageId,wikiSpace:newPageInfo.wikiSpace,wikiPage:newPageInfo.wikiPage,rootPageLocation:newPageInfo.rootPageLocation,rootPageRef:newPageInfo.rootPageRef,spaceRootName:newPageInfo.spaceRootName,pageReference:newPageInfo.pageReference,wikiType:newPageInfo.wikiType,versionName:newPageInfo.versionName,currentVersionName:newPageInfo.currentVersionName,publishedVersionName:newPageInfo.publishedVersionName,attachmentList:newPageInfo.attachmentList,pageLocation:newPageInfo.pageLocation,pageName:newPageInfo.pageName,parentPath:newPageInfo.parentPath,breadcrumbNameList:newPageInfo.breadcrumbNameList,breadcrumbMapList:newPageInfo.breadcrumbMapList]" in-map="[wikiSpaceId:baseWikiSpaceId, pagePath:pagePath]"/></else></if><set field="wikiPageId" from="newPageInfo.wikiPageId"/><if condition="publishNew && wikiPageId && newPageInfo?.currentVersionName"><service-call name="update#moqui.resource.wiki.WikiPage" in-map="[wikiPageId:wikiPageId, publishedVersionName:newPageInfo.currentVersionName]"/></if><if condition="copyAttachments"><iterate list="basePageInfo.attachmentList" entry="attachmentInfo"><service-call name="org.moqui.impl.WikiServices.get#WikiPageAttachment" out-map="[attachmentReference:baseAttachOut.attachmentReference]" in-map="[wikiSpaceId:baseWikiSpaceId, pagePath:basePageInfo.pagePath, filename:attachmentInfo.filename]"/><service-call name="org.moqui.impl.WikiServices.get#WikiPageAttachment" out-map="[attachmentReference:attachOut.attachmentReference]" in-map="[wikiSpaceId:wikiSpaceId, pagePath:basePageInfo.pagePath, filename:attachmentInfo.filename]"/><log message="Copying attachment from ${baseAttachOut?.attachmentReference?.location} to ${attachOut?.attachmentReference?.location}"/><script><![CDATA[if (baseAttachOut.attachmentReference != null && attachOut.attachmentReference != null) {
                            InputStream fileStream = baseAttachOut.attachmentReference.openStream()
                            attachOut.attachmentReference.putStream(fileStream)
                            fileStream.close()
                        }]]></script></iterate></if><if condition="basePageInfo.wikiPageId && wikiPageId"><entity-find entity-name="moqui.resource.wiki.WikiPageUser" list="baseWikiPageUserList"><econdition field-name="wikiPageId" from="basePageInfo.wikiPageId"/></entity-find><iterate list="baseWikiPageUserList" entry="baseWikiPageUser"><set field="wikiPageUser" from="baseWikiPageUser.cloneValue()"/><set field="wikiPageUser.wikiPageId" from="wikiPageId"/><entity-create value-field="wikiPageUser"/></iterate><entity-find entity-name="moqui.resource.wiki.WikiPageAlias" list="baseWikiPageAliasList"><econdition field-name="wikiSpaceId" from="baseWikiSpaceId"/><econdition field-name="wikiPageId" from="basePageInfo.wikiPageId"/></entity-find><iterate list="baseWikiPageAliasList" entry="baseWikiPageAlias"><entity-find-one entity-name="moqui.resource.wiki.WikiPageAlias" value-field="existingAlias"><field-map field-name="wikiSpaceId"/><field-map field-name="aliasPath" from="baseWikiPageAlias.aliasPath"/></entity-find-one><if condition="existingAlias == null"><then><set field="wikiPageAlias" from="baseWikiPageAlias.cloneValue()"/><set field="wikiPageAlias.wikiSpaceId" from="wikiSpaceId"/><set field="wikiPageAlias.wikiPageId" from="wikiPageId"/><entity-create value-field="wikiPageAlias"/></then><else><message type="warning"><![CDATA[Not copying wiki page alias ${baseWikiPageAlias.aliasPath}, already exists in space ${wikiSpaceId}]]></message></else></if></iterate></if><set field="pagePath" from="newPageInfo.pagePath"/><set field="wikiPageId" from="newPageInfo.wikiPageId"/></actions></service>