<!--Service Location mantle.account.InvoiceServices.adjust#Invoice--><service verb="adjust" noun="Invoice"><in-parameters><parameter name="invoiceId" required="true" entity-name="mantle.account.invoice.Invoice" field-name="invoiceId"/><parameter name="description" entity-name="mantle.account.invoice.Invoice" field-name="description"/><parameter name="amount" type="BigDecimal" required="true"/><parameter name="quantity" type="BigDecimal" default="1"/><parameter name="parentInvoiceItemSeqId"><description><![CDATA[Optional, associate adjustment item with a another invoice item.]]></description></parameter><parameter name="productId"><description><![CDATA[Optional, for adjustments associated with a product.]]></description></parameter><parameter name="itemDate" type="Timestamp"/><parameter name="itemTypeEnumId" default-value="ItemInvAdjust"><description><![CDATA[Should be an item type that is a
                child of ItemInvAdjust (ItemWriteOff, ItemPromptDiscount, ItemLateCharge, ItemReturnAdjust)]]></description></parameter><parameter name="overrideGlAccountId"/></in-parameters><out-parameters><parameter name="invoiceItemSeqId"/></out-parameters><actions><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><if condition="!(invoice.statusId in ['InvoiceFinalized', 'InvoiceSent', 'InvoiceAcked', 'InvoiceApproved'])"><return error="true" message="Invoices may only be adjusted in the Finalized, Sent, or Acknowledged statuses for receivables, and the Approved status for payables; invoice ${invoiceId} is in status ${invoice.status?.description}"/></if><if condition="itemDate == null"><set field="itemDate" from="invoice.invoiceDate"/></if><set field="adjustTotal" from="(amount ?: 0) * quantity"/><if condition="adjustTotal < 0"><service-call name="mantle.account.InvoiceServices.get#InvoiceTotal" in-map="[invoiceId:invoiceId]" out-map="[invoiceTotal:invTotal.invoiceTotal,appliedPaymentsTotal:invTotal.appliedPaymentsTotal,unpaidTotal:invTotal.unpaidTotal]"/><if condition="(-adjustTotal) > invTotal.unpaidTotal"><return error="true" message="Cannot adjust invoice ${invoiceId}, adjustment total ${adjustTotal} is greater than unpaid total ${invTotal.unpaidTotal}"/></if></if><if condition="parentInvoiceItemSeqId"><set field="parentInvoiceId" from="invoiceId"/></if><set field="isAdjustment" value="Y"/><service-call name="create#mantle.account.invoice.InvoiceItem" in-map="context" out-map="[invoiceId:context.invoiceId,invoiceItemSeqId:context.invoiceItemSeqId,parentItemSeqId:context.parentItemSeqId,itemTypeEnumId:context.itemTypeEnumId,overrideGlAccountId:context.overrideGlAccountId,assetId:context.assetId,productId:context.productId,otherPartyProductId:context.otherPartyProductId,parentInvoiceId:context.parentInvoiceId,parentInvoiceItemSeqId:context.parentInvoiceItemSeqId,taxableFlag:context.taxableFlag,quantity:context.quantity,quantityUomId:context.quantityUomId,amount:context.amount,description:context.description,itemDate:context.itemDate,isAdjustment:context.isAdjustment,salesOpportunityId:context.salesOpportunityId,taxAuthorityId:context.taxAuthorityId,payrollAdjustmentId:context.payrollAdjustmentId,finAccountId:context.finAccountId,finAccountTransId:context.finAccountTransId,billThruVendorName:context.billThruVendorName,billThruVendorRef:context.billThruVendorRef,lastUpdatedStamp:context.lastUpdatedStamp]"/></actions></service>