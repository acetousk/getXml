<!--Service Location coarchy.CoarchyServices.send#NewsletterEmails--><service verb="send" noun="NewsletterEmails"><in-parameters><parameter name="currentTimestamp" default="ec.user.nowTimestamp" type="Timestamp" required="true"/></in-parameters><out-parameters><parameter name="emailsSentList" type="List"/><parameter name="newsletterPartyIdList" type="List"/></out-parameters><actions><set field="emailsSentList" from="[]"/><set field="newsletterPartyIdList" from="[]"/><set field="baseLinkUrl" from="!'production'.equals(System.getProperty('instance_purpose')) ? 'http://localhost:8080' : 'https://coarchy.com'"/><set field="twoDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(2).toInstant().toEpochMilli())" type="Timestamp"/><set field="fourDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(4).toInstant().toEpochMilli())" type="Timestamp"/><set field="sixDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(6).toInstant().toEpochMilli())" type="Timestamp"/><set field="eightDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(8).toInstant().toEpochMilli())" type="Timestamp"/><set field="twoWeeksAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusWeeks(2).toInstant().toEpochMilli())" type="Timestamp"/><entity-find entity-name="moqui.resource.wiki.WikiBlogCategory" list="wikiBlogCategoryList" for-update="true"><econdition field-name="wikiPageCategoryId" value="Newsletter"/><econdition field-name="sentDate" operator="is-null"/><order-by field-name="lastUpdatedStamp"/></entity-find><entity-find entity-name="moqui.resource.wiki.WikiBlogCategory" list="sentWikiBlogCategoryList" limit="1"><econdition field-name="wikiPageCategoryId" value="Newsletter"/><econdition field-name="sentDate" operator="is-not-null"/><order-by field-name="-sentDate"/></entity-find><set field="wikiBlogCategory" from="wikiBlogCategoryList?.getFirst()"/><entity-find-one entity-name="moqui.resource.wiki.WikiBlog" value-field="wikiBlog" for-update="true" auto-field-map="[wikiBlogId:wikiBlogCategory?.wikiBlogId]"/><entity-find entity-name="moqui.resource.wiki.WikiPage" list="wikiPageList"><econdition field-name="wikiPageId" from="wikiBlog?.wikiPageId"/><econdition field-name="publishedVersionName" operator="is-not-null"/></entity-find><set field="wikiPage" from="wikiPageList?.getFirst()"/><if condition="!wikiPage"><log level="warn" message="No wiki page with no sent date found"/><else><entity-find-one entity-name="moqui.resource.wiki.WikiSpace" value-field="wikiSpace"><field-map field-name="wikiSpaceId" from="wikiPage.wikiSpaceId"/></entity-find-one><set field="rootPageRef" from="ec.resource.getLocationReference(wikiSpace.rootPageLocation)"/><set field="pageReference" from="rootPageRef.findChildFile(wikiPage.pagePath)"/><set field="didSendBlogEmail" from="false"/><if condition="wikiBlogCategoryList.size() == 0"><log level="warn" message="Already sent blog posts found for newsletter blog ${wikiBlog} page ${wikiPage}"/><else-if condition="sentWikiBlogCategoryList.size() == 0 ||                             sentWikiBlogCategoryList.getFirst().sentDate.toInstant() < twoWeeksAgo.toInstant()"><entity-find entity-name="mantle.marketing.contact.ContactListParty" list="newsletterPartyList"><econdition field-name="contactListId" value="CoarchyNewsletter"/><econdition field-name="statusId" value="CLPT_IN_USE"/><date-filter/></entity-find><set field="newsletterPartyIdList" from="newsletterPartyList*.partyId"/><iterate list="newsletterPartyList" entry="listParty"><entity-find-one entity-name="mantle.party.contact.PartyContactMechInfo" value-field="contactMech" auto-field-map="[contactMechId:listParty.preferredContactMechId,partyId:listParty.partyId,contactMechPurposeId:'EmailPrimary']"/><if condition="!contactMech || contactMech.fromDate == null || contactMech.fromDate.toInstant() > ec.user.nowTimestamp.toInstant()"><entity-find entity-name="mantle.party.contact.PartyContactMechInfo" list="contactMechList"><econdition field-name="partyId" from="listParty.partyId"/><econdition field-name="contactMechPurposeId" value="EmailPrimary"/><econdition field-name="infoString" operator="is-not-null"/><date-filter/><order-by field-name="-fromDate"/></entity-find><set field="contactMech" from="contactMechList?.getFirst()"/></if><if condition="contactMech"><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                                         contactListId:'CoarchyNewsletter',emailTemplateId:'BLOG',                                         partyId:listParty.partyId,preferredContactMechId:contactMech.contactMechId,toAddresses:contactMech.infoString,                                         bodyParameters:[imageUrl:baseLinkUrl+'/content/downloadSmallImage?wikiBlogId='+wikiBlog.wikiBlogId,                                         title:wikiBlog.title,author:wikiBlog.author,publishDate:ec.l10n.format(wikiBlog.publishDate, 'MMM dd, yyyy'),                                         pageText:pageReference.getText(wikiPage.publishedVersionName),summary:wikiBlog.summary,                                         baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/><else><log level="warn" message="No contact mech with contactMechPurposeId of EmailPrimary found for party ${listParty.partyId}"/></else></if><if condition="sentEmail"><set field="emailsSentList" from="emailsSentList + [partyId:listParty.partyId,                                         emailAddress:contactMech.infoString,emailTemplateId:'BLOG']"/><set field="didSendBlogEmail" value="true"/></if><set field="sentEmail" from="null"/></iterate></else-if></if><if condition="didSendBlogEmail"><set field="wikiBlogCategory.sentDate" from="currentTimestamp"/><entity-update value-field="wikiBlogCategory"/></if></else></if></actions></service>