<!--Service Location store#moqui.screen.ScreenScheduled--><service verb="store" noun="moqui.screen.ScreenScheduled"><in-parameters><parameter name="screenScheduledId" type="java.lang.String" required="true"/><parameter name="screenPath" type="java.lang.String" required="false"/><parameter name="formListFindId" type="java.lang.String" required="false"/><parameter name="renderMode" type="java.lang.String" required="false"/><parameter name="noResultsAbort" type="java.lang.String" required="false"/><parameter name="cronExpression" type="java.lang.String" required="false"/><parameter name="fromDate" type="java.sql.Timestamp" required="false"/><parameter name="thruDate" type="java.sql.Timestamp" required="false"/><parameter name="saveToLocation" type="java.lang.String" required="false"/><parameter name="emailTemplateId" type="java.lang.String" required="false"/><parameter name="emailSubject" type="java.lang.String" required="false"/><parameter name="userId" type="java.lang.String" required="false"/><parameter name="userGroupId" type="java.lang.String" required="false"/></in-parameters><out-parameters><parameter name="screenScheduledId" type="java.lang.String" required="true"/></out-parameters><action><service-call name="store#moqui.screen.ScreenScheduled" in-map="[screenScheduledId:context.screenScheduledId,screenPath:context.screenPath,formListFindId:context.formListFindId,renderMode:context.renderMode,noResultsAbort:context.noResultsAbort,cronExpression:context.cronExpression,fromDate:context.fromDate,thruDate:context.thruDate,saveToLocation:context.saveToLocation,emailTemplateId:context.emailTemplateId,emailSubject:context.emailSubject,userId:context.userId,userGroupId:context.userGroupId]" out-map="[screenScheduledId:context.screenScheduledId]"/></action></service>