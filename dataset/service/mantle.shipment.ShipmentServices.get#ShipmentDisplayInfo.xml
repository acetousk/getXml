<!--Service Location mantle.shipment.ShipmentServices.get#ShipmentDisplayInfo--><service verb="get" noun="ShipmentDisplayInfo"><in-parameters><parameter name="shipmentId"/></in-parameters><out-parameters><parameter name="shipmentId"/><parameter name="shipment" type="Map"/><parameter name="statusItem" type="Map"/><parameter name="shipmentTypeEnum" type="Map"/><parameter name="isIncoming" type="Boolean"/><parameter name="isOutgoing" type="Boolean"/><parameter name="isTransfer" type="Boolean"/><parameter name="allowUpdate" type="Boolean"/><parameter name="hasNoItems" type="Boolean"/><parameter name="statusHistoryList" type="List"><parameter name="auditLog" type="Map"/></parameter><parameter name="fromPartyId"><description><![CDATA[Shipment.fromPartyId or if empty then warehouse Facility.ownerPartyId]]></description></parameter><parameter name="fromPartyDetail" type="Map"/><parameter name="fromContactInfo" type="Map"><description><![CDATA[The from ship info, first by
                ShipmentRouteSegment.origin* fields then the warehouse Facility
                (using mantle.facility.ContactServices.get#FacilityDefaultShipOrigin) or if no warehouse or contact info
                found then from the mantle.party.ContactServices.get#PartyContactInfo service for the fromPartyId.]]></description></parameter><parameter name="toPartyId"/><parameter name="toPartyDetail" type="Map"/><parameter name="toContactInfo" type="Map"><description><![CDATA[The to ship info, first by ShipmentRouteSegment.dest*,
                then from the mantle.party.ContactServices.get#PartyContactInfo service for Shipment.toPartyId.]]></description></parameter><parameter name="productStore" type="Map"/><parameter name="shipmentItemDetailList" type="List"><parameter name="shipmentItemDetail" type="Map"/></parameter><parameter name="shipmentRouteSegmentList" type="List"><parameter name="shipmentRouteSegment" type="Map"/></parameter><parameter name="firstRouteSegment" type="Map"/><parameter name="firstShipmentMethodEnum" type="Map"/><parameter name="firstCarrierDetail" type="Map"/><parameter name="lastRouteSegment" type="Map"/><parameter name="originFacility" type="Map"/><parameter name="destinationFacility" type="Map"/><parameter name="shipmentPackageList" type="List"><parameter name="shipmentPackage" type="Map"/></parameter><parameter name="allShipmentPackageContentList" type="List"><parameter name="shipmentPackageContent" type="Map"/></parameter><parameter name="packageRouteSegList" type="List"><parameter name="packageRouteSeg" type="Map"/></parameter><parameter name="shipmentItemSourceList" type="List"><parameter name="shipmentItemSource"/></parameter><parameter name="orderIdSet" type="Set"><parameter name="orderId"/></parameter><parameter name="returnIdSet" type="Set"><parameter name="returnId"/></parameter><parameter name="invoiceIdSet" type="Set"><parameter name="invoiceId"/></parameter><parameter name="invoiceList" type="List"><parameter name="invoice" type="Map"/></parameter><parameter name="contentList" type="List"><parameter name="content" type="Map"/></parameter><parameter name="acctgTransList" type="List"><parameter name="acctgTrans" type="Map"/></parameter><parameter name="acctgTransIdSet" type="Set"><parameter name="acctgTransId"/></parameter><parameter name="anyReceived" type="Boolean"/><parameter name="allReceived" type="Boolean"/><parameter name="allItemsPacked" type="Boolean"/><parameter name="anyItemPacked" type="Boolean"/><parameter name="shippingGatewayConfigId"/><parameter name="shippingGatewayConfig" type="Map"/><parameter name="hasAllLabels" type="Boolean"/><parameter name="hasAnyLabels" type="Boolean"/><parameter name="hasAllTrackingCodes" type="Boolean"/><parameter name="destContactMechValid" type="Boolean"/><parameter name="curCarrierDetail" type="Map"/><parameter name="curShipmentMethodEnum" type="Map"/><parameter name="curCarrierShipmentMethod" type="Map"/><parameter name="orderCarrierDetail" type="Map"/><parameter name="orderShipmentMethodEnum" type="Map"/><parameter name="orderCarrierShipmentMethod" type="Map"/><parameter name="assemblyWorkEffort" type="Map"/><parameter name="assemblyAssetInfo" type="Map"><description><![CDATA[If Shipment.assemblyWorkEffortId, a Map with the results of a call to ManufacturingServices.get#ConsumedAssetRemaining]]></description></parameter></out-parameters><actions><service-call name="mantle.shipment.ShipmentServices.get#ShipmentContactInfo" out-map="[shipment:context.shipment,shipmentRouteSegmentList:context.shipmentRouteSegmentList,firstRouteSegment:context.firstRouteSegment,carrierParty:context.carrierParty,shipmentMethodEnum:context.shipmentMethodEnum,carrierShipmentMethod:context.carrierShipmentMethod,lastRouteSegment:context.lastRouteSegment,originFacility:context.originFacility,destinationFacility:context.destinationFacility,fromPartyId:context.fromPartyId,fromPartyDetail:context.fromPartyDetail,fromContactInfo:context.fromContactInfo,logoImageLocation:context.logoImageLocation,toPartyId:context.toPartyId,toPartyDetail:context.toPartyDetail,toContactInfo:context.toContactInfo]" in-map="[shipmentId:shipmentId]"/><set field="productStore" from="shipment.productStore"/><set field="statusItem" from="shipment.'Shipment#moqui.basic.StatusItem'"/><set field="shipmentTypeEnum" from="shipment.'ShipmentType#moqui.basic.Enumeration'"/><set field="isIncoming" from="shipmentTypeEnum?.enumId == 'ShpTpIncoming' || shipmentTypeEnum?.parentEnumId == 'ShpTpIncoming'"/><set field="isOutgoing" from="shipmentTypeEnum?.enumId == 'ShpTpOutgoing' || shipmentTypeEnum?.parentEnumId == 'ShpTpOutgoing'"/><set field="isTransfer" from="shipmentTypeEnum?.enumId == 'ShpTpTransfer' || shipmentTypeEnum?.parentEnumId == 'ShpTpTransfer'"/><set field="allowUpdate" from="shipment.statusId in ['ShipInput', 'ShipScheduled', 'ShipPicked'] ||                     (isIncoming && shipment.statusId in ['ShipShipped', 'ShipPacked'])"/><entity-find entity-name="moqui.entity.EntityAuditLog" list="statusHistoryList"><econdition field-name="changedEntityName" value="mantle.shipment.Shipment"/><econdition field-name="changedFieldName" value="statusId"/><econdition field-name="pkPrimaryValue" from="shipmentId"/><order-by field-name="changedDate"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentItemDetail" list="shipmentItemDetailList"><econdition field-name="shipmentId"/><order-by field-name="pseudoId"/></entity-find><set field="hasNoItems" from="shipmentItemDetailList.size() == 0 || shipmentItemDetailList*.quantity.sum() == 0.0"/><set field="firstShipmentMethodEnum" from="firstRouteSegment?.shipmentMethod"/><entity-find-one entity-name="mantle.party.PartyDetail" value-field="firstCarrierDetail"><field-map field-name="partyId" from="firstRouteSegment?.carrierPartyId"/></entity-find-one><entity-find entity-name="mantle.shipment.ShipmentPackage" list="shipmentPackageList"><econdition field-name="shipmentId"/><order-by field-name="shipmentPackageSeqId"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentPackageContent" list="allShipmentPackageContentList"><econdition field-name="shipmentId"/><order-by field-name="shipmentPackageSeqId,productId"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentPackageRouteSeg" list="packageRouteSegList"><econdition field-name="shipmentId"/><order-by field-name="shipmentRouteSegmentSeqId,shipmentPackageSeqId"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="shipmentItemSourceList"><econdition field-name="shipmentId"/></entity-find><set field="orderIdSet" from="new TreeSet()"/><set field="returnIdSet" from="new TreeSet()"/><set field="invoiceIdSet" from="new TreeSet()"/><iterate list="shipmentItemSourceList" entry="shipmentItemSource"><script><![CDATA[if (shipmentItemSource.orderId) orderIdSet.add(shipmentItemSource.orderId)
                if (shipmentItemSource.returnId) returnIdSet.add(shipmentItemSource.returnId)
                if (shipmentItemSource.invoiceId) invoiceIdSet.add(shipmentItemSource.invoiceId)]]></script></iterate><if condition="invoiceIdSet"><entity-find entity-name="mantle.account.invoice.Invoice" list="invoiceList"><econdition field-name="invoiceId" operator="in" from="invoiceIdSet"/></entity-find></if><entity-find entity-name="mantle.shipment.ShipmentContent" list="contentList"><econdition field-name="shipmentId"/><order-by field-name="-contentDate"/></entity-find><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="acctgTransList"><econdition field-name="shipmentId"/></entity-find><set field="acctgTransIdSet" from="new TreeSet(acctgTransList*.acctgTransId)"/><if condition="isIncoming || isTransfer"><set field="allReceived" from="true"/><iterate list="shipmentItemDetailList" entry="sid"><if condition="sid.quantity < ((sid.quantityAcceptedTotal?:0.0) + (sid.quantityRejectedTotal?:0.0))"><set field="allReceived" from="false"/><break/></if></iterate><set field="anyReceived" from="false"/><iterate list="shipmentItemDetailList" entry="sid"><if condition="sid.quantityAcceptedTotal || sid.quantityRejectedTotal"><set field="anyReceived" from="true"/><break/></if></iterate></if><if condition="isOutgoing || isTransfer"><set field="allItemsPacked" from="true"/><iterate list="shipmentItemSourceList" entry="sisCheck"><if condition="sisCheck.quantityNotHandled > 0.0"><set field="allItemsPacked" from="false"/><break/></if></iterate><set field="anyItemPacked" from="false"/><iterate list="shipmentItemSourceList" entry="sisCheck"><if condition="sisCheck.quantityNotHandled < sisCheck.quantity"><set field="anyItemPacked" from="true"/><break/></if></iterate></if><set field="hasAllLabels" from="true"/><set field="hasAllTrackingCodes" from="true"/><set field="hasAnyLabels" from="false"/><iterate list="packageRouteSegList" entry="packageRouteSeg"><if condition="packageRouteSeg.gatewayLabelId || packageRouteSeg.labelImage != null || packageRouteSeg.labelUrl"><then><set field="hasAnyLabels" from="true"/></then><else><set field="hasAllLabels" from="false"/></else></if><if condition="!packageRouteSeg.trackingCode"><set field="hasAllTrackingCodes" from="false"/></if></iterate><set field="shippingGatewayConfigId" from="firstRouteSegment.shippingGatewayConfigId"/><if condition="!shippingGatewayConfigId && shipment?.productStoreId"><entity-find-one entity-name="mantle.product.store.ProductStoreShippingGateway" value-field="storeShippingGateway" cache="true"><field-map field-name="productStoreId" from="shipment.productStoreId"/><field-map field-name="carrierPartyId" from="firstRouteSegment?.carrierPartyId"/></entity-find-one><set field="shippingGatewayConfigId" from="storeShippingGateway?.shippingGatewayConfigId"/></if><if condition="!shippingGatewayConfigId && shipment?.fromPartyId"><service-call name="mantle.party.PartyServices.get#PartySettingValue" out-map="[settingValue:ptySettingOut.settingValue]" in-map="[partyId:shipment.fromPartyId, partySettingTypeId:'DefaultShipmentGatewayConfigId']"/><set field="shippingGatewayConfigId" from="ptySettingOut?.settingValue"/></if><if condition="!shippingGatewayConfigId"><set field="shippingGatewayConfigId" from="ec.user.getPreference('DefaultShipmentGatewayConfigId')"/></if><if condition="shippingGatewayConfigId"><entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayConfig" value-field="shippingGatewayConfig"/></if><if condition="lastRouteSegment.destPostalContactMechId"><entity-find-one entity-name="mantle.party.contact.ContactMech" value-field="destContactMech"><field-map field-name="contactMechId" from="lastRouteSegment.destPostalContactMechId"/></entity-find-one></if><set field="destContactMechValid" from="destContactMech != null && destContactMech.trustLevelEnumId in ['CmtlValid', 'CmtlVerified']"/><if condition="firstRouteSegment.carrierPartyId && firstRouteSegment.carrierPartyId != '_NA_'"><entity-find-one entity-name="mantle.party.PartyDetail" value-field="curCarrierDetail" cache="true"><field-map field-name="partyId" from="firstRouteSegment.carrierPartyId"/></entity-find-one></if><entity-find-one entity-name="moqui.basic.Enumeration" value-field="curShipmentMethodEnum"><field-map field-name="enumId" from="firstRouteSegment.shipmentMethodEnumId"/></entity-find-one><entity-find-one entity-name="mantle.shipment.carrier.CarrierShipmentMethod" value-field="curCarrierShipmentMethod"><field-map field-name="carrierPartyId" from="firstRouteSegment.carrierPartyId"/><field-map field-name="shipmentMethodEnumId" from="firstRouteSegment.shipmentMethodEnumId"/></entity-find-one><entity-find entity-name="mantle.shipment.ShipmentItemSourceOrderItem" list="sisOrderItemList" distinct="true"><econdition field-name="shipmentId"/><econdition field-name="orderId" operator="is-not-null"/><econdition field-name="orderPartSeqId" operator="is-not-null"/><select-field field-name="orderId,orderPartSeqId"/></entity-find><if condition="sisOrderItemList"><entity-find-one entity-name="mantle.order.OrderPart" value-field="firstOrderPart"><field-map field-name="orderId" from="sisOrderItemList[0].orderId"/><field-map field-name="orderPartSeqId" from="sisOrderItemList[0].orderPartSeqId"/></entity-find-one><if condition="firstOrderPart != null"><if condition="firstOrderPart.carrierPartyId && firstOrderPart.carrierPartyId != '_NA_'"><entity-find-one entity-name="mantle.party.PartyDetail" value-field="orderCarrierDetail" cache="true"><field-map field-name="partyId" from="firstOrderPart.carrierPartyId"/></entity-find-one></if><entity-find-one entity-name="moqui.basic.Enumeration" value-field="orderShipmentMethodEnum"><field-map field-name="enumId" from="firstOrderPart.shipmentMethodEnumId"/></entity-find-one><entity-find-one entity-name="mantle.shipment.carrier.CarrierShipmentMethod" value-field="orderCarrierShipmentMethod"><field-map field-name="carrierPartyId" from="firstOrderPart.carrierPartyId"/><field-map field-name="shipmentMethodEnumId" from="firstOrderPart.shipmentMethodEnumId"/></entity-find-one></if></if><if condition="shipment.assemblyWorkEffortId"><entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="assemblyWorkEffort"><field-map field-name="workEffortId" from="shipment.assemblyWorkEffortId"/></entity-find-one><service-call name="mantle.work.ManufacturingServices.get#ConsumedAssetRemaining" in-map="[workEffortId:shipment.assemblyWorkEffortId]" out-map="[consumeWepList:assemblyAssetInfo.consumeWepList,produceWepList:assemblyAssetInfo.produceWepList,componentIssuedQtyByProduct:assemblyAssetInfo.componentIssuedQtyByProduct,componentUsedQtyByProduct:assemblyAssetInfo.componentUsedQtyByProduct,componentIssuedAvailable:assemblyAssetInfo.componentIssuedAvailable,assemblyCanProduceQty:assemblyAssetInfo.assemblyCanProduceQty,assemblyReceivedByProduct:assemblyAssetInfo.assemblyReceivedByProduct]"/></if></actions></service>