<!--Service Location mantle.party.DuplicateServices.find#PostalAddresses--><service verb="find" noun="PostalAddresses"><in-parameters><parameter name="partyId"><description><![CDATA[The Party the ContactMech came from (or is for)]]></description></parameter><parameter name="toPartyId"><description><![CDATA[If specified only looks at this part for matches, if not query all addresses]]></description></parameter><parameter name="address1" required="true"/><parameter name="unitNumber"/><parameter name="postalCode"/><parameter name="postalCodeExt"/><parameter name="countryGeoId"/><parameter name="contactMechPurposeId"><description><![CDATA[Only used if toPartyId specified to limit match by purpose]]></description></parameter><parameter name="trustLevelEnumId"><description><![CDATA[Only match addresses with this trust level (CmtlGreylisted, CmtlBlacklisted, etc), may be comma separated (no spaces) for multiple]]></description></parameter><parameter name="matchingInfoByPartyId" type="Map"><description><![CDATA[If passed in data will be added to this]]></description></parameter><parameter name="dupAddressIdsFound" type="Set"><description><![CDATA[If passed in data will be added to this]]></description></parameter></in-parameters><out-parameters><parameter name="postalAddressList" type="List"><parameter name="postalAddress" type="Map"/></parameter></out-parameters><actions><script><![CDATA[address1 = address1.replace("Road","R%d%").replace("Rd","R%d%").replace("Street","St%").replace("Avenue","Av%").replace("North","N%").replace("South","S%").replace("East","E%").replace("West","W%")
                    address1 = replaceNonAlphaNumeric(address1, '%' as char) + '%'
                    unitNumber = unitNumber ? '%' + replaceNonAlphaNumeric(unitNumber, '%' as char) : null]]></script><set field="postalAddressList" from="[]"/><if condition="toPartyId"><then><entity-find entity-name="mantle.party.contact.PartyContactMechPostalAddressOnly" list="existingList"><date-filter/><econdition field-name="partyId" from="toPartyId"/><econdition field-name="address1" operator="like" from="address1" ignore-case="true"/><econdition field-name="unitNumber" operator="like" from="unitNumber" ignore-if-empty="true"/><econdition field-name="postalCode" or-null="true" ignore-if-empty="true"/><econdition field-name="postalCodeExt" or-null="true" ignore-if-empty="true"/><econdition field-name="countryGeoId" or-null="true" ignore-if-empty="true"/><econdition field-name="contactMechPurposeId" ignore-if-empty="true"/><econdition field-name="trustLevelEnumId" operator="in" ignore-if-empty="true"/></entity-find><script><![CDATA[postalAddressList.addAll(existingList)]]></script></then><else><entity-find entity-name="mantle.party.contact.ContactMechPostalAddress" list="dupAddressList"><econdition field-name="trustLevelEnumId" operator="in" ignore-if-empty="true"/><econdition field-name="address1" operator="like" from="address1" ignore-case="true"/><econdition field-name="unitNumber" operator="like" from="unitNumber" ignore-if-empty="true"/><econdition field-name="postalCode"/><econdition field-name="postalCodeExt" or-null="true" ignore-if-empty="true"/><econdition field-name="countryGeoId" or-null="true" ignore-if-empty="true"/><select-field field-name="contactMechId,trustLevelEnumId,address1,unitNumber,postalCode,postalCodeExt,countryGeoId"/></entity-find><iterate list="dupAddressList" entry="dupAddress"><if condition="dupAddressIdsFound != null && dupAddressIdsFound.contains(dupAddress.contactMechId)"><continue/></if><entity-find entity-name="mantle.party.contact.PartyContactMech" list="dupPcmList" limit="1"><date-filter/><econdition field-name="partyId" operator="not-equals"/><econdition field-name="contactMechId" from="dupAddress.contactMechId"/></entity-find><if condition="!dupPcmList"><continue/></if><set field="dupPcm" from="dupPcmList[0]"/><if condition="matchingInfoByPartyId == null || !matchingInfoByPartyId.containsKey(dupPcm.partyId)"><entity-find-one entity-name="mantle.party.PartyDetail" value-field="dupPartyDetail"><field-map field-name="partyId" from="dupPcm.partyId"/></entity-find-one><if condition="(firstName && !firstName.trim().equalsIgnoreCase(dupPartyDetail.firstName?.trim())) ||                                 (organizationName && !organizationName.trim().equalsIgnoreCase(dupPartyDetail.organizationName?.trim()))"><continue/></if></if><script><![CDATA[Map dupAddrInfo = dupAddress.getMap()
                        dupAddrInfo.put("partyId", dupPcm.partyId)

                        if (matchingInfoByPartyId != null) addToListInMap(dupPcm.partyId, dupAddrInfo, matchingInfoByPartyId)
                        if (dupAddressIdsFound != null) dupAddressIdsFound.add(dupAddress.contactMechId)

                        postalAddressList.add(dupAddrInfo)]]></script></iterate></else></if></actions></service>