<!--Service Location mantle.ledger.InvoiceAutoPostServices.revert#InvoicePost--><service verb="revert" noun="InvoicePost"><in-parameters><parameter name="invoiceId" required="true"/></in-parameters><out-parameters/><actions><set field="allInvoiceTxTypes" from="['AttSalesInvoice', 'AttVendRtnInvoice', 'AttPurchaseInvoice', 'AttCustRtnInvoice',                     'AttCreditMemo', 'AttVendCreditMemo', 'AttPayrollInvoice', 'AttTaxInvoice', 'AttGarnishmentInvoice', 'AttCommissionInvoice', 'AttInvoiceAdjust']"/><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="acctgTransList"><econdition field-name="invoiceId"/><econdition field-name="reversedByAcctgTransId" from="null"/><econdition field-name="reverseOfAcctgTransId" from="null"/><econdition field-name="acctgTransTypeEnumId" operator="in" from="allInvoiceTxTypes"/></entity-find><if condition="acctgTransList"><then><iterate list="acctgTransList" entry="acctgTrans"><service-call name="mantle.ledger.LedgerServices.post#ReverseAcctgTrans" out-map="[acctgTransId:revOut.acctgTransId]" out-map-add-to-existing="false" in-map="[acctgTransId:acctgTrans.acctgTransId, deleteIfNotPosted:true]"/><if condition="revOut.acctgTransId"><message><![CDATA[Created reverse transaction ${revOut.acctgTransId} from tx ${acctgTrans.acctgTransId} for invoice ${invoiceId}]]></message></if></iterate></then><else><log message="No accounting transaction found for Invoice ${invoiceId}, not posting reverse transaction"/><return/></else></if></actions></service>