<!--Service Location mantle.work.TimeServices.import#TimeSummaryRecord--><service verb="import" noun="TimeSummaryRecord"><in-parameters><parameter name="clientPartyId" required="true"/><parameter name="effectiveDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="employeeId" required="true"/><parameter name="emplPositionClassId"/><parameter name="standardHours" type="BigDecimal"/><parameter name="overtimeHours" type="BigDecimal"/><parameter name="doubleTimeHours" type="BigDecimal"/><parameter name="standardPieces" type="BigDecimal"/><parameter name="overtimePieces" type="BigDecimal"/><parameter name="doubleTimePieces" type="BigDecimal"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.party.Party" value-field="party"><field-map field-name="partyId" from="employeeId"/></entity-find-one><if condition="!party"><entity-find-one entity-name="mantle.party.Party" value-field="party"><field-map field-name="pseudoId" from="employeeId"/></entity-find-one></if><if condition="!party"><return error="true" message="Could not find employee with ID ${employeeId}"/></if><if condition="standardHours || standardPieces"><service-call name="mantle.work.TimeServices.store#TimeEntry" in-map="[partyId:party.partyId, rateTypeEnumId:'RatpStandard', rateModifierEnumId:'RatmRegular', emplPositionClassId:emplPositionClassId,                         clientPartyId:clientPartyId, thruDate:effectiveDate, hours:standardHours, pieceCount:standardPieces]"/></if><if condition="overtimeHours || overtimePieces"><service-call name="mantle.work.TimeServices.store#TimeEntry" in-map="[partyId:party.partyId, rateTypeEnumId:'RatpStandard', rateModifierEnumId:'RatmOvertime', emplPositionClassId:emplPositionClassId,                         clientPartyId:clientPartyId, thruDate:effectiveDate, hours:overtimeHours, pieceCount:overtimePieces]"/></if><if condition="doubleTimeHours || doubleTimePieces"><service-call name="mantle.work.TimeServices.store#TimeEntry" in-map="[partyId:party.partyId, rateTypeEnumId:'RatpStandard', rateModifierEnumId:'RatmDouble', emplPositionClassId:emplPositionClassId,                         clientPartyId:clientPartyId, thruDate:effectiveDate, hours:doubleTimeHours, pieceCount:doubleTimePieces]"/></if></actions></service>