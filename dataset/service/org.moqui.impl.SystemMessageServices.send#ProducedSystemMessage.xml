<!--Service Location org.moqui.impl.SystemMessageServices.send#ProducedSystemMessage--><service verb="send" noun="ProducedSystemMessage"><in-parameters><parameter name="systemMessageId" required="true"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="moqui.service.message.SystemMessage" value-field="systemMessage"/><set field="initialStatusId" from="systemMessage.statusId"/><if condition="systemMessage.statusId != 'SmsgProduced' && systemMessage.statusId != 'SmsgError'"><return error="true" message="System message ${systemMessageId} has status ${systemMessage.statusId} and must be either SmsgProduced or SmsgError, not sending."/></if><if condition="!systemMessage.systemMessageTypeId"><return error="true" message="System message ${systemMessageId} has no type, not sending"/></if><set field="systemMessageType" from="systemMessage.'moqui.service.message.SystemMessageType'"/><set field="sendServiceName" from="systemMessageType.sendServiceName"/><if condition="systemMessage.systemMessageRemoteId"><set field="systemMessageRemote" from="systemMessage.'moqui.service.message.SystemMessageRemote'"/><if condition="systemMessageRemote.sendServiceName"><set field="sendServiceName" from="systemMessageRemote.sendServiceName"/></if></if><if condition="!sendServiceName"><return error="true" message="While sending system message ${systemMessageId} type ${systemMessageType.systemMessageTypeId} has no sendServiceName, not sending."/></if><service-call name="update#moqui.service.message.SystemMessage" transaction="force-new" in-map="[systemMessageId:systemMessageId, statusId:'SmsgSending', lastAttemptDate:ec.user.nowTimestamp]"/><script><![CDATA[try {]]></script><service-call name="${sendServiceName}" in-map="[systemMessageId:systemMessageId]" out-map="sendOut" transaction="force-new"/><script><![CDATA[} catch (Throwable t) { ec.message.addError(t.toString()) } finally {]]></script><set field="nowDate" from="ec.user.nowTimestamp"/><if condition="ec.message.hasError()"><then><set field="errorText" from="ec.message.getErrorsString()"/><script><![CDATA[ec.message.clearErrors()]]></script><service-call name="update#moqui.service.message.SystemMessage" transaction="force-new" in-map="[systemMessageId:systemMessageId, statusId:initialStatusId, lastAttemptDate:nowDate,                             failCount:((systemMessage.failCount ?: 0) + 1)]"/><service-call name="create#moqui.service.message.SystemMessageError" transaction="force-new" in-map="[systemMessageId:systemMessageId, errorDate:nowDate, attemptedStatusId:'SmsgSent',                             errorText:errorText]"/></then><else><service-call name="update#moqui.service.message.SystemMessage" transaction="force-new" in-map="[systemMessageId:systemMessageId, statusId:'SmsgSent',                             remoteMessageId:sendOut?.remoteMessageId, processedDate:nowDate, lastAttemptDate:nowDate]"/></else></if><script><![CDATA[}]]></script></actions></service>