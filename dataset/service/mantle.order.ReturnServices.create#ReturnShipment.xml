<!--Service Location mantle.order.ReturnServices.create#ReturnShipment--><service verb="create" noun="ReturnShipment"><in-parameters><parameter name="returnId" required="true"/><parameter name="createPackage" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="shipmentId"/><parameter name="shipmentPackageSeqId"/><parameter name="shipmentRouteSegmentSeqId"/></out-parameters><actions><entity-find-one entity-name="mantle.order.return.ReturnHeader" value-field="returnHeader"/><entity-find-one entity-name="mantle.party.PartyRole" value-field="customerOrgInternal"><field-map field-name="partyId" from="returnHeader.customerPartyId"/><field-map field-name="roleTypeId" value="OrgInternal"/></entity-find-one><set field="shipmentTypeEnumId" from="customerOrgInternal ? 'ShpTpPurchaseReturn' : 'ShpTpSalesReturn'"/><if condition="customerOrgInternal"><then><set field="originFacilityId" from="returnHeader.facilityId"/><set field="destPostalContactMechId" from="returnHeader.postalContactMechId"/><set field="destTelecomContactMechId" from="returnHeader.telecomContactMechId"/></then><else><set field="destinationFacilityId" from="returnHeader.facilityId"/><set field="originPostalContactMechId" from="returnHeader.postalContactMechId"/><set field="originTelecomContactMechId" from="returnHeader.telecomContactMechId"/></else></if><set field="shipmentMethodEnumId" from="returnHeader.shipmentMethodEnumId"/><set field="carrierPartyId" from="returnHeader.carrierPartyId"/><service-call name="mantle.shipment.ShipmentServices.create#Shipment" out-map="[shipmentId:context.shipmentId,shipmentRouteSegmentSeqId:context.shipmentRouteSegmentSeqId]" in-map="context + [shipmentTypeEnumId:shipmentTypeEnumId,                         fromPartyId:returnHeader.customerPartyId, toPartyId:returnHeader.vendorPartyId]"/><if condition="createPackage"><service-call name="create#mantle.shipment.ShipmentPackage" in-map="context" out-map="[shipmentId:context.shipmentId,shipmentPackageSeqId:context.shipmentPackageSeqId,shipmentBoxTypeId:context.shipmentBoxTypeId,weight:context.weight,weightUomId:context.weightUomId,gatewayPackageId:context.gatewayPackageId,lastUpdatedStamp:context.lastUpdatedStamp]"/></if><if condition="shipmentPackageSeqId && shipmentRouteSegmentSeqId"><service-call name="create#mantle.shipment.ShipmentPackageRouteSeg" in-map="[shipmentId:shipmentId, shipmentPackageSeqId:shipmentPackageSeqId,                                 shipmentRouteSegmentSeqId:shipmentRouteSegmentSeqId]"/></if><service-call name="mantle.order.ReturnServices.add#ReturnToShipment" in-map="[shipmentId:shipmentId, returnId:returnId]"/></actions></service>