<!--Service Location XmlServices.evaluate#InputOutputList--><service verb="evaluate" noun="InputOutputList"><in-parameters><parameter name="inputOutputList" type="List"><parameter name="type" required="true"/></parameter></in-parameters><out-parameters><parameter name="inputOutputList" type="List"/></out-parameters><actions><set field="knownServiceNames" from="ec.service.knownServiceNames"/><iterate list="inputOutputList" entry="inputOutput"><set field="type" from="inputOutput.type"/><if condition="type == 'service-call'"><then><set field="filterServiceName" from="inputOutput.name"/><set field="knownServiceNamesCopy" from="knownServiceNames.collect()"/><script><![CDATA[if (filterServiceName) {
                            Iterator theIterator = knownServiceNamesCopy.iterator()
                            while (theIterator.hasNext()) {
                                String curSn = (String) theIterator.next()
                                if (!curSn.toUpperCase().contains(filterServiceName.toUpperCase())) theIterator.remove()
                            }
                        }]]></script><set field="inService" from="knownServiceNamesCopy[0]"/><if condition="!inService"><log level="warn" message="No service found for name ${inputOutput.name}"/><continue/></if><set field="sd" from="ec.service.getServiceDefinition(inService)"/><if condition="!sd"><log level="warn" message="No service definition found for name ${inService}"/><continue/></if><set field="validatePreviousOutMap" from="inputOutput_index != 0"/><iterate list="inputOutput.inMapList" entry="inMap"><if condition="!sd.inParameterNames.contains(inMap.key)"><then><set field="inMap.error" value="in_map ${inMap.key} does not exist for service ${inputOutput.name}!"/><log level="warn" message="${inMap.error}"/></then><else-if condition="validatePreviousOutMap"><set field="previousInputOutput" from="inputOutputList[inputOutput_index-1]"/><set field="previousOutMapList" from="previousInputOutput.outMapList"/></else-if></if></iterate><if condition="inputOutput.outMapList.size() == 0 && _inputOutputIterator.hasNext()"><log level="warn" message="Must have an out_map for service ${inputOutput.name} when there is another node!"/></if><iterate list="inputOutput.outMapList" entry="outMap"><if condition="outMap.getClass().getName() == 'java.lang.String'"><set field="outMapKey" from="outMap"/><set field="outMap" from="[key:outMapKey,value:outMapKey]"/></if><if condition="!sd.outParameterNames.contains(outMap.key)"><set field="outMap.error" value="out_map ${outMap.key} does not exist for service ${inputOutput.name}!"/><log level="warn" message="${outMap.error}"/></if></iterate></then><else-if condition="type == 'entity-find'"/><else-if condition="type == 'service'"/></if></iterate></actions></service>