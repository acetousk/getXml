<!--Service Location mantle.shipment.ShipmentServices.create#ShipmentAutoPackages--><service verb="create" noun="ShipmentAutoPackages"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="shipmentRouteSegmentSeqId"><description><![CDATA[Defaults to the first route segment]]></description></parameter><parameter name="resetExisting" type="Boolean" default="false"><description><![CDATA[If false (default) does nothing if there are
                existing packages with content]]></description></parameter></in-parameters><out-parameters/><actions><service-call name="mantle.shipment.CarrierServices.get#ShipmentGatewayDetails" in-map="context" out-map="[shipmentRouteSegmentSeqId:context.shipmentRouteSegmentSeqId,routeSegment:context.routeSegment,shippingGatewayConfigId:context.shippingGatewayConfigId,shippingGatewayConfig:context.shippingGatewayConfig]"/><set field="getAutoPackageInfoName" from="shippingGatewayConfig?.getAutoPackageInfoName"/><if condition="!getAutoPackageInfoName"><return/></if><entity-find entity-name="mantle.shipment.ShipmentItem" list="itemInfoList"><econdition field-name="shipmentId"/></entity-find><service-call name="${getAutoPackageInfoName}" out-map="context" in-map="context"/><if condition="!packageInfoList"><return/></if><if condition="!resetExisting"><entity-find entity-name="mantle.shipment.ShipmentPackageContent" list="packageContentList"><econdition field-name="shipmentId"/></entity-find><if condition="packageContentList"><return message="Packages already have content (product quantities) assigned, not creating auto packages"/></if></if><entity-find entity-name="mantle.shipment.ShipmentPackageRouteSeg" list="packageRouteSegList"><econdition field-name="shipmentId"/><econdition field-name="shipmentRouteSegmentSeqId"/></entity-find><iterate list="packageRouteSegList" entry="packageRouteSeg"><if condition="packageRouteSeg.trackingCode || packageRouteSeg.labelDate || packageRouteSeg.labelUrl"><return message="Package ${packageRouteSeg.shipmentPackageSeqId} already has a tracking code or label, not creating auto packages"/></if></iterate><iterate list="packageRouteSegList" entry="packageRouteSeg"><entity-delete value-field="packageRouteSeg"/></iterate><entity-delete-by-condition entity-name="mantle.shipment.ShipmentPackageContent"><econdition field-name="shipmentId"/></entity-delete-by-condition><entity-delete-by-condition entity-name="mantle.shipment.ShipmentPackage"><econdition field-name="shipmentId"/></entity-delete-by-condition><iterate list="packageInfoList" entry="packageInfo"><service-call name="create#mantle.shipment.ShipmentPackage" out-map="[shipmentId:packageOut.shipmentId,shipmentPackageSeqId:packageOut.shipmentPackageSeqId,shipmentBoxTypeId:packageOut.shipmentBoxTypeId,weight:packageOut.weight,weightUomId:packageOut.weightUomId,gatewayPackageId:packageOut.gatewayPackageId,lastUpdatedStamp:packageOut.lastUpdatedStamp]" in-map="[shipmentId:shipmentId, shipmentBoxTypeId:packageInfo.shipmentBoxTypeId,                             weight:packageInfo.weight, weightUomId:packageInfo.weightUomId]"/><service-call name="create#mantle.shipment.ShipmentPackageRouteSeg" in-map="[shipmentId:shipmentId, shipmentPackageSeqId:packageOut.shipmentPackageSeqId,                                 shipmentRouteSegmentSeqId:shipmentRouteSegmentSeqId]"/><iterate list="packageInfo.quantityByProductId" entry="quantity" key="productId"><service-call name="create#mantle.shipment.ShipmentPackageContent" in-map="[shipmentId:shipmentId, shipmentPackageSeqId:packageOut.shipmentPackageSeqId,                                 productId:productId, quantity:quantity]"/></iterate></iterate></actions></service>