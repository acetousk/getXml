<!--Service Location mantle.order.OrderServices.recalc#OrderItemAmount--><service verb="recalc" noun="OrderItemAmount"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderItemSeqId" required="true"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem" for-update="true"/><if condition="orderItem.productId == null"><return/></if><entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true"><econdition field-name="enumGroupEnumId" value="EngItemsProduct"/></entity-find><set field="productItemTypes" from="productItemTypeEgms*.enumId"/><if condition="!(orderItem.itemTypeEnumId in productItemTypes)"><return/></if><service-call name="mantle.product.PriceServices.get#OrderProductPrice" out-map="[price:priceOut.price,productPriceId:priceOut.productPriceId,listPrice:priceOut.listPrice,listProductPriceId:priceOut.listProductPriceId,priceUomId:priceOut.priceUomId]" in-map="[productId:orderItem.productId, quantity:orderItem.quantity, orderId:orderId,                         orderPartSeqId:orderItem.orderPartSeqId]"/><if condition="priceOut.price"><then><if condition="priceOut.price != orderItem.unitAmount"><service-call name="update#mantle.order.OrderItem" in-map="[orderId:orderId, orderItemSeqId:orderItem.orderItemSeqId,                         unitAmount:priceOut.price, unitListPrice:priceOut.listPrice, isModifiedPrice:'N']"/></if></then><else><message type="warning"><![CDATA[No price found for Product ${orderItem.productId} on Order Item ${orderId}:${orderItemSeqId}, not resetting]]></message></else></if></actions></service>