<!--Service Location coarchy.CoarchyServices.invite#User--><service verb="invite" noun="User"><in-parameters><parameter name="partyId" required="true"/><parameter name="emailAddress" required="true"/><parameter name="firstName"/><parameter name="lastName"/></in-parameters><out-parameters><parameter name="newUserId"/><parameter name="newPartyId"/></out-parameters><actions><entity-find-one entity-name="mantle.party.PartyDetail" value-field="organization" auto-field-map="[partyId:partyId]"/><if condition="!organization || !organization.ownerPartyId"><return/></if><if condition="organization.ownerPartyId == ec.user.userAccount.partyId"><entity-find entity-name="moqui.security.UserAccount" list="existingUaList"><econdition field-name="emailAddress" ignore-case="true"/></entity-find><if condition="!existingUaList"><then><service-call name="coarchy.CoarchyServices.create#Account" out-map="[userId:newUser.userId,partyId:newUser.partyId,emailContactMechId:newUser.emailContactMechId]" in-map="[emailAddress:emailAddress,firstName:firstName?:'Not',lastName:lastName?:'Set',username:emailAddress]"/><service-call name="create#mantle.party.PartyRole" in-map="[partyId:newUser.partyId,roleTypeId:'Customer']"/><service-call name="create#moqui.security.UserGroupMember" in-map="[userGroupId:'COARCHY_USERS',                         userId:newUser.userId, fromDate:ec.user.nowTimestamp]"/><service-call name="mantle.party.PartyServices.set#PartyClassification" in-map="[partyId:newUser.partyId,partyClassificationId:'Prospect']"/></then><else><set field="newUser" from="existingUaList?.getFirst()"/></else></if><set field="newPartyId" from="newUser.partyId"/><set field="newUserId" from="newUser.userId"/><entity-find-count entity-name="mantle.party.PartyRelationship" count-field="partyRelationshipCount"><date-filter/><econdition field-name="relationshipTypeEnumId" value="PrtMember"/><econdition field-name="toRoleTypeId" value="OrgInternal"/><econdition field-name="fromPartyId" from="newPartyId"/><econdition field-name="toPartyId" from="partyId"/></entity-find-count><set field="isInvitedUserOrgMember" from="partyRelationshipCount > 0"/><if condition="!isInvitedUserOrgMember"><then><service-call name="create#mantle.party.PartyRelationship" in-map="[relationshipTypeEnumId:'PrtMember',                             fromPartyId:newUser.partyId,toRoleTypeId:'OrgInternal',toPartyId:partyId,fromDate:ec.user.nowTimestamp]"/></then></if><service-call name="org.moqui.impl.UserServices.set#Preference" in-map="[preferenceKey:'ACTIVE_ORGANIZATION',preferenceValue:partyId]"/><set field="baseLinkUrl" from="!'production'.equals(System.getProperty('instance_purpose')) ? 'http://localhost:8080' : 'https://coarchy.com'"/><if condition="!existingUaList"><then><entity-find-one entity-name="moqui.security.UserAccount" value-field="userAccount" auto-field-map="[userId:newUser.userId]" for-update="true"/><set field="resetPassword" from="getRandomString(12)"/><set field="passwordNode" from="ec.ecfi.confXmlRoot.first('user-facade').first('password')"/><set field="userAccount.resetPassword" from="ec.ecfi.getSimpleHash(resetPassword, userAccount.passwordSalt, userAccount.passwordHashType, 'Y'.equals(userAccount.passwordBase64))"/><set field="userAccount.requirePasswordChange" from="(passwordNode.attribute('email-require-change') == 'true') ? 'Y' : 'N'"/><entity-update value-field="userAccount"/><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                             contactListId:'CoarchyInvitation',emailTemplateId:'USER_INVITE_RESET_PASSWORD',                             partyId:newPartyId,preferredContactMechId:newUser.emailContactMechId,toAddresses:emailAddress,                             bodyParameters:[linkUrl:baseLinkUrl+'/ChangePassword?username='+emailAddress+'&oldPassword='+resetPassword+'&action=signup',                             title:'You\'re invited to join the '+organization.organizationName+' Organization',baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/></then><else-if condition="existingUaList && !isInvitedUserOrgMember"><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                             contactListId:'CoarchyInvitation',emailTemplateId:'USER_INVITE',                             partyId:newPartyId,preferredContactMechId:null,toAddresses:emailAddress,                             bodyParameters:[linkUrl:baseLinkUrl+'/Login?username='+existingUaList.getFirst()?.username?:emailAddress,                             title:'You\'re invited to join the '+organization.organizationName+' Organization',baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/></else-if><else><return type="warning" message="${ec.resource.expand('CoarchyOrgInviteAlreadyInvited', null, [emailAddress:emailAddress, organizationName:organization.organizationName])}"/></else></if><else><return type="danger" error="true" message="${ec.resource.expand('CoarchyGeneralNotAllowed', null)}"/></else></if></actions></service>