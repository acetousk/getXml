<!--Service Location org.moqui.impl.WikiServices.delete#WikiPage--><service verb="delete" noun="WikiPage"><in-parameters><parameter name="wikiSpaceId" required="true" entity-name="moqui.resource.wiki.WikiPage" field-name="wikiSpaceId"/><parameter name="pagePath" required="true" entity-name="moqui.resource.wiki.WikiPage" field-name="pagePath"/><parameter name="deleteAttachments" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="wikiSpaceId" entity-name="moqui.resource.wiki.WikiPage" field-name="wikiSpaceId"/><parameter name="pagePath" entity-name="moqui.resource.wiki.WikiPage" field-name="pagePath"><description><![CDATA[Out pagePath is path of parent or empty]]></description></parameter></out-parameters><actions><service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" out-map="[wikiSpaceId:pageInfo.wikiSpaceId,pagePath:pageInfo.pagePath,wikiPageId:pageInfo.wikiPageId,wikiSpace:pageInfo.wikiSpace,wikiPage:pageInfo.wikiPage,rootPageLocation:pageInfo.rootPageLocation,rootPageRef:pageInfo.rootPageRef,spaceRootName:pageInfo.spaceRootName,pageReference:pageInfo.pageReference,wikiType:pageInfo.wikiType,versionName:pageInfo.versionName,currentVersionName:pageInfo.currentVersionName,publishedVersionName:pageInfo.publishedVersionName,attachmentList:pageInfo.attachmentList,pageLocation:pageInfo.pageLocation,pageName:pageInfo.pageName,parentPath:pageInfo.parentPath,breadcrumbNameList:pageInfo.breadcrumbNameList,breadcrumbMapList:pageInfo.breadcrumbMapList]" in-map="[wikiSpaceId:wikiSpaceId, pagePath:pagePath]"/><set field="pageReference" from="pageInfo.pageReference"/><set field="matchingDirRef" from="pageReference.findMatchingDirectory()"/><set field="wikiPageId" from="pageInfo.wikiPageId"/><entity-find-one entity-name="moqui.resource.wiki.WikiPage" value-field="wikiPage" for-update="true"/><if condition="wikiPageId"><entity-find entity-name="moqui.resource.wiki.WikiBlog" list="wikiBlogList"><econdition field-name="wikiPageId"/></entity-find><if condition="wikiBlogList"><return type="danger" message="Page at ${pagePath} has Wiki Blog references from ${wikiBlogList*.wikiBlogId}, cannot delete"/></if></if><set field="childPageList" from="pageInfo.pageReference.getChildren()"/><if condition="childPageList"><return type="danger" message="Page at ${pagePath} has child pages, cannot delete"/></if><if condition="pageInfo.attachmentList"><if condition="deleteAttachments"><then><iterate list="pageInfo.attachmentList" entry="attachmentInfo"><script><![CDATA[attachmentInfo.resourceReference.delete()]]></script></iterate><script><![CDATA[matchingDirRef.getChild('_attachments').delete()]]></script></then><else><return type="danger" message="Page at ${pagePath} has attachments and delete attachments is not enabled"/></else></if></if><if condition="wikiPageId"><entity-delete-by-condition entity-name="moqui.resource.wiki.WikiPageAlias"><econdition field-name="wikiPageId"/></entity-delete-by-condition><entity-delete-by-condition entity-name="moqui.resource.wiki.WikiPageCategoryMember"><econdition field-name="wikiPageId"/></entity-delete-by-condition><entity-delete-by-condition entity-name="moqui.resource.wiki.WikiPageHistory"><econdition field-name="wikiPageId"/></entity-delete-by-condition><entity-delete-by-condition entity-name="moqui.resource.wiki.WikiPageUser"><econdition field-name="wikiPageId"/></entity-delete-by-condition><entity-delete value-field="wikiPage"/></if><if condition="matchingDirRef.exists"><script><![CDATA[try { matchingDirRef.delete() }
                    catch (Throwable t) { ec.message.addMessage('Could not delete matching directory ' + matchingDirRef.location + ': ' + t.toString(), 'danger') }]]></script></if><script><![CDATA[pageReference.delete()]]></script><set field="pagePath" from="pagePath?.contains('/') ? pagePath.substring(0, pagePath.lastIndexOf('/')) : ''"/></actions></service>