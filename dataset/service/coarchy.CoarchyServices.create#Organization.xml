<!--Service Location coarchy.CoarchyServices.create#Organization--><service verb="create" noun="Organization"><in-parameters><parameter name="organizationId"/><parameter name="organizationName" entity-name="mantle.party.Organization" field-name="organizationName"/><parameter name="copyUsers" type="String" default-value="none"><description><![CDATA[Copies/moves user and roles. Value should be one of 'none', 'copy', 'move']]></description></parameter><parameter name="copyChecklists" type="String" default-value="none"><description><![CDATA[Copies/moves checklists. Value should be one of 'none', 'copy', 'move']]></description></parameter><parameter name="copyProducts" type="String" default-value="none"><description><![CDATA[Copies/moves products. Value should be one of 'none', 'copy', 'move']]></description></parameter><parameter name="copyEvaluations" type="String" default-value="none"><description><![CDATA[Copies/moves product evaluations. Value should be one of 'none', 'copy', 'move'. Requires copying Products.]]></description></parameter><parameter name="copyEvaluationResponses" type="Boolean" default="false"><description><![CDATA[Copies/moves product evaluation responses. Value either true or false. Requires copying Products and Evals.]]></description></parameter><parameter name="copyEvaluationVendors" type="Boolean" default="false"><description><![CDATA[Copies/moves invited vendor reps. Value either true or false. Requires copying Products and Evals.]]></description></parameter></in-parameters><out-parameters><parameter name="newOrganizationId"/></out-parameters><actions><entity-find entity-name="mantle.party.PartyToAndRelationship" list="organizationList" distinct="true"><date-filter/><econditions combine="or"><econdition field-name="fromPartyId" from="ec.user.userAccount.partyId"/><econdition field-name="visibilityEnumId" value="PvPublic"/></econditions><select-field field-name="toPartyId,ownerPartyId,organizationName,visibilityEnumId"/><order-by field-name="-visibilityEnumId"/></entity-find><set field="organizationName" from="organizationName?.trim()"/><if condition="!organizationName"><return type="warning" error="true" message="${ec.resource.expand('CoarchyOrgNameInvalid', null)}"/></if><if condition="!organizationId"><service-call name="create#mantle.party.Party" in-map="[ownerPartyId:ec.user.userAccount.partyId,partyTypeEnumId:'PtyOrganization',visibilityEnumId:'PvOrganization']" out-map="[partyId:newOrganization.partyId,pseudoId:newOrganization.pseudoId,partyTypeEnumId:newOrganization.partyTypeEnumId,disabled:newOrganization.disabled,customerStatusId:newOrganization.customerStatusId,ownerPartyId:newOrganization.ownerPartyId,externalId:newOrganization.externalId,dataSourceId:newOrganization.dataSourceId,gatewayCimId:newOrganization.gatewayCimId,comments:newOrganization.comments,shippingInstructions:newOrganization.shippingInstructions,hasDuplicates:newOrganization.hasDuplicates,lastDupCheckDate:newOrganization.lastDupCheckDate,mergedToPartyId:newOrganization.mergedToPartyId,visibilityEnumId:newOrganization.visibilityEnumId,lastUpdatedStamp:newOrganization.lastUpdatedStamp]"/><service-call name="create#mantle.party.Organization" in-map="[partyId:newOrganization.partyId,organizationName:organizationName]"/><service-call name="create#mantle.party.PartyRelationship" in-map="[relationshipTypeEnumId:'PrtMember',fromDate:ec.user.nowTimestamp, fromPartyId:ec.user.userAccount.partyId,toRoleTypeId:'OrgInternal',toPartyId:newOrganization.partyId]"/><service-call name="org.moqui.impl.UserServices.set#Preference" in-map="[preferenceKey:'ACTIVE_ORGANIZATION',preferenceValue:newOrganization.partyId]"/><set field="newOrganizationId" from="newOrganization.partyId"/><return type="success" message="${ec.resource.expand('CoarchyOrgCreateSuccess', null)}"/></if><entity-find-one entity-name="mantle.party.Party" value-field="oldOrganization" auto-field-map="[partyId:organizationId]"/><entity-find-count entity-name="mantle.party.PartyActivation" count-field="partyActivationCount"><date-filter/><econdition field-name="partyId" from="organizationId"/></entity-find-count><if condition="(oldOrganization.visibilityEnumId || (oldOrganization.ownerPartyId == ec.user.userAccount.partyId) ||                     organizationList*.toPartyId?.contains(organizationId)) && (partyActivationCount > 0 || oldOrganization.visibilityEnumId=='PvPublic')"><service-call name="create#mantle.party.Party" in-map="[ownerPartyId:ec.user.userAccount.partyId,                     disabled:oldOrganization.disabled,partyTypeEnumId:oldOrganization.partyTypeEnumId,                     visibilityEnumId:'PvOrganization']" out-map="[partyId:newOrganization.partyId,pseudoId:newOrganization.pseudoId,partyTypeEnumId:newOrganization.partyTypeEnumId,disabled:newOrganization.disabled,customerStatusId:newOrganization.customerStatusId,ownerPartyId:newOrganization.ownerPartyId,externalId:newOrganization.externalId,dataSourceId:newOrganization.dataSourceId,gatewayCimId:newOrganization.gatewayCimId,comments:newOrganization.comments,shippingInstructions:newOrganization.shippingInstructions,hasDuplicates:newOrganization.hasDuplicates,lastDupCheckDate:newOrganization.lastDupCheckDate,mergedToPartyId:newOrganization.mergedToPartyId,visibilityEnumId:newOrganization.visibilityEnumId,lastUpdatedStamp:newOrganization.lastUpdatedStamp]"/><service-call name="create#mantle.party.Organization" in-map="[partyId:newOrganization.partyId,organizationName:organizationName]"/><service-call name="coarchy.CoarchyServices.activateOrDeactivate#Organization" in-map="[organizationPartyId:newOrganization.partyId]" out-map="[needsCredits:context.needsCredits,creditsNeeded:context.creditsNeeded]"/><service-call name="org.moqui.impl.UserServices.set#Preference" in-map="[preferenceKey:'ACTIVE_ORGANIZATION',preferenceValue:newOrganization.partyId]"/><service-call name="create#mantle.party.PartyRelationship" in-map="[relationshipTypeEnumId:'PrtMember',fromDate:ec.user.nowTimestamp, fromPartyId:ec.user.userAccount.partyId,toRoleTypeId:'OrgInternal',toPartyId:newOrganization.partyId]"/><set field="newOrganizationId" from="newOrganization.partyId"/><entity-find entity-name="mantle.party.PartyRelationship" list="partyRelationshipList"><date-filter/><econdition field-name="toPartyId" from="oldOrganization.partyId"/><econdition field-name="toRoleTypeId" value="OrgInternal"/><econdition field-name="relationshipTypeEnumId" value="PrtMember"/></entity-find><set field="referencedPartyIdSet" from="new TreeSet()"/><entity-find entity-name="mantle.party.PartyContent" list="partyContentList"><econdition field-name="partyId" from="oldOrganization.partyId"/><econdition field-name="partyContentTypeEnumId" operator="in" value="PcntVision,PcntMission,PcntOriginStory"/></entity-find><iterate list="partyContentList" entry="partyContent"><service-call name="create#mantle.party.PartyContent" in-map="[partyId:newOrganization.partyId,                         partyContentTypeEnumId:partyContent.partyContentTypeEnumId,description:partyContent.description]"/></iterate><set field="valueStatementIdMap" from="[:]"/><entity-find entity-name="coarchy.ValueStatement" list="valueStatementList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="valueStatementList" entry="valueStatement"><service-call name="create#coarchy.ValueStatement" in-map="[value:valueStatement.value,typeEnumId:                         valueStatement.typeEnumId,organizationId:newOrganization.partyId]" out-map="[valueStatementId:valueStatementContext.valueStatementId,value:valueStatementContext.value,sequenceNum:valueStatementContext.sequenceNum,typeEnumId:valueStatementContext.typeEnumId,disabled:valueStatementContext.disabled,replacedByValueStatementId:valueStatementContext.replacedByValueStatementId,organizationId:valueStatementContext.organizationId,lastUpdatedStamp:valueStatementContext.lastUpdatedStamp]"/><script><![CDATA[valueStatementIdMap.put(valueStatement.valueStatementId,valueStatementContext.valueStatementId)]]></script></iterate><set field="processStoryIdMap" from="[:]"/><entity-find entity-name="coarchy.ProcessStory" list="processStoryList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="processStoryList" entry="processStory"><service-call name="create#coarchy.ProcessStory" in-map="[name:processStory.name,organizationId:newOrganization.partyId,disabled:processStory.disabled]" out-map="[processStoryId:processStoryContext.processStoryId,name:processStoryContext.name,disabled:processStoryContext.disabled,organizationId:processStoryContext.organizationId,lastUpdatedStamp:processStoryContext.lastUpdatedStamp]"/><script><![CDATA[processStoryIdMap.put(processStory.processStoryId,processStoryContext.processStoryId)]]></script></iterate><set field="actorIdMap" from="[:]"/><entity-find entity-name="coarchy.Actor" list="actorList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="actorList" entry="actor"><service-call name="create#coarchy.Actor" in-map="[name:actor.name,description:actor.description,organizationId:newOrganization.partyId]" out-map="[actorId:actorContext.actorId,name:actorContext.name,description:actorContext.description,organizationId:actorContext.organizationId,lastUpdatedStamp:actorContext.lastUpdatedStamp]"/><script><![CDATA[actorIdMap.put(actor.actorId,actorContext.actorId)]]></script></iterate><if condition="copyUsers != 'none'"><entity-find entity-name="coarchy.ActorParty" list="actorPartyList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="actorPartyList" entry="actorParty"><if condition="(copyUsers == 'copy') || (copyUsers == 'move')"><then><script><![CDATA[referencedPartyIdSet.add(actorParty.partyId)]]></script><service-call name="create#coarchy.ActorParty" in-map="[actorId:actorIdMap[actorParty.actorId], partyId:actorParty.partyId, organizationId:newOrganization.partyId]"/><if condition="(copyUsers == 'move')"><entity-delete value-field="actorParty"/></if></then></if></iterate></if><set field="activityIdMap" from="[:]"/><entity-find entity-name="coarchy.Activity" list="activityList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="activityList" entry="activity"><service-call name="create#coarchy.Activity" in-map="[condition:activity.condition,action:activity.action,implementationId:activity.implementationId,organizationId:newOrganization.partyId]" out-map="[activityId:activityContext.activityId,condition:activityContext.condition,action:activityContext.action,replacedByActivityId:activityContext.replacedByActivityId,implementationId:activityContext.implementationId,organizationId:activityContext.organizationId,lastUpdatedStamp:activityContext.lastUpdatedStamp]"/><script><![CDATA[activityIdMap.put(activity.activityId,activityContext.activityId)]]></script></iterate><entity-find entity-name="coarchy.ActivityActor" list="activityActorList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="activityActorList" entry="activityActor"><service-call name="create#coarchy.ActivityActor" in-map="[activityId:activityIdMap[activityActor.activityId], actorId:actorIdMap[activityActor.actorId], organizationId:newOrganization.partyId]"/></iterate><entity-find entity-name="coarchy.ValueStatementActivity" list="valueStatementActivityList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="valueStatementActivityList" entry="valueStatementActivity"><service-call name="create#coarchy.ValueStatementActivity" in-map="[valueStatementId:valueStatementIdMap[valueStatementActivity.valueStatementId],activityId:activityIdMap[valueStatementActivity.activityId],organizationId:newOrganization.partyId]"/></iterate><entity-find entity-name="coarchy.ProcessStoryActivity" list="processStoryActivityList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="processStoryActivityList" entry="processStoryActivity"><service-call name="create#coarchy.ProcessStoryActivity" in-map="[processStoryId:processStoryIdMap[processStoryActivity.processStoryId],activityId:activityIdMap[processStoryActivity.activityId],sequenceNum:processStoryActivity.sequenceNum,detailProcessStoryId:processStoryIdMap[processStoryActivity.detailProcessStoryId],organizationId:newOrganization.partyId]"/></iterate><set field="checklistWorkEffortIdMap" from="[:]"/><if condition="copyChecklists != 'none'"><entity-find entity-name="mantle.work.effort.WorkEffort" list="checklistWorkEffortList"><econdition field-name="workEffortTypeEnumId" value="WetChecklist"/><econdition field-name="ownerPartyId" from="oldOrganization.partyId"/></entity-find><iterate list="checklistWorkEffortList" entry="checklistWorkEffort"><if condition="copyChecklists == 'copy'"><then><service-call name="create#mantle.work.effort.WorkEffort" in-map="[workEffortName:checklistWorkEffort.workEffortName,                                     actualStartDate:checklistWorkEffort.actualStartDate,workEffortTypeEnumId:checklistWorkEffort.workEffortTypeEnumId,                                     actualCompletionDate:checklistWorkEffort.actualCompletionDate,ownerPartyId:newOrganization.partyId]" out-map="[workEffortId:checklistWorkEffortContext.workEffortId,universalId:checklistWorkEffortContext.universalId,sourceReferenceId:checklistWorkEffortContext.sourceReferenceId,parentWorkEffortId:checklistWorkEffortContext.parentWorkEffortId,rootWorkEffortId:checklistWorkEffortContext.rootWorkEffortId,workEffortTypeEnumId:checklistWorkEffortContext.workEffortTypeEnumId,purposeEnumId:checklistWorkEffortContext.purposeEnumId,visibilityEnumId:checklistWorkEffortContext.visibilityEnumId,resolutionEnumId:checklistWorkEffortContext.resolutionEnumId,workTypeEnumId:checklistWorkEffortContext.workTypeEnumId,ownerPartyId:checklistWorkEffortContext.ownerPartyId,productStoreId:checklistWorkEffortContext.productStoreId,statusId:checklistWorkEffortContext.statusId,statusFlowId:checklistWorkEffortContext.statusFlowId,priority:checklistWorkEffortContext.priority,sendNotificationEmail:checklistWorkEffortContext.sendNotificationEmail,percentComplete:checklistWorkEffortContext.percentComplete,revisionNumber:checklistWorkEffortContext.revisionNumber,workEffortName:checklistWorkEffortContext.workEffortName,description:checklistWorkEffortContext.description,location:checklistWorkEffortContext.location,facilityId:checklistWorkEffortContext.facilityId,infoUrl:checklistWorkEffortContext.infoUrl,shipmentMethodEnumId:checklistWorkEffortContext.shipmentMethodEnumId,estimatedStartDate:checklistWorkEffortContext.estimatedStartDate,estimatedCompletionDate:checklistWorkEffortContext.estimatedCompletionDate,actualStartDate:checklistWorkEffortContext.actualStartDate,actualCompletionDate:checklistWorkEffortContext.actualCompletionDate,recurStartCron:checklistWorkEffortContext.recurStartCron,recurLimit:checklistWorkEffortContext.recurLimit,recurEndDate:checklistWorkEffortContext.recurEndDate,allDayStart:checklistWorkEffortContext.allDayStart,allDayEnd:checklistWorkEffortContext.allDayEnd,estimatedWorkTime:checklistWorkEffortContext.estimatedWorkTime,estimatedSetupTime:checklistWorkEffortContext.estimatedSetupTime,remainingWorkTime:checklistWorkEffortContext.remainingWorkTime,actualWorkTime:checklistWorkEffortContext.actualWorkTime,actualSetupTime:checklistWorkEffortContext.actualSetupTime,totalTimeAllowed:checklistWorkEffortContext.totalTimeAllowed,estimatedWorkDuration:checklistWorkEffortContext.estimatedWorkDuration,actualWorkDuration:checklistWorkEffortContext.actualWorkDuration,actualBreakDuration:checklistWorkEffortContext.actualBreakDuration,timeUomId:checklistWorkEffortContext.timeUomId,actualCost:checklistWorkEffortContext.actualCost,actualClientCost:checklistWorkEffortContext.actualClientCost,totalClientCostAllowed:checklistWorkEffortContext.totalClientCostAllowed,costUomId:checklistWorkEffortContext.costUomId,activityId:checklistWorkEffortContext.activityId,lastUpdatedStamp:checklistWorkEffortContext.lastUpdatedStamp]"/><script><![CDATA[checklistWorkEffortIdMap.put(checklistWorkEffort.workEffortId,checklistWorkEffortContext.workEffortId)]]></script></then><else-if condition="copyChecklists == 'move'"><service-call name="update#mantle.work.effort.WorkEffort" in-map="[workEffortId:checklistWorkEffort.workEffortId, ownerPartyId:newOrganization.partyId]" out-map="[workEffortId:checklistWorkEffortContext.workEffortId,universalId:checklistWorkEffortContext.universalId,sourceReferenceId:checklistWorkEffortContext.sourceReferenceId,parentWorkEffortId:checklistWorkEffortContext.parentWorkEffortId,rootWorkEffortId:checklistWorkEffortContext.rootWorkEffortId,workEffortTypeEnumId:checklistWorkEffortContext.workEffortTypeEnumId,purposeEnumId:checklistWorkEffortContext.purposeEnumId,visibilityEnumId:checklistWorkEffortContext.visibilityEnumId,resolutionEnumId:checklistWorkEffortContext.resolutionEnumId,workTypeEnumId:checklistWorkEffortContext.workTypeEnumId,ownerPartyId:checklistWorkEffortContext.ownerPartyId,productStoreId:checklistWorkEffortContext.productStoreId,statusId:checklistWorkEffortContext.statusId,statusFlowId:checklistWorkEffortContext.statusFlowId,priority:checklistWorkEffortContext.priority,sendNotificationEmail:checklistWorkEffortContext.sendNotificationEmail,percentComplete:checklistWorkEffortContext.percentComplete,revisionNumber:checklistWorkEffortContext.revisionNumber,workEffortName:checklistWorkEffortContext.workEffortName,description:checklistWorkEffortContext.description,location:checklistWorkEffortContext.location,facilityId:checklistWorkEffortContext.facilityId,infoUrl:checklistWorkEffortContext.infoUrl,shipmentMethodEnumId:checklistWorkEffortContext.shipmentMethodEnumId,estimatedStartDate:checklistWorkEffortContext.estimatedStartDate,estimatedCompletionDate:checklistWorkEffortContext.estimatedCompletionDate,actualStartDate:checklistWorkEffortContext.actualStartDate,actualCompletionDate:checklistWorkEffortContext.actualCompletionDate,recurStartCron:checklistWorkEffortContext.recurStartCron,recurLimit:checklistWorkEffortContext.recurLimit,recurEndDate:checklistWorkEffortContext.recurEndDate,allDayStart:checklistWorkEffortContext.allDayStart,allDayEnd:checklistWorkEffortContext.allDayEnd,estimatedWorkTime:checklistWorkEffortContext.estimatedWorkTime,estimatedSetupTime:checklistWorkEffortContext.estimatedSetupTime,remainingWorkTime:checklistWorkEffortContext.remainingWorkTime,actualWorkTime:checklistWorkEffortContext.actualWorkTime,actualSetupTime:checklistWorkEffortContext.actualSetupTime,totalTimeAllowed:checklistWorkEffortContext.totalTimeAllowed,estimatedWorkDuration:checklistWorkEffortContext.estimatedWorkDuration,actualWorkDuration:checklistWorkEffortContext.actualWorkDuration,actualBreakDuration:checklistWorkEffortContext.actualBreakDuration,timeUomId:checklistWorkEffortContext.timeUomId,actualCost:checklistWorkEffortContext.actualCost,actualClientCost:checklistWorkEffortContext.actualClientCost,totalClientCostAllowed:checklistWorkEffortContext.totalClientCostAllowed,costUomId:checklistWorkEffortContext.costUomId,activityId:checklistWorkEffortContext.activityId,lastUpdatedStamp:checklistWorkEffortContext.lastUpdatedStamp]"/><script><![CDATA[checklistWorkEffortIdMap.put(checklistWorkEffort.workEffortId,checklistWorkEffort.workEffortId)]]></script></else-if></if></iterate><entity-find entity-name="mantle.work.effort.WorkEffortParty" list="checklistWorkEffortPartyList"><econdition field-name="workEffortId" operator="in" from="checklistWorkEffortIdMap*.key"/></entity-find><iterate list="checklistWorkEffortPartyList" entry="checklistWorkEffortParty"><if condition="partyRelationshipList*.fromPartyId?.contains(checklistWorkEffortParty.partyId)"><then><script><![CDATA[referencedPartyIdSet.add(checklistWorkEffortParty.partyId)]]></script><if condition="copyChecklists == 'copy'"><then><service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[                                             workEffortId:checklistWorkEffortIdMap[checklistWorkEffortParty.workEffortId],                                             partyId:checklistWorkEffortParty.partyId,roleTypeId:checklistWorkEffortParty.roleTypeId,                                             fromDate:ec.user.nowTimestamp,thruDate:checklistWorkEffortParty.thruDate]"/></then><else-if condition="copyChecklists == 'move'"/></if></then><else/></if></iterate></if><set field="itemWorkEffortIdMap" from="[:]"/><if condition="copyChecklists != 'none'"><entity-find entity-name="mantle.work.effort.WorkEffort" list="itemWorkEffortList"><econdition field-name="workEffortTypeEnumId" value="WetChecklistItem"/><econdition field-name="ownerPartyId" from="oldOrganization.partyId"/></entity-find><iterate list="itemWorkEffortList" entry="itemWorkEffort"><if condition="copyChecklists == 'copy'"><then><service-call name="create#mantle.work.effort.WorkEffort" in-map="[workEffortName:itemWorkEffort.workEffortName,                                 actualStartDate:itemWorkEffort.actualStartDate,workEffortTypeEnumId:itemWorkEffort.workEffortTypeEnumId,                                 actualCompletionDate:itemWorkEffort.actualCompletionDate,ownerPartyId:newOrganization.partyId,                                 rootWorkEffortId:checklistWorkEffortIdMap[itemWorkEffort.rootWorkEffortId],                                 activityId:activityIdMap[itemWorkEffort.activityId],resolutionEnumId:itemWorkEffort.resolutionEnumId]" out-map="[workEffortId:itemWorkEffortContext.workEffortId,universalId:itemWorkEffortContext.universalId,sourceReferenceId:itemWorkEffortContext.sourceReferenceId,parentWorkEffortId:itemWorkEffortContext.parentWorkEffortId,rootWorkEffortId:itemWorkEffortContext.rootWorkEffortId,workEffortTypeEnumId:itemWorkEffortContext.workEffortTypeEnumId,purposeEnumId:itemWorkEffortContext.purposeEnumId,visibilityEnumId:itemWorkEffortContext.visibilityEnumId,resolutionEnumId:itemWorkEffortContext.resolutionEnumId,workTypeEnumId:itemWorkEffortContext.workTypeEnumId,ownerPartyId:itemWorkEffortContext.ownerPartyId,productStoreId:itemWorkEffortContext.productStoreId,statusId:itemWorkEffortContext.statusId,statusFlowId:itemWorkEffortContext.statusFlowId,priority:itemWorkEffortContext.priority,sendNotificationEmail:itemWorkEffortContext.sendNotificationEmail,percentComplete:itemWorkEffortContext.percentComplete,revisionNumber:itemWorkEffortContext.revisionNumber,workEffortName:itemWorkEffortContext.workEffortName,description:itemWorkEffortContext.description,location:itemWorkEffortContext.location,facilityId:itemWorkEffortContext.facilityId,infoUrl:itemWorkEffortContext.infoUrl,shipmentMethodEnumId:itemWorkEffortContext.shipmentMethodEnumId,estimatedStartDate:itemWorkEffortContext.estimatedStartDate,estimatedCompletionDate:itemWorkEffortContext.estimatedCompletionDate,actualStartDate:itemWorkEffortContext.actualStartDate,actualCompletionDate:itemWorkEffortContext.actualCompletionDate,recurStartCron:itemWorkEffortContext.recurStartCron,recurLimit:itemWorkEffortContext.recurLimit,recurEndDate:itemWorkEffortContext.recurEndDate,allDayStart:itemWorkEffortContext.allDayStart,allDayEnd:itemWorkEffortContext.allDayEnd,estimatedWorkTime:itemWorkEffortContext.estimatedWorkTime,estimatedSetupTime:itemWorkEffortContext.estimatedSetupTime,remainingWorkTime:itemWorkEffortContext.remainingWorkTime,actualWorkTime:itemWorkEffortContext.actualWorkTime,actualSetupTime:itemWorkEffortContext.actualSetupTime,totalTimeAllowed:itemWorkEffortContext.totalTimeAllowed,estimatedWorkDuration:itemWorkEffortContext.estimatedWorkDuration,actualWorkDuration:itemWorkEffortContext.actualWorkDuration,actualBreakDuration:itemWorkEffortContext.actualBreakDuration,timeUomId:itemWorkEffortContext.timeUomId,actualCost:itemWorkEffortContext.actualCost,actualClientCost:itemWorkEffortContext.actualClientCost,totalClientCostAllowed:itemWorkEffortContext.totalClientCostAllowed,costUomId:itemWorkEffortContext.costUomId,activityId:itemWorkEffortContext.activityId,lastUpdatedStamp:itemWorkEffortContext.lastUpdatedStamp]"/><script><![CDATA[itemWorkEffortIdMap.put(itemWorkEffort.workEffortId,itemWorkEffortContext.workEffortId)]]></script></then><else-if condition="copyChecklists == 'move'"><service-call name="update#mantle.work.effort.WorkEffort" in-map="[workEffortId:itemWorkEffort.workEffortId, ownerPartyId:newOrganization.partyId,activityId: activityIdMap[itemWorkEffort.activityId]]" out-map="[workEffortId:itemWorkEffortContext.workEffortId,universalId:itemWorkEffortContext.universalId,sourceReferenceId:itemWorkEffortContext.sourceReferenceId,parentWorkEffortId:itemWorkEffortContext.parentWorkEffortId,rootWorkEffortId:itemWorkEffortContext.rootWorkEffortId,workEffortTypeEnumId:itemWorkEffortContext.workEffortTypeEnumId,purposeEnumId:itemWorkEffortContext.purposeEnumId,visibilityEnumId:itemWorkEffortContext.visibilityEnumId,resolutionEnumId:itemWorkEffortContext.resolutionEnumId,workTypeEnumId:itemWorkEffortContext.workTypeEnumId,ownerPartyId:itemWorkEffortContext.ownerPartyId,productStoreId:itemWorkEffortContext.productStoreId,statusId:itemWorkEffortContext.statusId,statusFlowId:itemWorkEffortContext.statusFlowId,priority:itemWorkEffortContext.priority,sendNotificationEmail:itemWorkEffortContext.sendNotificationEmail,percentComplete:itemWorkEffortContext.percentComplete,revisionNumber:itemWorkEffortContext.revisionNumber,workEffortName:itemWorkEffortContext.workEffortName,description:itemWorkEffortContext.description,location:itemWorkEffortContext.location,facilityId:itemWorkEffortContext.facilityId,infoUrl:itemWorkEffortContext.infoUrl,shipmentMethodEnumId:itemWorkEffortContext.shipmentMethodEnumId,estimatedStartDate:itemWorkEffortContext.estimatedStartDate,estimatedCompletionDate:itemWorkEffortContext.estimatedCompletionDate,actualStartDate:itemWorkEffortContext.actualStartDate,actualCompletionDate:itemWorkEffortContext.actualCompletionDate,recurStartCron:itemWorkEffortContext.recurStartCron,recurLimit:itemWorkEffortContext.recurLimit,recurEndDate:itemWorkEffortContext.recurEndDate,allDayStart:itemWorkEffortContext.allDayStart,allDayEnd:itemWorkEffortContext.allDayEnd,estimatedWorkTime:itemWorkEffortContext.estimatedWorkTime,estimatedSetupTime:itemWorkEffortContext.estimatedSetupTime,remainingWorkTime:itemWorkEffortContext.remainingWorkTime,actualWorkTime:itemWorkEffortContext.actualWorkTime,actualSetupTime:itemWorkEffortContext.actualSetupTime,totalTimeAllowed:itemWorkEffortContext.totalTimeAllowed,estimatedWorkDuration:itemWorkEffortContext.estimatedWorkDuration,actualWorkDuration:itemWorkEffortContext.actualWorkDuration,actualBreakDuration:itemWorkEffortContext.actualBreakDuration,timeUomId:itemWorkEffortContext.timeUomId,actualCost:itemWorkEffortContext.actualCost,actualClientCost:itemWorkEffortContext.actualClientCost,totalClientCostAllowed:itemWorkEffortContext.totalClientCostAllowed,costUomId:itemWorkEffortContext.costUomId,activityId:itemWorkEffortContext.activityId,lastUpdatedStamp:itemWorkEffortContext.lastUpdatedStamp]"/><script><![CDATA[itemWorkEffortIdMap.put(itemWorkEffort.workEffortId,itemWorkEffort.workEffortId)]]></script></else-if></if></iterate><entity-find entity-name="mantle.work.effort.WorkEffortParty" list="itemWorkEffortPartyList"><econdition field-name="workEffortId" operator="in" from="itemWorkEffortIdMap*.key"/></entity-find><iterate list="itemWorkEffortPartyList" entry="itemWorkEffortParty"><if condition="partyRelationshipList*.fromPartyId?.contains(itemWorkEffortParty.partyId)"><then><script><![CDATA[referencedPartyIdSet.add(itemWorkEffortParty.partyId)]]></script><if condition="copyChecklists == 'copy'"><then><service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[                                             workEffortId:itemWorkEffortIdMap[itemWorkEffortParty.workEffortId],                                             partyId:itemWorkEffortParty.partyId,roleTypeId:itemWorkEffortParty.roleTypeId,                                             fromDate:ec.user.nowTimestamp,thruDate:itemWorkEffortParty.thruDate]"/></then><else-if condition="copyChecklists == 'move'"/></if></then><else/></if></iterate></if><if condition="copyUsers != 'none'"><entity-find entity-name="mantle.party.PartyRelationship" list="referencedPartyRelationshipList"><date-filter/><econdition field-name="toPartyId" from="oldOrganization.partyId"/><econdition field-name="toRoleTypeId" value="OrgInternal"/><econdition field-name="relationshipTypeEnumId" value="PrtMember"/><econdition field-name="fromPartyId" operator="in" from="referencedPartyIdSet"/></entity-find><iterate list="referencedPartyRelationshipList" entry="partyRelationship"><if condition="(copyUsers == 'copy') || (copyUsers == 'move') && (partyRelationship.fromPartyId != ec.user.userAccount?.partyId)"><then><service-call name="create#mantle.party.PartyRelationship" in-map="[                                     relationshipTypeEnumId:partyRelationship.relationshipTypeEnumId,fromPartyId:partyRelationship.fromPartyId,                                     toRoleTypeId:partyRelationship.toRoleTypeId,toPartyId:newOrganization.partyId,fromDate:partyRelationship.fromDate,                                     thruDate:partyRelationship.thruDate]"/><if condition="(copyUsers == 'move')"><set field="partyRelationship.thruDate" from="ec.user.nowTimestamp"/><entity-update value-field="partyRelationship"/></if></then></if></iterate></if><set field="productIdMap" from="[:]"/><if condition="copyProducts != 'none'"><entity-find entity-name="mantle.product.Product" list="productList"><econdition field-name="productClassEnumId" value="PclsCoarchy"/><econdition field-name="ownerPartyId" from="oldOrganization.partyId"/></entity-find><iterate list="productList" entry="product"><if condition="copyProducts == 'copy'"><then><service-call name="create#mantle.product.Product" in-map="product + [productId:null, ownerPartyId:newOrganization.partyId]" out-map="[productId:productContext.productId,pseudoId:productContext.pseudoId,productTypeEnumId:productContext.productTypeEnumId,productClassEnumId:productContext.productClassEnumId,assetTypeEnumId:productContext.assetTypeEnumId,assetClassEnumId:productContext.assetClassEnumId,statusId:productContext.statusId,ownerPartyId:productContext.ownerPartyId,productName:productContext.productName,description:productContext.description,comments:productContext.comments,salesIntroductionDate:productContext.salesIntroductionDate,salesDiscontinuationDate:productContext.salesDiscontinuationDate,salesDiscWhenNotAvail:productContext.salesDiscWhenNotAvail,supportDiscontinuationDate:productContext.supportDiscontinuationDate,requireInventory:productContext.requireInventory,chargeShipping:productContext.chargeShipping,signatureRequiredEnumId:productContext.signatureRequiredEnumId,shippingInsuranceReqd:productContext.shippingInsuranceReqd,inShippingBox:productContext.inShippingBox,defaultShipmentBoxTypeId:productContext.defaultShipmentBoxTypeId,taxable:productContext.taxable,taxCode:productContext.taxCode,returnable:productContext.returnable,amountUomId:productContext.amountUomId,amountFixed:productContext.amountFixed,amountRequire:productContext.amountRequire,originGeoId:productContext.originGeoId,hidden:productContext.hidden,lastUpdatedStamp:productContext.lastUpdatedStamp]"/><script><![CDATA[productIdMap.put(product.productId,productContext.productId)]]></script></then><else-if condition="copyProducts == 'move'"><service-call name="update#mantle.product.Product" in-map="[productId:product.productId, ownerPartyId:newOrganization.partyId]" out-map="[productId:productContext.productId,pseudoId:productContext.pseudoId,productTypeEnumId:productContext.productTypeEnumId,productClassEnumId:productContext.productClassEnumId,assetTypeEnumId:productContext.assetTypeEnumId,assetClassEnumId:productContext.assetClassEnumId,statusId:productContext.statusId,ownerPartyId:productContext.ownerPartyId,productName:productContext.productName,description:productContext.description,comments:productContext.comments,salesIntroductionDate:productContext.salesIntroductionDate,salesDiscontinuationDate:productContext.salesDiscontinuationDate,salesDiscWhenNotAvail:productContext.salesDiscWhenNotAvail,supportDiscontinuationDate:productContext.supportDiscontinuationDate,requireInventory:productContext.requireInventory,chargeShipping:productContext.chargeShipping,signatureRequiredEnumId:productContext.signatureRequiredEnumId,shippingInsuranceReqd:productContext.shippingInsuranceReqd,inShippingBox:productContext.inShippingBox,defaultShipmentBoxTypeId:productContext.defaultShipmentBoxTypeId,taxable:productContext.taxable,taxCode:productContext.taxCode,returnable:productContext.returnable,amountUomId:productContext.amountUomId,amountFixed:productContext.amountFixed,amountRequire:productContext.amountRequire,originGeoId:productContext.originGeoId,hidden:productContext.hidden,lastUpdatedStamp:productContext.lastUpdatedStamp]"/><script><![CDATA[productIdMap.put(product.productId,product.productId)]]></script></else-if></if></iterate></if><set field="productEvaluationIdMap" from="[:]"/><if condition="(copyProducts != 'none') && (copyEvaluations != 'none')"><entity-find entity-name="coarchy.product.ProductEvaluation" list="productEvaluationList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="productEvaluationList" entry="productEvaluation"><if condition="!['PeRequirementsSelection','PeInviteVendors'].contains(productEvaluation.statusId)"><set field="targetStatusId" value="PeInviteVendors"/><else><set field="targetStatusId" from="productEvaluation.statusId"/></else></if><if condition="copyEvaluations == 'copy'"><then><service-call name="create#coarchy.product.ProductEvaluation" in-map="productEvaluation + [productEvaluationId:null, organizationId:newOrganization.partyId, productId:productIdMap[productEvaluation.productId], statusId:targetStatusId]" out-map="[productEvaluationId:productEvaluationContext.productEvaluationId,productId:productEvaluationContext.productId,organizationId:productEvaluationContext.organizationId,statusId:productEvaluationContext.statusId,evaluationName:productEvaluationContext.evaluationName,createdDate:productEvaluationContext.createdDate,requirementsSetDate:productEvaluationContext.requirementsSetDate,completedDate:productEvaluationContext.completedDate,lastUpdatedStamp:productEvaluationContext.lastUpdatedStamp]"/><script><![CDATA[productEvaluationIdMap.put(productEvaluation.productEvaluationId,productEvaluationContext.productEvaluationId)]]></script></then><else-if condition="copyEvaluations == 'move'"><service-call name="update#coarchy.product.ProductEvaluation" in-map="[productEvaluationId:productEvaluation.productEvaluationId, organizationId:newOrganization.partyId, productId:productIdMap[productEvaluation.productId], statusId:targetStatusId]" out-map="[productEvaluationId:productEvaluationContext.productEvaluationId,productId:productEvaluationContext.productId,organizationId:productEvaluationContext.organizationId,statusId:productEvaluationContext.statusId,evaluationName:productEvaluationContext.evaluationName,createdDate:productEvaluationContext.createdDate,requirementsSetDate:productEvaluationContext.requirementsSetDate,completedDate:productEvaluationContext.completedDate,lastUpdatedStamp:productEvaluationContext.lastUpdatedStamp]"/><script><![CDATA[productEvaluationIdMap.put(productEvaluation.productEvaluationId,productEvaluation.productEvaluationId)]]></script></else-if></if></iterate><entity-find entity-name="coarchy.product.ProductEvaluationStory" list="productEvaluationStoryList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="productEvaluationStoryList" entry="productEvaluationStory"><if condition="copyEvaluations == 'copy'"><then><service-call name="create#coarchy.product.ProductEvaluationStory" in-map="productEvaluationStory + [productEvaluationId:productEvaluationIdMap[productEvaluationStory.productEvaluationId], organizationId:newOrganization.partyId, processStoryId:processStoryIdMap[productEvaluationStory.processStoryId]]" out-map="[productEvaluationId:productEvaluationStoryContext.productEvaluationId,processStoryId:productEvaluationStoryContext.processStoryId,organizationId:productEvaluationStoryContext.organizationId,lastUpdatedStamp:productEvaluationStoryContext.lastUpdatedStamp]"/></then><else-if condition="copyEvaluations == 'move'"><service-call name="delete#coarchy.product.ProductEvaluationStory" in-map="[productEvaluationId:productEvaluationStory.productEvaluationId, processStoryId:productEvaluationStory.processStoryId]"/><service-call name="create#coarchy.product.ProductEvaluationStory" in-map="productEvaluationStory + [productEvaluationId:productEvaluationIdMap[productEvaluationStory.productEvaluationId], organizationId:newOrganization.partyId, processStoryId:processStoryIdMap[productEvaluationStory.processStoryId]]" out-map="[productEvaluationId:productEvaluationStoryContext.productEvaluationId,processStoryId:productEvaluationStoryContext.processStoryId,organizationId:productEvaluationStoryContext.organizationId,lastUpdatedStamp:productEvaluationStoryContext.lastUpdatedStamp]"/></else-if></if></iterate><entity-find entity-name="coarchy.product.ProductEvaluationStatement" list="productEvaluationStatementList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="productEvaluationStatementList" entry="productEvaluationStatement"><if condition="copyEvaluations == 'copy'"><then><service-call name="create#coarchy.product.ProductEvaluationStatement" in-map="productEvaluationStatement + [productEvaluationId:productEvaluationIdMap[productEvaluationStatement.productEvaluationId], organizationId:newOrganization.partyId, statementId:valueStatementIdMap[productEvaluationStatement.statementId]]" out-map="[productEvaluationId:productEvaluationStatementContext.productEvaluationId,statementId:productEvaluationStatementContext.statementId,organizationId:productEvaluationStatementContext.organizationId,lastUpdatedStamp:productEvaluationStatementContext.lastUpdatedStamp]"/></then><else-if condition="copyEvaluations == 'move'"><service-call name="delete#coarchy.product.ProductEvaluationStatement" in-map="[productEvaluationId:productEvaluationStatement.productEvaluationId, statementId:productEvaluationStatement.statementId]"/><service-call name="create#coarchy.product.ProductEvaluationStatement" in-map="productEvaluationStatement + [productEvaluationId:productEvaluationIdMap[productEvaluationStatement.productEvaluationId], organizationId:newOrganization.partyId, statementId:valueStatementIdMap[productEvaluationStatement.statementId]]" out-map="[productEvaluationId:productEvaluationStatementContext.productEvaluationId,statementId:productEvaluationStatementContext.statementId,organizationId:productEvaluationStatementContext.organizationId,lastUpdatedStamp:productEvaluationStatementContext.lastUpdatedStamp]"/></else-if></if></iterate><entity-find entity-name="coarchy.product.ProductEvaluationActivity" list="productEvaluationActivityList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="productEvaluationActivityList" entry="productEvaluationActivity"><if condition="copyEvaluations == 'copy'"><then><service-call name="create#coarchy.product.ProductEvaluationActivity" in-map="productEvaluationActivity + [productEvaluationId:productEvaluationIdMap[productEvaluationActivity.productEvaluationId], organizationId:newOrganization.partyId, activityId:activityIdMap[productEvaluationActivity.activityId]]" out-map="[productEvaluationId:productEvaluationActivityContext.productEvaluationId,processStoryId:productEvaluationActivityContext.processStoryId,activityId:productEvaluationActivityContext.activityId,excludeFlag:productEvaluationActivityContext.excludeFlag,organizationId:productEvaluationActivityContext.organizationId,lastUpdatedStamp:productEvaluationActivityContext.lastUpdatedStamp]"/></then><else-if condition="copyEvaluations == 'move'"><service-call name="delete#coarchy.product.ProductEvaluationActivity" in-map="[productEvaluationId:productEvaluationActivity.productEvaluationId, processStoryId:productEvaluationActivity.processStoryId, activityId:productEvaluationActivity.activityId]"/><service-call name="create#coarchy.product.ProductEvaluationActivity" in-map="productEvaluationActivity + [productEvaluationId:productEvaluationIdMap[productEvaluationActivity.productEvaluationId], organizationId:newOrganization.partyId, activityId:activityIdMap[productEvaluationActivity.activityId]]" out-map="[productEvaluationId:productEvaluationActivityContext.productEvaluationId,processStoryId:productEvaluationActivityContext.processStoryId,activityId:productEvaluationActivityContext.activityId,excludeFlag:productEvaluationActivityContext.excludeFlag,organizationId:productEvaluationActivityContext.organizationId,lastUpdatedStamp:productEvaluationActivityContext.lastUpdatedStamp]"/></else-if></if></iterate><if condition="copyEvaluationResponses"><entity-find entity-name="coarchy.product.ProductEvaluationResponse" list="productEvaluationResponseList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><iterate list="productEvaluationResponseList" entry="productEvaluationResponse"><if condition="copyEvaluations == 'copy'"><then><service-call name="create#coarchy.product.ProductEvaluationResponse" in-map="productEvaluationResponse + [productEvaluationResponseId:null, productEvaluationId:productEvaluationIdMap[productEvaluationResponse.productEvaluationId], activityId:productEvaluationResponse.activityId?activityIdMap[productEvaluationResponse.activityId]:null, statementId:productEvaluationResponse.statementId?valueStatementIdMap[productEvaluationResponse.statementId]:null, organizationId:newOrganization.partyId]" out-map="[productEvaluationResponseId:productEvaluationResponseContext.productEvaluationResponseId,productEvaluationId:productEvaluationResponseContext.productEvaluationId,statementId:productEvaluationResponseContext.statementId,activityId:productEvaluationResponseContext.activityId,evaluationByEnumId:productEvaluationResponseContext.evaluationByEnumId,implementationStatusEnumId:productEvaluationResponseContext.implementationStatusEnumId,rating:productEvaluationResponseContext.rating,comments:productEvaluationResponseContext.comments,lastEditedByUserId:productEvaluationResponseContext.lastEditedByUserId,organizationId:productEvaluationResponseContext.organizationId,lastUpdatedStamp:productEvaluationResponseContext.lastUpdatedStamp]"/></then><else-if condition="copyEvaluations == 'move'"><service-call name="update#coarchy.product.ProductEvaluationResponse" in-map="[productEvaluationResponseId:productEvaluationResponse.productEvaluationResponseId, productEvaluationId:productEvaluationIdMap[productEvaluationResponse.productEvaluationId],activityId:productEvaluationResponse.activityId?activityIdMap[productEvaluationResponse.activityId]:null, statementId:productEvaluationResponse.statementId?valueStatementIdMap[productEvaluationResponse.statementId]:null, organizationId:newOrganization.partyId]"/></else-if></if></iterate></if><if condition="copyEvaluationVendors"><entity-find entity-name="coarchy.product.ProductEvaluationParty" list="productEvaluationPartyList"><econdition field-name="organizationId" from="oldOrganization.partyId"/></entity-find><set field="vendorPartyIdSet" from="new TreeSet(productEvaluationPartyList*.partyId)"/><iterate list="productEvaluationPartyList" entry="productEvaluationVendor"><if condition="copyEvaluations == 'copy'"><then><service-call name="create#coarchy.product.ProductEvaluationParty" in-map="productEvaluationVendor + [productEvaluationId:productEvaluationIdMap[productEvaluationVendor.productEvaluationId], organizationId:newOrganization.partyId]" out-map="[productEvaluationId:productEvaluationPartyContext.productEvaluationId,partyId:productEvaluationPartyContext.partyId,roleTypeId:productEvaluationPartyContext.roleTypeId,fromDate:productEvaluationPartyContext.fromDate,thruDate:productEvaluationPartyContext.thruDate,statusId:productEvaluationPartyContext.statusId,organizationId:productEvaluationPartyContext.organizationId,lastUpdatedStamp:productEvaluationPartyContext.lastUpdatedStamp]"/></then><else-if condition="copyEvaluations == 'move'"><service-call name="update#coarchy.product.ProductEvaluationParty" in-map="[productEvaluationId:productEvaluationVendor.productEvaluationId,partyId:productEvaluationVendor.partyId,roleTypeId:productEvaluationVendor.roleTypeId,fromDate:productEvaluationVendor.fromDate, organizationId:newOrganization.partyId]" out-map="[productEvaluationId:productEvaluationPartyContext.productEvaluationId,partyId:productEvaluationPartyContext.partyId,roleTypeId:productEvaluationPartyContext.roleTypeId,fromDate:productEvaluationPartyContext.fromDate,thruDate:productEvaluationPartyContext.thruDate,statusId:productEvaluationPartyContext.statusId,organizationId:productEvaluationPartyContext.organizationId,lastUpdatedStamp:productEvaluationPartyContext.lastUpdatedStamp]"/></else-if></if></iterate><iterate list="vendorPartyIdSet" entry="vendorPartyId"><service-call name="create#mantle.party.PartyRelationship" in-map="[relationshipTypeEnumId:'PrtVendorRepresentative',                                 fromPartyId:vendorPartyId,toRoleTypeId:'VendorRepresentative',toPartyId:newOrganization.partyId,fromDate:ec.user.nowTimestamp]"/></iterate></if></if></if><message type="success"><![CDATA[${ec.resource.expand('CoarchyOrgCreateSuccess', null)}]]></message></actions></service>