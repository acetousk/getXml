<!--Service Location org.moqui.impl.SystemMessageServices.receive#IncomingSystemMessage--><service verb="receive" noun="IncomingSystemMessage"><in-parameters><parameter name="systemMessageTypeId" required="true" entity-name="moqui.service.message.SystemMessage" field-name="systemMessageTypeId"/><parameter name="messageText" required="true" entity-name="moqui.service.message.SystemMessage" field-name="messageText"/><parameter name="systemMessageRemoteId" entity-name="moqui.service.message.SystemMessage" field-name="systemMessageRemoteId"/><parameter name="remoteMessageId" entity-name="moqui.service.message.SystemMessage" field-name="remoteMessageId"/></in-parameters><out-parameters><parameter name="systemMessageIdList" type="List"><parameter name="systemMessageId" entity-name="moqui.service.message.SystemMessage" field-name="systemMessageId"/></parameter></out-parameters><actions><entity-find-one entity-name="moqui.service.message.SystemMessageType" value-field="systemMessageType"/><if condition="systemMessageType == null"><return error="true" message="Message type ${systemMessageTypeId} not valid"/></if><if condition="systemMessageType.receiveServiceName &&                     systemMessageType.receiveServiceName != 'org.moqui.impl.SystemMessageServices.receive#IncomingSystemMessage'"><then><service-call name="${systemMessageType.receiveServiceName}" out-map="context" transaction="force-new" in-map="context"/></then><else><service-call name="create#moqui.service.message.SystemMessage" out-map="[systemMessageId:context.systemMessageId,systemMessageTypeId:context.systemMessageTypeId,systemMessageRemoteId:context.systemMessageRemoteId,statusId:context.statusId,isOutgoing:context.isOutgoing,initDate:context.initDate,processedDate:context.processedDate,lastAttemptDate:context.lastAttemptDate,failCount:context.failCount,parentMessageId:context.parentMessageId,ackMessageId:context.ackMessageId,remoteMessageId:context.remoteMessageId,messageText:context.messageText,senderId:context.senderId,receiverId:context.receiverId,messageId:context.messageId,messageDate:context.messageDate,docType:context.docType,docSubType:context.docSubType,docControl:context.docControl,docSubControl:context.docSubControl,docVersion:context.docVersion,triggerVisitId:context.triggerVisitId,invoiceId:context.invoiceId,paymentMethodFileId:context.paymentMethodFileId,orderId:context.orderId,orderPartSeqId:context.orderPartSeqId,orderRevision:context.orderRevision,returnId:context.returnId,shipmentId:context.shipmentId,lastUpdatedStamp:context.lastUpdatedStamp]" transaction="force-new" in-map="context + [statusId:'SmsgReceived', isOutgoing:'N', initDate:ec.user.nowTimestamp]"/><set field="systemMessageIdList" from="[systemMessageId]"/></else></if><iterate list="systemMessageIdList" entry="systemMessageId"><service-call name="org.moqui.impl.SystemMessageServices.consume#ReceivedSystemMessage" in-map="[systemMessageId:systemMessageId, allowError:false]" async="true"/></iterate></actions></service>