<!--Service Location coarchy.CoarchyServices.create#Checklist--><service verb="create" noun="Checklist"><in-parameters><parameter name="processStoryId" required="true"/><parameter name="name"/><parameter name="organizationId" required="true"/></in-parameters><out-parameters><parameter name="rootWorkEffortId"/><parameter name="taskWorkEffortIdList"/></out-parameters><actions><set field="name" from="name?.trim()"/><if condition="estimatedStartDate != null && estimatedCompletionDate != null &&                            estimatedCompletionDate < estimatedStartDate"><return error="true" message="${ec.resource.expand('CoarchyProcessChecklistInvalidDate', null)}"/></if><entity-find entity-name="coarchy.ProcessStoryActivityDetail" list="processStoryActivityList"><date-filter/><econdition field-name="processStoryId"/><select-field field-name="activityId,condition,action"/><order-by field-name="sequenceNum"/></entity-find><if condition="processStoryActivityList?.size() == 0"><return error="true" message="${ec.resource.expand('CoarchyProcessChecklistActivityRequired', null)}"/></if><if condition="!name"><entity-find-one entity-name="coarchy.ProcessStory" value-field="processStory" auto-field-map="[processStoryId:processStoryId]"/><set field="name" from="processStory.name"/></if><service-call name="create#mantle.work.effort.WorkEffort" out-map="[workEffortId:projectWorkEffort.workEffortId,universalId:projectWorkEffort.universalId,sourceReferenceId:projectWorkEffort.sourceReferenceId,parentWorkEffortId:projectWorkEffort.parentWorkEffortId,rootWorkEffortId:projectWorkEffort.rootWorkEffortId,workEffortTypeEnumId:projectWorkEffort.workEffortTypeEnumId,purposeEnumId:projectWorkEffort.purposeEnumId,visibilityEnumId:projectWorkEffort.visibilityEnumId,resolutionEnumId:projectWorkEffort.resolutionEnumId,workTypeEnumId:projectWorkEffort.workTypeEnumId,ownerPartyId:projectWorkEffort.ownerPartyId,productStoreId:projectWorkEffort.productStoreId,statusId:projectWorkEffort.statusId,statusFlowId:projectWorkEffort.statusFlowId,priority:projectWorkEffort.priority,sendNotificationEmail:projectWorkEffort.sendNotificationEmail,percentComplete:projectWorkEffort.percentComplete,revisionNumber:projectWorkEffort.revisionNumber,workEffortName:projectWorkEffort.workEffortName,description:projectWorkEffort.description,location:projectWorkEffort.location,facilityId:projectWorkEffort.facilityId,infoUrl:projectWorkEffort.infoUrl,shipmentMethodEnumId:projectWorkEffort.shipmentMethodEnumId,estimatedStartDate:projectWorkEffort.estimatedStartDate,estimatedCompletionDate:projectWorkEffort.estimatedCompletionDate,actualStartDate:projectWorkEffort.actualStartDate,actualCompletionDate:projectWorkEffort.actualCompletionDate,recurStartCron:projectWorkEffort.recurStartCron,recurLimit:projectWorkEffort.recurLimit,recurEndDate:projectWorkEffort.recurEndDate,allDayStart:projectWorkEffort.allDayStart,allDayEnd:projectWorkEffort.allDayEnd,estimatedWorkTime:projectWorkEffort.estimatedWorkTime,estimatedSetupTime:projectWorkEffort.estimatedSetupTime,remainingWorkTime:projectWorkEffort.remainingWorkTime,actualWorkTime:projectWorkEffort.actualWorkTime,actualSetupTime:projectWorkEffort.actualSetupTime,totalTimeAllowed:projectWorkEffort.totalTimeAllowed,estimatedWorkDuration:projectWorkEffort.estimatedWorkDuration,actualWorkDuration:projectWorkEffort.actualWorkDuration,actualBreakDuration:projectWorkEffort.actualBreakDuration,timeUomId:projectWorkEffort.timeUomId,actualCost:projectWorkEffort.actualCost,actualClientCost:projectWorkEffort.actualClientCost,totalClientCostAllowed:projectWorkEffort.totalClientCostAllowed,costUomId:projectWorkEffort.costUomId,activityId:projectWorkEffort.activityId,lastUpdatedStamp:projectWorkEffort.lastUpdatedStamp]" in-map="[workEffortName:name,                 ownerPartyId:organizationId,workEffortTypeEnumId:'WetChecklist',actualStartDate:ec.user.nowTimestamp]"/><set field="rootWorkEffortId" from="projectWorkEffort.workEffortId"/><set field="projectFromDate" from="ec.user.nowTimestamp"/><service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:projectWorkEffort.workEffortId, partyId:ec.user.userAccount.partyId,                             roleTypeId:'Owner', fromDate:projectFromDate]"/><set field="taskWorkEffortIdList" from="[]"/><iterate list="processStoryActivityList" entry="processStoryActivity"><if condition="processStoryActivity.action"><entity-find entity-name="coarchy.ActivityActorDetail" list="activityActorList"><econdition field-name="activityId" from="processStoryActivity.activityId"/><order-by field-name="name"/></entity-find><set field="processStoryActivity" from="processStoryActivity.getMap() + [actorNames:activityActorList*.name]"/><set field="taskName" from="ec.resource.template('component://coarchy/template/Activity.html.ftl', '.ftl')"/><if condition="activityActorList.size() == 0"><service-call name="delete#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:projectWorkEffort.workEffortId,                             partyId:ec.user.userAccount.partyId,roleTypeId:'Owner', fromDate:projectFromDate]"/><iterate list="taskWorkEffortIdList" entry="taskWorkEffortId"><service-call name="delete#mantle.work.effort.WorkEffort" in-map="[workEffortId:taskWorkEffortId]"/></iterate><service-call name="delete#mantle.work.effort.WorkEffort" in-map="[workEffortId:projectWorkEffort.workEffortId]"/><return error="true" message="${ec.resource.expand('CoarchyProcessChecklistSubActivityRequired', null, [taskName:taskName, name:name])}"/></if><entity-find entity-name="coarchy.ActorPartyDetail" list="actorPartyList"><econdition field-name="actorId" from="activityActorList*.actorId"/></entity-find><if condition="actorPartyList.size() == 0"><service-call name="delete#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:projectWorkEffort.workEffortId,                             partyId:ec.user.userAccount.partyId,roleTypeId:'Owner', fromDate:projectFromDate]"/><iterate list="taskWorkEffortIdList" entry="taskWorkEffortId"><service-call name="delete#mantle.work.effort.WorkEffort" in-map="[workEffortId:taskWorkEffortId]"/></iterate><service-call name="delete#mantle.work.effort.WorkEffort" in-map="[workEffortId:projectWorkEffort.workEffortId]"/><return error="true" message="${ec.resource.expand('CoarchyProcessChecklistActivityUsersRequired', null, [activityActorList:activityActorList])}"/></if><set field="seqName" value="Project_${projectWorkEffort.workEffortId}"/><set field="workEffortId" value="${projectWorkEffort.workEffortId}-${ec.entity.sequencedIdPrimary(seqName, null, 10)}"/><service-call name="create#mantle.work.effort.WorkEffort" out-map="[workEffortId:taskWorkEffort.workEffortId,universalId:taskWorkEffort.universalId,sourceReferenceId:taskWorkEffort.sourceReferenceId,parentWorkEffortId:taskWorkEffort.parentWorkEffortId,rootWorkEffortId:taskWorkEffort.rootWorkEffortId,workEffortTypeEnumId:taskWorkEffort.workEffortTypeEnumId,purposeEnumId:taskWorkEffort.purposeEnumId,visibilityEnumId:taskWorkEffort.visibilityEnumId,resolutionEnumId:taskWorkEffort.resolutionEnumId,workTypeEnumId:taskWorkEffort.workTypeEnumId,ownerPartyId:taskWorkEffort.ownerPartyId,productStoreId:taskWorkEffort.productStoreId,statusId:taskWorkEffort.statusId,statusFlowId:taskWorkEffort.statusFlowId,priority:taskWorkEffort.priority,sendNotificationEmail:taskWorkEffort.sendNotificationEmail,percentComplete:taskWorkEffort.percentComplete,revisionNumber:taskWorkEffort.revisionNumber,workEffortName:taskWorkEffort.workEffortName,description:taskWorkEffort.description,location:taskWorkEffort.location,facilityId:taskWorkEffort.facilityId,infoUrl:taskWorkEffort.infoUrl,shipmentMethodEnumId:taskWorkEffort.shipmentMethodEnumId,estimatedStartDate:taskWorkEffort.estimatedStartDate,estimatedCompletionDate:taskWorkEffort.estimatedCompletionDate,actualStartDate:taskWorkEffort.actualStartDate,actualCompletionDate:taskWorkEffort.actualCompletionDate,recurStartCron:taskWorkEffort.recurStartCron,recurLimit:taskWorkEffort.recurLimit,recurEndDate:taskWorkEffort.recurEndDate,allDayStart:taskWorkEffort.allDayStart,allDayEnd:taskWorkEffort.allDayEnd,estimatedWorkTime:taskWorkEffort.estimatedWorkTime,estimatedSetupTime:taskWorkEffort.estimatedSetupTime,remainingWorkTime:taskWorkEffort.remainingWorkTime,actualWorkTime:taskWorkEffort.actualWorkTime,actualSetupTime:taskWorkEffort.actualSetupTime,totalTimeAllowed:taskWorkEffort.totalTimeAllowed,estimatedWorkDuration:taskWorkEffort.estimatedWorkDuration,actualWorkDuration:taskWorkEffort.actualWorkDuration,actualBreakDuration:taskWorkEffort.actualBreakDuration,timeUomId:taskWorkEffort.timeUomId,actualCost:taskWorkEffort.actualCost,actualClientCost:taskWorkEffort.actualClientCost,totalClientCostAllowed:taskWorkEffort.totalClientCostAllowed,costUomId:taskWorkEffort.costUomId,activityId:taskWorkEffort.activityId,lastUpdatedStamp:taskWorkEffort.lastUpdatedStamp]" in-map="[                         rootWorkEffortId:projectWorkEffort.workEffortId,workEffortId:workEffortId,workEffortName:taskName,                         ownerPartyId:organizationId,workEffortTypeEnumId:'WetChecklistItem',activityId:processStoryActivity.activityId]"/><script><![CDATA[taskWorkEffortIdList.add(taskWorkEffort.workEffortId)]]></script></if></iterate></actions></service>