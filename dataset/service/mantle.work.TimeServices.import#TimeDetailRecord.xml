<!--Service Location mantle.work.TimeServices.import#TimeDetailRecord--><service verb="import" noun="TimeDetailRecord"><in-parameters><parameter name="clientPartyId" required="true"/><parameter name="defaultDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="employeeId" required="true"/><parameter name="emplPositionClassId"/><parameter name="rateType" default-value="Standard"/><parameter name="startDateTime"/><parameter name="endDateTime"/><parameter name="hours" type="BigDecimal"/><parameter name="pieceCount" type="BigDecimal"/><parameter name="dateTimeFormat" default-value="MM/dd/yyyy HH:mm:ss"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.party.Party" value-field="party"><field-map field-name="partyId" from="employeeId"/></entity-find-one><if condition="!party"><entity-find-one entity-name="mantle.party.Party" value-field="party"><field-map field-name="pseudoId" from="employeeId"/></entity-find-one></if><if condition="!party"><return error="true" message="Could not find employee with ID ${employeeId}"/></if><if condition="startDateTime"><set field="fromDate" from="ec.l10n.parseTimestamp(startDateTime, dateTimeFormat)"/></if><if condition="endDateTime"><set field="thruDate" from="ec.l10n.parseTimestamp(endDateTime, dateTimeFormat)"/></if><if condition="!fromDate && !thruDate"><set field="thruDate" from="defaultDate"/></if><set field="rateTypeEnumId" value="Ratp${rateType}"/><service-call name="mantle.work.TimeServices.store#TimeEntry" in-map="[partyId:party.partyId, rateTypeEnumId:rateTypeEnumId, emplPositionClassId:emplPositionClassId,                         clientPartyId:clientPartyId, fromDate:fromDate, thruDate:thruDate,                         hours:hours, pieceCount:pieceCount]"/></actions></service>