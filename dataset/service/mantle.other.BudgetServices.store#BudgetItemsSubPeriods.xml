<!--Service Location mantle.other.BudgetServices.store#BudgetItemsSubPeriods--><service verb="store" noun="BudgetItemsSubPeriods"><in-parameters><parameter name="budgetId" required="true"/><parameter name="glAccountId" required="true"/><parameter name="amountMain" type="BigDecimal"/><parameter name="amountPer1" type="BigDecimal"/><parameter name="amountPer2" type="BigDecimal"/><parameter name="amountPer3" type="BigDecimal"/><parameter name="amountPer4" type="BigDecimal"/><parameter name="amountPer5" type="BigDecimal"/><parameter name="amountPer6" type="BigDecimal"/><parameter name="amountPer7" type="BigDecimal"/><parameter name="amountPer8" type="BigDecimal"/><parameter name="amountPer9" type="BigDecimal"/><parameter name="amountPer10" type="BigDecimal"/><parameter name="amountPer11" type="BigDecimal"/><parameter name="amountPer12" type="BigDecimal"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.other.budget.Budget" value-field="budget"/><if condition="!budget.timePeriodId || !budget.subTimePeriodTypeId"><return error="true" message="Budget must have a Time Period and a Sub-Period Type"/></if><entity-find entity-name="mantle.other.budget.BudgetItem" list="budgetItemList"><econdition field-name="budgetId"/><econdition field-name="glAccountId"/></entity-find><service-call name="mantle.party.TimeServices.get#DescendantPeriods" out-map="[timePeriodList:subPeriodOut.timePeriodList]" in-map="[parentPeriodId:budget.timePeriodId, timePeriodTypeId:budget.subTimePeriodTypeId, createMissing:true]"/><set field="subTimePeriodList" from="subPeriodOut.timePeriodList"/><set field="subTimePeriodIds" from="new ArrayList(subTimePeriodList*.timePeriodId)"/><set field="specifiedPerTotal" from="0.0"/><set field="specifiedPerCount" from="0"/><iterate list="subTimePeriodIds" entry="subTimePeriodId"><set field="amount" from="context.get('amountPer' + (subTimePeriodId_index + 1))"/><if condition="amount"><set field="specifiedPerTotal" from="specifiedPerTotal + amount"/><set field="specifiedPerCount" from="specifiedPerCount + 1"/></if></iterate><set field="subAmountTotal" from="0.0"/><iterate list="subTimePeriodIds" entry="subTimePeriodId"><set field="budgetItems" from="budgetItemList.findAll({ it.subTimePeriodId == subTimePeriodId })"/><while condition="budgetItems.size() > 1"><set field="delBudgetItem" from="budgetItems.remove(0)"/><entity-delete value-field="delBudgetItem"/></while><set field="budgetItem" from="budgetItems ? budgetItems.get(0) : null"/><set field="budgetItemSeqId" from="budgetItem?.budgetItemSeqId"/><set field="amount" from="context.get('amountPer' + (subTimePeriodId_index + 1))"/><if condition="amount == null && amountMain && amountMain > specifiedPerTotal"><set field="amount" from="(amountMain - specifiedPerTotal) / (subTimePeriodIds.size() - specifiedPerCount)"/></if><if condition="amount != null"><then><set field="subAmountTotal" from="subAmountTotal + amount"/><if condition="budgetItem != null"><then><set field="budgetItem.amount" from="amount"/><entity-update value-field="budgetItem"/></then><else><service-call name="create#mantle.other.budget.BudgetItem" in-map="context"/></else></if></then><else-if condition="budgetItemSeqId"><service-call name="delete#mantle.other.budget.BudgetItem" in-map="context"/></else-if></if></iterate><set field="subTimePeriodId" from="null"/><set field="budgetItems" from="budgetItemList.findAll({ it.subTimePeriodId == null })"/><while condition="budgetItems.size() > 1"><set field="delBudgetItem" from="budgetItems.remove(0)"/><entity-delete value-field="delBudgetItem"/></while><set field="budgetItem" from="budgetItems ? budgetItems.get(0) : null"/><set field="budgetItemSeqId" from="budgetItem?.budgetItemSeqId"/><set field="amountMain" from="amountMain ?: subAmountTotal ?: null"/><if condition="amountMain != null"><then><set field="amount" from="amountMain"/><if condition="budgetItem != null"><then><set field="budgetItem.amount" from="amount"/><entity-update value-field="budgetItem"/></then><else><service-call name="create#mantle.other.budget.BudgetItem" in-map="context"/></else></if></then><else-if condition="budgetItemSeqId"><service-call name="delete#mantle.other.budget.BudgetItem" in-map="context"/></else-if></if></actions></service>