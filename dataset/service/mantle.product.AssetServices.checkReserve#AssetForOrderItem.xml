<!--Service Location mantle.product.AssetServices.checkReserve#AssetForOrderItem--><service verb="checkReserve" noun="AssetForOrderItem"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderItemSeqId" required="true"/><parameter name="resetReservations" type="Boolean" default="true"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"/><if condition="orderItem == null"><return error="true" message="Order Item ${orderId}:${orderItemSeqId} not found"/></if><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><if condition="orderHeader == null"><return error="true" message="Order ${orderId} not found"/></if><entity-find-related-one value-field="orderItem" relationship-name="mantle.order.OrderPart" to-value-field="orderPart"/><entity-find entity-name="mantle.product.issuance.AssetReservation" list="existingResList"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/></entity-find><if condition="!existingResList"><set field="reservationAutoEnumId" from="orderPart.reservationAutoEnumId ?: productStore?.reservationAutoEnumId ?: 'AsResAutoPlaced'"/><if condition="reservationAutoEnumId == 'AsResAutoNone'"><return/></if><if condition="reservationAutoEnumId == 'AsResAutoApproved'"><then><set field="resStatusList" from="['OrderApproved', 'OrderSent']"/></then><else><set field="resStatusList" from="['OrderPlaced', 'OrderProcessing', 'OrderApproved', 'OrderSent', 'OrderHold']"/></else></if><if condition="!(orderHeader.statusId in resStatusList) || !(orderPart.statusId in resStatusList)"><return/></if></if><service-call name="mantle.product.AssetServices.reserve#AssetForOrderItem" in-map="context"/></actions></service>