<!--Service Location mantle.party.TimeServices.delete#TimePeriod--><service verb="delete" noun="TimePeriod"><in-parameters><parameter name="timePeriodId" required="true" entity-name="mantle.party.time.TimePeriod" field-name="timePeriodId"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod"/><if condition="timePeriod.isClosed == 'Y'"><return type="danger" message="Period ${timePeriod.periodName} is closed, cannot delete"/></if><entity-find entity-name="mantle.party.time.TimePeriod" list="nextTimePeriodList"><econdition field-name="previousPeriodId" from="timePeriodId"/></entity-find><if condition="nextTimePeriodList"><return type="danger" message="Period ${timePeriod.periodName} has a next period, cannot delete"/></if><entity-find entity-name="mantle.party.time.TimePeriod" list="childTimePeriodList"><econdition field-name="parentPeriodId" from="timePeriodId"/></entity-find><if condition="childTimePeriodList"><return type="danger" message="Period ${timePeriod.periodName} has child periods, cannot delete"/></if><set field="timePeriodType" from="timePeriod.type"/><set field="fromTimestamp" from="ec.l10n.parseTimestamp("${fromDate} 00:00:00.000", '')"/><set field="thruTimestamp" from="ec.l10n.parseTimestamp("${thruDate} 23:59:59.999", '')"/><if condition="timePeriodType?.periodPurposeEnumId == 'Payroll'"><entity-find entity-name="mantle.work.time.TimeEntry" list="timeEntryList" limit="1"><econdition field-name="clientPartyId" from="timePeriod.partyId"/><econdition field-name="fromDate" operator="greater-equals" from="fromTimestamp"/><econdition field-name="fromDate" operator="less-equals" from="thruTimestamp"/></entity-find><if condition="timeEntryList"><return type="danger" message="Payroll Period ${timePeriod.periodName} has time entries, cannot delete"/></if></if><service-call name="delete#mantle.party.time.TimePeriod" in-map="[timePeriodId:timePeriodId]"/></actions></service>