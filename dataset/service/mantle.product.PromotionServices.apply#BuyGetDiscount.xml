<!--Service Location mantle.product.PromotionServices.apply#BuyGetDiscount--><service verb="apply" noun="BuyGetDiscount"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderPartSeqId" required="true"/><parameter name="storePromotionId" required="true"/><parameter name="promoCodeId"/><parameter name="useLimit" type="BigDecimal"/><parameter name="itemDescription"/><parameter name="buyQuantity" type="BigDecimal" required="true"><description><![CDATA[Required. Quantity to buy to qualify for the discount but that does not get the discount applied.]]></description></parameter><parameter name="getQuantity" type="BigDecimal" required="true"><description><![CDATA[Required. Quantity that will receive the discount (must have at least Buy + Get in cart to apply).]]></description></parameter><parameter name="discountPercent" type="BigDecimal" required="true"><description><![CDATA[Required. Discount percentage such as 50 for half off, 100 for free; applies to Get quantity only.]]></description></parameter><parameter name="listDiffPercent" type="BigDecimal"><description><![CDATA[Optional. Don't apply promotion if order item unit amount is less than list price by this percentage.]]></description></parameter><parameter name="itemsWithPromo" type="Boolean" default="false"><description><![CDATA[If true apply to product item quantities that already have another promotion (defaults to false)]]></description></parameter><parameter name="includeNonConsumer" type="Boolean" default="false"><description><![CDATA[If true apply when customer has a classification other than Consumer (defaults to false)]]></description></parameter></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/><set field="customerPartyId" from="orderPart?.customerPartyId"/><if condition="customerPartyId && !includeNonConsumer"><entity-find entity-name="mantle.party.PartyClassificationAndAppl" list="classApplList"><date-filter/><econdition field-name="partyId" from="customerPartyId"/><econdition field-name="classificationTypeEnumId" value="PcltCustomer"/></entity-find><iterate list="classApplList" entry="classAppl"><if condition="classAppl.partyClassificationId != 'CustConsumer'"><return/></if></iterate></if><entity-find entity-name="mantle.product.store.ProductStorePromoProduct" list="psppList" cache="true"><econdition field-name="storePromotionId"/></entity-find><set field="includeProductIdSet" from="new HashSet()"/><set field="excludeProductIdSet" from="new HashSet()"/><iterate list="psppList" entry="pspp"><if condition="pspp.excludeProduct == 'Y'"><then><script><![CDATA[excludeProductIdSet.add(pspp.productId)]]></script></then><else><script><![CDATA[includeProductIdSet.add(pspp.productId)]]></script></else></if></iterate><entity-find-one entity-name="mantle.product.store.ProductStorePromoCode" value-field="storePromoCode"/><set field="useLimitRemaining" from="useLimit ?: 1000.0"/><set field="buyGetQuantity" from="buyQuantity + getQuantity"/><if condition="buyGetQuantity <= 0.0"><log level="error" message="Promotion ${storePromotionId} has buyQuantity ${buyQuantity} getQuantity ${getQuantity} with total <= 0.0 which is invalid, not applying promotion"/><return/></if><entity-find entity-name="mantle.order.OrderItem" list="prodItemList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/><econdition field-name="itemTypeEnumId" value="ItemProduct"/><econdition field-name="productId" operator="in" from="includeProductIdSet" ignore-if-empty="true"/><econdition field-name="productId" operator="not-in" from="excludeProductIdSet" ignore-if-empty="true"/></entity-find><iterate list="prodItemList" entry="orderItem"><service-call name="mantle.order.OrderServices.get#OrderItemTotal" out-map-add-to-existing="false" in-map="[orderItem:orderItem, getChildrenTotals:true]" out-map="[combinedAmount:orderItemTotalOut.combinedAmount,combinedQuantity:orderItemTotalOut.combinedQuantity,itemTotal:orderItemTotalOut.itemTotal,childrenTotal:orderItemTotalOut.childrenTotal,itemPlusChildrenTotal:orderItemTotalOut.itemPlusChildrenTotal,childItemCount:orderItemTotalOut.childItemCount,hasPromo:orderItemTotalOut.hasPromo,promoQuantityUsed:orderItemTotalOut.promoQuantityUsed,childOrderItemList:orderItemTotalOut.childOrderItemList]"/><if condition="!orderItemTotalOut.combinedAmount"><continue/></if><if condition="listDiffPercent != null"><set field="unitAmount" from="orderItem.unitAmount ?: 0.0"/><set field="listDiffRatio" from="((BigDecimal) listDiffPercent).divide(100.0, 4, BigDecimal.ROUND_HALF_UP)"/><service-call name="mantle.product.PriceServices.get#OrderProductPrice" out-map="[price:itemPriceOut.price,productPriceId:itemPriceOut.productPriceId,listPrice:itemPriceOut.listPrice,listProductPriceId:itemPriceOut.listProductPriceId,priceUomId:itemPriceOut.priceUomId]" in-map="[productId:orderItem.productId, orderId:orderId, orderPartSeqId:orderItem.orderPartSeqId]"/><if condition="itemPriceOut.listPrice"><then><set field="minApplyPrice" from="((BigDecimal) itemPriceOut.listPrice).multiply(BigDecimal.ONE.minus(listDiffRatio))"/><if condition="unitAmount < minApplyPrice"><log message="Not applying store promo ${storePromotionId} to order ${orderId} item ${orderItem.orderItemSeqId} product ${orderItem.productId}, unitAmount ${unitAmount} less than ${minApplyPrice} which is list ${itemPriceOut.listPrice} minus ${listDiffPercent} percent"/><continue/></if></then><else><log level="warn" message="Product ${orderItem.productId} has no List Price, ignoring listDiffPercent for store promo ${storePromotionId} order ${orderId}"/></else></if></if><if condition="itemsWithPromo"><then><set field="eligibleQuantity" from="orderItem.quantity != null ? orderItem.quantity : 1.0"/></then><else><set field="eligibleQuantity" from="(orderItem.quantity != null ? orderItem.quantity : 1.0) - orderItemTotalOut.promoQuantityUsed"/></else></if><set field="timesToApply" from="(eligibleQuantity / buyGetQuantity).setScale(0, BigDecimal.ROUND_DOWN)"/><if condition="timesToApply > useLimitRemaining"><set field="timesToApply" from="useLimitRemaining"/></if><set field="useLimitRemaining" from="useLimitRemaining - timesToApply"/><set field="itemQuantity" from="timesToApply * getQuantity"/><set field="promoQuantity" from="timesToApply * buyGetQuantity"/><if condition="timesToApply == 0"><continue/></if><set field="discountAmount" from="-(orderItemTotalOut.combinedAmount*(discountPercent/100.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><service-call name="create#mantle.order.OrderItem" out-map="[orderId:createItemOut.orderId,orderItemSeqId:createItemOut.orderItemSeqId,orderPartSeqId:createItemOut.orderPartSeqId,parentItemSeqId:createItemOut.parentItemSeqId,itemTypeEnumId:createItemOut.itemTypeEnumId,productId:createItemOut.productId,productFeatureId:createItemOut.productFeatureId,otherPartyProductId:createItemOut.otherPartyProductId,productParameterSetId:createItemOut.productParameterSetId,itemDescription:createItemOut.itemDescription,comments:createItemOut.comments,quantity:createItemOut.quantity,quantityUomId:createItemOut.quantityUomId,quantityCancelled:createItemOut.quantityCancelled,selectedAmount:createItemOut.selectedAmount,priority:createItemOut.priority,requiredByDate:createItemOut.requiredByDate,unitAmount:createItemOut.unitAmount,unitListPrice:createItemOut.unitListPrice,isModifiedPrice:createItemOut.isModifiedPrice,standardCost:createItemOut.standardCost,externalItemSeqId:createItemOut.externalItemSeqId,fromAssetId:createItemOut.fromAssetId,productPriceId:createItemOut.productPriceId,productCategoryId:createItemOut.productCategoryId,isPromo:createItemOut.isPromo,promoQuantity:createItemOut.promoQuantity,promoTimesUsed:createItemOut.promoTimesUsed,storePromotionId:createItemOut.storePromotionId,promoCodeId:createItemOut.promoCodeId,promoCodeText:createItemOut.promoCodeText,subscriptionId:createItemOut.subscriptionId,finAccountId:createItemOut.finAccountId,finAccountTransId:createItemOut.finAccountTransId,overrideGlAccountId:createItemOut.overrideGlAccountId,salesOpportunityId:createItemOut.salesOpportunityId,sourceReferenceId:createItemOut.sourceReferenceId,sourcePercentage:createItemOut.sourcePercentage,amountAlreadyIncluded:createItemOut.amountAlreadyIncluded,exemptAmount:createItemOut.exemptAmount,customerReferenceId:createItemOut.customerReferenceId,taxAuthorityId:createItemOut.taxAuthorityId,lastUpdatedStamp:createItemOut.lastUpdatedStamp]" in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, parentItemSeqId:orderItem.orderItemSeqId,                              itemTypeEnumId:'ItemDiscount', quantity:itemQuantity, unitAmount:discountAmount, productId:orderItem.productId,                              sourcePercentage:discountPercent, storePromotionId:storePromotionId,                              promoCodeId:promoCodeId, promoCodeText:storePromoCode?.promoCode,                              isPromo:'Y', promoQuantity:promoQuantity, promoTimesUsed:timesToApply,                              itemDescription:ec.resource.expand(itemDescription, '')?:('Buy ' + buyQuantity + ' Get ' + getQuantity + ' at ' + discountPercent + '% off')]"/></iterate></actions></service>