<!--Service Location mantle.order.ReturnServices.add#ReturnToShipment--><service verb="add" noun="ReturnToShipment"><in-parameters><parameter name="returnId" required="true"/><parameter name="shipmentId" required="true"/></in-parameters><out-parameters/><actions><entity-find entity-name="mantle.order.return.ReturnItem" list="returnItemList"><econdition field-name="returnId"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="allItemSisList"><econdition field-name="returnId"/></entity-find><entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true"><econdition field-name="enumGroupEnumId" value="EngItemsProduct"/></entity-find><set field="productItemTypes" from="productItemTypeEgms*.enumId"/><iterate list="returnItemList" entry="returnItem"><if condition="returnItem.productId"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="returnItem.productId"/></entity-find-one><set field="isProductItemType" from="returnItem.itemTypeEnumId in productItemTypes"/><set field="isShippable" from="isProductItemType && product != null ? product.productTypeEnumId in ['PtAsset', 'PtDigitalAsset', 'PtAssetUse', 'PtPickAssembly'] : false"/><if condition="isShippable"><set field="itemSisQuantity" from="allItemSisList.findAll({ it.returnItemSeqId == returnItem.returnItemSeqId })*.quantity.sum()"/><set field="quantityToReceive" from="(returnItem.returnQuantity?:0.0) - (itemSisQuantity?:0.0)"/><if condition="quantityToReceive == 0.0"><continue/></if><entity-find-one entity-name="mantle.shipment.ShipmentItem" value-field="shipmentItem"><field-map field-name="shipmentId"/><field-map field-name="productId" from="returnItem.productId"/></entity-find-one><if condition="shipmentItem"><then><set field="shipmentItem.quantity" from="shipmentItem.quantity + quantityToReceive"/><entity-update value-field="shipmentItem"/></then><else><service-call name="create#mantle.shipment.ShipmentItem" in-map="[shipmentId:shipmentId, productId:returnItem.productId, quantity:quantityToReceive]"/></else></if><service-call name="create#mantle.shipment.ShipmentItemSource" in-map="[shipmentId:shipmentId, productId:returnItem.productId, statusId:'SisPending',                                     quantity:quantityToReceive, quantityNotHandled:quantityToReceive,                                     returnId:returnItem.returnId, returnItemSeqId:returnItem.returnItemSeqId]"/><set field="quantityNotBilled" from="quantityToReceive"/><entity-find entity-name="mantle.order.return.ReturnItemBilling" list="returnItemBillingList"><econdition field-name="returnId"/><econdition field-name="returnItemSeqId" from="returnItem.returnItemSeqId"/></entity-find><iterate list="returnItemBillingList" entry="returnItemBilling"><if condition="!returnItemBilling.shipmentId && quantityNotBilled >= returnItemBilling.quantity"><set field="returnItemBilling.shipmentId" from="shipmentId"/><entity-update value-field="returnItemBilling"/><set field="quantityNotBilled" from="quantityNotBilled - returnItemBilling.quantity"/></if></iterate></if></if></iterate></actions></service>