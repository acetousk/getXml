<!--Service Location mantle.account.InvoiceServices.create#SalesShipmentInvoices--><service verb="create" noun="SalesShipmentInvoices"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="statusId"><description><![CDATA[If specified after create set to this statusId (always created
                initially in InvoiceInProcess, so there must be a transition to specified status).]]></description></parameter><parameter name="invoiceDate" type="Timestamp"><description><![CDATA[Defaults to Shipment packedDate or now.]]></description></parameter><parameter name="handleIssuances" type="Boolean" default="true"/><parameter name="applyPayments" type="Boolean" default="true"/><parameter name="handleReceipts" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="invoiceIdByOrderPartIdMap" type="Map"/></out-parameters><actions><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/><if condition="shipment == null"><return error="true" message="Shipment not found with ID ${shipmentId}"/></if><set field="invoiceIdByOrderPartIdMap" from="[:]"/><set field="invoiceDate" from="invoiceDate ?: shipment.packedDate ?: ec.user.nowTimestamp"/><entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true"><econdition field-name="enumGroupEnumId" value="EngItemsProduct"/></entity-find><set field="productItemTypes" from="productItemTypeEgms*.enumId"/><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="shipmentItemSourceList" for-update="true"><econdition field-name="shipmentId"/><econdition field-name="orderId" operator="not-equals" from="null"/></entity-find><order-map-list list="shipmentItemSourceList"><order-by field-name="orderId"/><order-by field-name="orderItemSeqId"/></order-map-list><set field="orderHeaderMap" from="[:]"/><iterate list="shipmentItemSourceList" entry="shipmentItemSource"><set field="orderItem" from="shipmentItemSource.'mantle.order.OrderItem'"/><if condition="orderItem == null"><continue/></if><set field="orderItemQty" from="(orderItem.quantity != null ? orderItem.quantity : 1.0) * (orderItem.selectedAmount ?: 1.0)"/><set field="billingList" from="orderItem.billings"/><set field="billedQuantity" from="billingList*.quantity.sum()"/><set field="allItemSources" from="orderItem.shipmentSources"/><set field="allShippedQuantity" from="allItemSources*.quantity.sum()"/><set field="shippedNotBilled" from="(allShippedQuantity ?: 0.0) - (billedQuantity ?: 0.0)"/><set field="quantityToBill" from="shipmentItemSource.quantity > shippedNotBilled ? shippedNotBilled : shipmentItemSource.quantity"/><if condition="quantityToBill == 0.0"><continue/></if><set field="orderHeader" from="orderHeaderMap.get(shipmentItemSource.orderId)"/><if condition="orderHeader == null"><set field="orderHeader" from="shipmentItemSource.'mantle.order.OrderHeader'"/><script><![CDATA[orderHeaderMap.put(shipmentItemSource.orderId, orderHeader)]]></script></if><set field="invoiceId" from="invoiceIdByOrderPartIdMap.get(orderItem.orderId + ':' + orderItem.orderPartSeqId)"/><if condition="!invoiceId"><set field="orderPart" from="orderItem.'mantle.order.OrderPart'"/><if condition="orderPart"><set field="toPartyId" from="orderPart.customerPartyId"/><entity-find entity-name="mantle.order.OrderPartParty" list="billToList"><econdition field-name="orderId" from="orderPart.orderId"/><econdition field-name="orderPartSeqId" from="orderPart.orderPartSeqId"/><econdition field-name="roleTypeId" value="CustomerBillTo"/></entity-find><if condition="billToList"><set field="toPartyId" from="billToList[0].partyId"/></if><set field="description" value="For Order ${orderItem.orderId} part ${orderItem.orderPartSeqId} and Shipment ${shipmentId}"/><service-call name="mantle.account.InvoiceServices.create#Invoice" out-map="[invoiceId:invOut.invoiceId]" in-map="[invoiceTypeEnumId:'InvoiceSales', fromPartyId:orderPart.vendorPartyId, toPartyId:toPartyId,                                     invoiceDate:invoiceDate, currencyUomId:orderHeader.currencyUomId, description:description,                                     otherPartyOrderId:orderPart.otherPartyOrderId, settlementTermId:orderPart.settlementTermId,                                     productStoreId:orderHeader.productStoreId, systemMessageRemoteId:orderHeader.systemMessageRemoteId]"/><set field="invoiceId" from="invOut.invoiceId"/><script><![CDATA[invoiceIdByOrderPartIdMap.put(orderItem.orderId + ':' + orderItem.orderPartSeqId, invoiceId)]]></script><set field="partPayments" from="orderPart.payments"/><iterate list="partPayments" entry="partPayment"><if condition="partPayment.forInvoiceId || partPayment.statusId in ['PmntCancelled', 'PmntVoid', 'PmntDeclined'] ||                                     partPayment.fromPartyId != toPartyId || partPayment.toPartyId != orderPart.vendorPartyId"><continue/></if><set field="partPayment.forInvoiceId" from="invoiceId"/><entity-update value-field="partPayment"/></iterate></if></if><if condition="invoiceId"><set field="parentInvoiceItemSeqId" from="null"/><set field="quantityNotBilled" from="quantityToBill"/><if condition="handleIssuances"><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="assetIssuanceList" for-update="true"><econdition field-name="orderId" from="orderItem.orderId"/><econdition field-name="orderItemSeqId" from="orderItem.orderItemSeqId"/><econdition field-name="shipmentId"/><order-by field-name="orderItemSeqId"/></entity-find><iterate list="assetIssuanceList" entry="assetIssuance"><set field="issuanceQuantityToBill" from="quantityNotBilled > assetIssuance.quantity ?                                     assetIssuance.quantity : quantityNotBilled"/><if condition="issuanceQuantityToBill <= 0.0"><continue/></if><service-call name="create#mantle.account.invoice.InvoiceItem" out-map="[invoiceId:iiOut.invoiceId,invoiceItemSeqId:iiOut.invoiceItemSeqId,parentItemSeqId:iiOut.parentItemSeqId,itemTypeEnumId:iiOut.itemTypeEnumId,overrideGlAccountId:iiOut.overrideGlAccountId,assetId:iiOut.assetId,productId:iiOut.productId,otherPartyProductId:iiOut.otherPartyProductId,parentInvoiceId:iiOut.parentInvoiceId,parentInvoiceItemSeqId:iiOut.parentInvoiceItemSeqId,taxableFlag:iiOut.taxableFlag,quantity:iiOut.quantity,quantityUomId:iiOut.quantityUomId,amount:iiOut.amount,description:iiOut.description,itemDate:iiOut.itemDate,isAdjustment:iiOut.isAdjustment,salesOpportunityId:iiOut.salesOpportunityId,taxAuthorityId:iiOut.taxAuthorityId,payrollAdjustmentId:iiOut.payrollAdjustmentId,finAccountId:iiOut.finAccountId,finAccountTransId:iiOut.finAccountTransId,billThruVendorName:iiOut.billThruVendorName,billThruVendorRef:iiOut.billThruVendorRef,lastUpdatedStamp:iiOut.lastUpdatedStamp]" in-map="[invoiceId:invoiceId, itemTypeEnumId:orderItem.itemTypeEnumId ?: 'ItemProduct',                                         amount:orderItem.unitAmount, description:orderItem.itemDescription,                                         quantity:issuanceQuantityToBill, assetId:assetIssuance.assetId,                                         quantityUomId:orderItem.quantityUomId, productId:orderItem.productId,                                         otherPartyProductId:orderItem.otherPartyProductId,                                         finAccountId:orderItem.finAccountId, finAccountTransId:orderItem.finAccountTransId]"/><if condition="!parentInvoiceItemSeqId"><set field="parentInvoiceItemSeqId" from="iiOut.invoiceItemSeqId"/></if><service-call name="create#mantle.order.OrderItemBilling" in-map="[orderId:orderItem.orderId, orderItemSeqId:orderItem.orderItemSeqId,                                         invoiceId:invoiceId, invoiceItemSeqId:iiOut.invoiceItemSeqId,                                         assetIssuanceId:assetIssuance.assetIssuanceId, shipmentId:shipmentId,                                         amount:orderItem.unitAmount, quantity:issuanceQuantityToBill]"/><set field="assetIssuance.invoiceId" from="invoiceId"/><set field="assetIssuance.invoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><entity-update value-field="assetIssuance"/><if condition="invoiceDate.toString().substring(0, 10) != assetIssuance.issuedDate.toString().substring(0, 10)"><log message="AssetIssuance ${assetIssuance.assetIssuanceId} issuedDate ${assetIssuance.issuedDate.toString().substring(0, 10)} on different day from invoiceDate ${invoiceDate.toString().substring(0, 10)}, updating to invoiceDate"/><service-call name="mantle.product.AssetServices.update#AssetIssuedDate" in-map="[assetIssuanceId:assetIssuance.assetIssuanceId, issuedDate:invoiceDate]"/></if><if condition="shipmentItemSource.invoiceItemSeqId"><then><set field="newShipmentItemSource" from="shipmentItemSource.cloneValue()"/><set field="newShipmentItemSource.shipmentItemSourceId" from="null"/><entity-sequenced-id-primary value-field="newShipmentItemSource"/><set field="newShipmentItemSource.invoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><set field="newShipmentItemSource.quantity" from="issuanceQuantityToBill"/><entity-create value-field="newShipmentItemSource"/><set field="shipmentItemSource.quantity" from="shipmentItemSource.quantity - issuanceQuantityToBill"/><entity-update value-field="shipmentItemSource"/></then><else><set field="shipmentItemSource.invoiceId" from="invoiceId"/><set field="shipmentItemSource.invoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><entity-update value-field="shipmentItemSource"/></else></if><set field="quantityNotBilled" from="quantityNotBilled - issuanceQuantityToBill"/></iterate></if><if condition="handleReceipts"><entity-find entity-name="mantle.product.receipt.AssetReceipt" list="assetReceiptList" for-update="true"><econdition-object field="[orderId:orderItem.orderId, orderItemSeqId:orderItem.orderItemSeqId, shipmentId:shipmentId]"/><order-by field-name="orderItemSeqId"/></entity-find><iterate list="assetReceiptList" entry="assetReceipt"><set field="receiptQuantityToBill" from="quantityNotBilled > assetReceipt.quantityAccepted ?                                     assetReceipt.quantityAccepted : quantityNotBilled"/><if condition="receiptQuantityToBill <= 0.0"><continue/></if><service-call name="create#mantle.account.invoice.InvoiceItem" out-map="[invoiceId:iiOut.invoiceId,invoiceItemSeqId:iiOut.invoiceItemSeqId,parentItemSeqId:iiOut.parentItemSeqId,itemTypeEnumId:iiOut.itemTypeEnumId,overrideGlAccountId:iiOut.overrideGlAccountId,assetId:iiOut.assetId,productId:iiOut.productId,otherPartyProductId:iiOut.otherPartyProductId,parentInvoiceId:iiOut.parentInvoiceId,parentInvoiceItemSeqId:iiOut.parentInvoiceItemSeqId,taxableFlag:iiOut.taxableFlag,quantity:iiOut.quantity,quantityUomId:iiOut.quantityUomId,amount:iiOut.amount,description:iiOut.description,itemDate:iiOut.itemDate,isAdjustment:iiOut.isAdjustment,salesOpportunityId:iiOut.salesOpportunityId,taxAuthorityId:iiOut.taxAuthorityId,payrollAdjustmentId:iiOut.payrollAdjustmentId,finAccountId:iiOut.finAccountId,finAccountTransId:iiOut.finAccountTransId,billThruVendorName:iiOut.billThruVendorName,billThruVendorRef:iiOut.billThruVendorRef,lastUpdatedStamp:iiOut.lastUpdatedStamp]" in-map="[invoiceId:invoiceId, itemTypeEnumId:orderItem.itemTypeEnumId ?: 'ItemInventory',                                         amount:orderItem.unitAmount, description:orderItem.itemDescription,                                         quantity:receiptQuantityToBill, assetId:assetReceipt.assetId,                                         quantityUomId:orderItem.quantityUomId, productId:orderItem.productId,                                         otherPartyProductId:orderItem.otherPartyProductId,                                         finAccountId:orderItem.finAccountId, finAccountTransId:orderItem.finAccountTransId]"/><if condition="!parentInvoiceItemSeqId"><set field="parentInvoiceItemSeqId" from="iiOut.invoiceItemSeqId"/></if><service-call name="create#mantle.order.OrderItemBilling" in-map="[orderId:orderItem.orderId, orderItemSeqId:orderItem.orderItemSeqId,                                         invoiceId:invoiceId, invoiceItemSeqId:iiOut.invoiceItemSeqId,                                         assetReceiptId:assetReceipt.assetReceiptId, shipmentId:shipmentId,                                         amount:orderItem.unitAmount, quantity:receiptQuantityToBill]"/><set field="assetReceipt.invoiceId" from="invoiceId"/><set field="assetReceipt.invoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><entity-update value-field="assetReceipt"/><if condition="shipmentItemSource.invoiceItemSeqId"><then><set field="newShipmentItemSource" from="shipmentItemSource.cloneValue()"/><set field="newShipmentItemSource.shipmentItemSourceId" from="null"/><entity-sequenced-id-primary value-field="newShipmentItemSource"/><set field="newShipmentItemSource.invoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><set field="newShipmentItemSource.quantity" from="receiptQuantityToBill"/><entity-create value-field="newShipmentItemSource"/><set field="shipmentItemSource.quantity" from="shipmentItemSource.quantity - receiptQuantityToBill"/><entity-update value-field="shipmentItemSource"/></then><else><set field="shipmentItemSource.invoiceId" from="invoiceId"/><set field="shipmentItemSource.invoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><entity-update value-field="shipmentItemSource"/></else></if><set field="quantityNotBilled" from="quantityNotBilled - receiptQuantityToBill"/></iterate></if><if condition="quantityNotBilled > 0"><service-call name="create#mantle.account.invoice.InvoiceItem" out-map="[invoiceId:mainIiOut.invoiceId,invoiceItemSeqId:mainIiOut.invoiceItemSeqId,parentItemSeqId:mainIiOut.parentItemSeqId,itemTypeEnumId:mainIiOut.itemTypeEnumId,overrideGlAccountId:mainIiOut.overrideGlAccountId,assetId:mainIiOut.assetId,productId:mainIiOut.productId,otherPartyProductId:mainIiOut.otherPartyProductId,parentInvoiceId:mainIiOut.parentInvoiceId,parentInvoiceItemSeqId:mainIiOut.parentInvoiceItemSeqId,taxableFlag:mainIiOut.taxableFlag,quantity:mainIiOut.quantity,quantityUomId:mainIiOut.quantityUomId,amount:mainIiOut.amount,description:mainIiOut.description,itemDate:mainIiOut.itemDate,isAdjustment:mainIiOut.isAdjustment,salesOpportunityId:mainIiOut.salesOpportunityId,taxAuthorityId:mainIiOut.taxAuthorityId,payrollAdjustmentId:mainIiOut.payrollAdjustmentId,finAccountId:mainIiOut.finAccountId,finAccountTransId:mainIiOut.finAccountTransId,billThruVendorName:mainIiOut.billThruVendorName,billThruVendorRef:mainIiOut.billThruVendorRef,lastUpdatedStamp:mainIiOut.lastUpdatedStamp]" out-map-add-to-existing="false" in-map="[invoiceId:invoiceId, itemTypeEnumId:orderItem.itemTypeEnumId ?: 'ItemProduct',                                     amount:orderItem.unitAmount, description:orderItem.itemDescription,                                     quantity:quantityNotBilled, quantityUomId:orderItem.quantityUomId,                                     productId:orderItem.productId, otherPartyProductId:orderItem.otherPartyProductId,                                     finAccountId:orderItem.finAccountId, finAccountTransId:orderItem.finAccountTransId]"/><if condition="!parentInvoiceItemSeqId"><set field="parentInvoiceItemSeqId" from="mainIiOut.invoiceItemSeqId"/></if><if condition="shipmentItemSource.invoiceItemSeqId"><then><set field="newShipmentItemSource" from="shipmentItemSource.cloneValue()"/><set field="newShipmentItemSource.shipmentItemSourceId" from="null"/><entity-sequenced-id-primary value-field="newShipmentItemSource"/><set field="newShipmentItemSource.invoiceItemSeqId" from="mainIiOut.invoiceItemSeqId"/><set field="newShipmentItemSource.quantity" from="quantityNotBilled"/><entity-create value-field="newShipmentItemSource"/><set field="shipmentItemSource.quantity" from="shipmentItemSource.quantity - quantityNotBilled"/><entity-update value-field="shipmentItemSource"/></then><else><set field="shipmentItemSource.invoiceId" from="invoiceId"/><set field="shipmentItemSource.invoiceItemSeqId" from="mainIiOut.invoiceItemSeqId"/><entity-update value-field="shipmentItemSource"/></else></if></if><set field="childOrderItemList" from="orderItem.'Child#mantle.order.OrderItem'"/><order-map-list list="childOrderItemList"><order-by field-name="orderItemSeqId"/></order-map-list><iterate list="childOrderItemList" entry="childOrderItem"><if condition="childOrderItem.itemTypeEnumId in productItemTypes"><log message="Not invoicing child item ${childOrderItemList.orderId}:${childOrderItemList.orderItemSeqId}, has product item type ${childOrderItem.itemTypeEnumId}"/><continue/></if><entity-find entity-name="mantle.order.OrderItemBillingTotal" list="childItemBillingList"><econdition field-name="orderId" from="childOrderItem.orderId"/><econdition field-name="orderItemSeqId" from="childOrderItem.orderItemSeqId"/><select-field field-name="quantity,amount"/></entity-find><set field="childBilledQuantity" from="0.0"/><set field="childBilledTotal" from="0.0"/><iterate list="childItemBillingList" entry="childItemBilling"><set field="childInvQuantity" from="childItemBilling.quantity != null ? childItemBilling.quantity : 1.0"/><set field="childBilledQuantity" from="childBilledQuantity + childInvQuantity"/><set field="childBilledTotal" from="childBilledTotal + (childInvQuantity * (childItemBilling.amount ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/></iterate><set field="childQty" from="(childOrderItem.quantity != null ? childOrderItem.quantity : 1.0) * (childOrderItem.selectedAmount ?: 1.0)"/><set field="childQuantityNotBilled" from="childQty - childBilledQuantity"/><set field="childTotal" from="(childQty * (childOrderItem.unitAmount ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><set field="childTotalNotBilled" from="childTotal - childBilledTotal"/><if condition="childTotalNotBilled != 0.0"><set field="childQtyToBill" from="0.0"/><set field="childAmountToBill" from="0.0"/><if condition="childQty == orderItemQty"><then><set field="childQtyToBill" from="quantityToBill"/><set field="childAmountToBill" from="childOrderItem.unitAmount"/></then><else><set field="childQtyToBill" from="1.0"/><if condition="allShippedQuantity >= orderItemQty"><then><set field="childAmountToBill" from="childTotalNotBilled"/></then><else><set field="parentRatio" from="(quantityToBill as BigDecimal).divide(orderItemQty as BigDecimal, 6, BigDecimal.ROUND_HALF_EVEN)"/><set field="childAmountToBill" from="(childTotal * parentRatio).setScale(2, BigDecimal.ROUND_HALF_UP)"/></else></if></else></if><service-call name="create#mantle.account.invoice.InvoiceItem" out-map="[invoiceId:childIiOut.invoiceId,invoiceItemSeqId:childIiOut.invoiceItemSeqId,parentItemSeqId:childIiOut.parentItemSeqId,itemTypeEnumId:childIiOut.itemTypeEnumId,overrideGlAccountId:childIiOut.overrideGlAccountId,assetId:childIiOut.assetId,productId:childIiOut.productId,otherPartyProductId:childIiOut.otherPartyProductId,parentInvoiceId:childIiOut.parentInvoiceId,parentInvoiceItemSeqId:childIiOut.parentInvoiceItemSeqId,taxableFlag:childIiOut.taxableFlag,quantity:childIiOut.quantity,quantityUomId:childIiOut.quantityUomId,amount:childIiOut.amount,description:childIiOut.description,itemDate:childIiOut.itemDate,isAdjustment:childIiOut.isAdjustment,salesOpportunityId:childIiOut.salesOpportunityId,taxAuthorityId:childIiOut.taxAuthorityId,payrollAdjustmentId:childIiOut.payrollAdjustmentId,finAccountId:childIiOut.finAccountId,finAccountTransId:childIiOut.finAccountTransId,billThruVendorName:childIiOut.billThruVendorName,billThruVendorRef:childIiOut.billThruVendorRef,lastUpdatedStamp:childIiOut.lastUpdatedStamp]" in-map="[invoiceId:invoiceId, itemTypeEnumId:(childOrderItem.itemTypeEnumId ?: 'ItemSales'),                                         parentItemSeqId:parentInvoiceItemSeqId, amount:childAmountToBill,                                         productId:(childOrderItem.productId ?: orderItem.productId),                                         description:childOrderItem.itemDescription, quantity:childQtyToBill,                                         quantityUomId:childOrderItem.quantityUomId]"/><service-call name="create#mantle.order.OrderItemBilling" in-map="[orderId:childOrderItem.orderId, orderItemSeqId:childOrderItem.orderItemSeqId,                                         invoiceId:invoiceId, invoiceItemSeqId:childIiOut.invoiceItemSeqId,                                         shipmentId:shipmentId, amount:childAmountToBill, quantity:childQtyToBill]"/></if></iterate></if></iterate><iterate list="invoiceIdByOrderPartIdMap.entrySet()" entry="invoiceIdByOrderIdEntry"><set field="orderAndPartId" from="invoiceIdByOrderIdEntry.key"/><set field="orderId" from="orderAndPartId.substring(0, orderAndPartId.indexOf(':'))"/><set field="orderPartSeqId" from="orderAndPartId.substring(orderAndPartId.indexOf(':') + 1)"/><set field="invoiceId" from="invoiceIdByOrderIdEntry.value"/><set field="orderHeader" from="orderHeaderMap.get(orderId)"/><if condition="orderHeader == null"><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><script><![CDATA[orderHeaderMap.put(orderId, orderHeader)]]></script></if><entity-find entity-name="mantle.order.OrderItem" list="otherOrderItemList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/><econdition field-name="itemTypeEnumId" operator="not-in" from="productItemTypes"/><econdition field-name="parentItemSeqId" from="null"/></entity-find><iterate list="otherOrderItemList" entry="otherOrderItem"><set field="parentInvoiceItemSeqId" from="null"/><set field="otherItemQty" from="(otherOrderItem.quantity != null ? otherOrderItem.quantity : 1.0) * (otherOrderItem.selectedAmount ?: 1.0)"/><set field="otherItemTotal" from="(otherItemQty * (otherOrderItem.unitAmount ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><set field="otherTotalToBill" from="otherItemTotal"/><entity-find entity-name="mantle.order.OrderItemBilling" list="otherItemBillingList"><econdition field-name="orderId" from="otherOrderItem.orderId"/><econdition field-name="orderItemSeqId" from="otherOrderItem.orderItemSeqId"/><econdition field-name="quantity" operator="not-equals" from="0.0"/></entity-find><if condition="!otherItemBillingList"><set field="otherItemQty" from="(otherOrderItem.quantity != null ? otherOrderItem.quantity : 1.0) * (otherOrderItem.selectedAmount ?: 1.0)"/><service-call name="create#mantle.account.invoice.InvoiceItem" out-map="[invoiceId:iiOut.invoiceId,invoiceItemSeqId:iiOut.invoiceItemSeqId,parentItemSeqId:iiOut.parentItemSeqId,itemTypeEnumId:iiOut.itemTypeEnumId,overrideGlAccountId:iiOut.overrideGlAccountId,assetId:iiOut.assetId,productId:iiOut.productId,otherPartyProductId:iiOut.otherPartyProductId,parentInvoiceId:iiOut.parentInvoiceId,parentInvoiceItemSeqId:iiOut.parentInvoiceItemSeqId,taxableFlag:iiOut.taxableFlag,quantity:iiOut.quantity,quantityUomId:iiOut.quantityUomId,amount:iiOut.amount,description:iiOut.description,itemDate:iiOut.itemDate,isAdjustment:iiOut.isAdjustment,salesOpportunityId:iiOut.salesOpportunityId,taxAuthorityId:iiOut.taxAuthorityId,payrollAdjustmentId:iiOut.payrollAdjustmentId,finAccountId:iiOut.finAccountId,finAccountTransId:iiOut.finAccountTransId,billThruVendorName:iiOut.billThruVendorName,billThruVendorRef:iiOut.billThruVendorRef,lastUpdatedStamp:iiOut.lastUpdatedStamp]" in-map="[invoiceId:invoiceId, itemTypeEnumId:otherOrderItem.itemTypeEnumId ?: 'ItemSales',                                     productId:otherOrderItem.productId,                                     amount:otherOrderItem.unitAmount, description:otherOrderItem.itemDescription,                                     quantity:otherItemQty, quantityUomId:otherOrderItem.quantityUomId]"/><set field="parentInvoiceItemSeqId" from="iiOut.invoiceItemSeqId"/><service-call name="create#mantle.order.OrderItemBilling" in-map="[orderId:otherOrderItem.orderId, orderItemSeqId:otherOrderItem.orderItemSeqId,                                     invoiceId:invoiceId, invoiceItemSeqId:iiOut.invoiceItemSeqId,                                     shipmentId:shipmentId, amount:otherOrderItem.unitAmount, quantity:otherItemQty]"/></if><set field="childOrderItemList" from="otherOrderItem.'Child#mantle.order.OrderItem'"/><order-map-list list="childOrderItemList"><order-by field-name="orderItemSeqId"/></order-map-list><iterate list="childOrderItemList" entry="childOrderItem"><if condition="childOrderItem.itemTypeEnumId in productItemTypes"><log message="Not invoicing child item ${childOrderItemList.orderId}:${childOrderItemList.orderItemSeqId}, has product item type ${childOrderItem.itemTypeEnumId}"/><continue/></if><entity-find entity-name="mantle.order.OrderItemBillingTotal" list="childItemBillingList"><econdition field-name="orderId" from="childOrderItem.orderId"/><econdition field-name="orderItemSeqId" from="childOrderItem.orderItemSeqId"/><select-field field-name="quantity,amount"/></entity-find><set field="childBilledQuantity" from="0.0"/><set field="childBilledTotal" from="0.0"/><iterate list="childItemBillingList" entry="childItemBilling"><set field="childInvQuantity" from="childItemBilling.quantity != null ? childItemBilling.quantity : 1.0"/><set field="childBilledQuantity" from="childBilledQuantity + childInvQuantity"/><set field="childBilledTotal" from="childBilledTotal + (childInvQuantity * (childItemBilling.amount ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/></iterate><set field="childQty" from="(childOrderItem.quantity != null ? childOrderItem.quantity : 1.0) * (childOrderItem.selectedAmount ?: 1.0)"/><set field="childQuantityNotBilled" from="childQty - childBilledQuantity"/><set field="childTotal" from="(childQty * (childOrderItem.unitAmount ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><set field="childTotalNotBilled" from="childTotal - childBilledTotal"/><if condition="childTotalNotBilled != 0.0"><set field="childQtyToBill" from="0.0"/><set field="childAmountToBill" from="0.0"/><if condition="childQty == orderItemQty"><then><set field="childQtyToBill" from="quantityToBill"/><set field="childAmountToBill" from="childOrderItem.unitAmount"/></then><else><set field="childQtyToBill" from="1.0"/><if condition="allShippedQuantity >= orderItemQty"><then><set field="childAmountToBill" from="childTotalNotBilled"/></then><else><set field="parentRatio" from="(otherTotalToBill as BigDecimal).divide(otherItemTotal as BigDecimal, 6, BigDecimal.ROUND_HALF_EVEN)"/><set field="childAmountToBill" from="(childTotal * parentRatio).setScale(2, BigDecimal.ROUND_HALF_UP)"/></else></if></else></if><service-call name="create#mantle.account.invoice.InvoiceItem" out-map="[invoiceId:childIiOut.invoiceId,invoiceItemSeqId:childIiOut.invoiceItemSeqId,parentItemSeqId:childIiOut.parentItemSeqId,itemTypeEnumId:childIiOut.itemTypeEnumId,overrideGlAccountId:childIiOut.overrideGlAccountId,assetId:childIiOut.assetId,productId:childIiOut.productId,otherPartyProductId:childIiOut.otherPartyProductId,parentInvoiceId:childIiOut.parentInvoiceId,parentInvoiceItemSeqId:childIiOut.parentInvoiceItemSeqId,taxableFlag:childIiOut.taxableFlag,quantity:childIiOut.quantity,quantityUomId:childIiOut.quantityUomId,amount:childIiOut.amount,description:childIiOut.description,itemDate:childIiOut.itemDate,isAdjustment:childIiOut.isAdjustment,salesOpportunityId:childIiOut.salesOpportunityId,taxAuthorityId:childIiOut.taxAuthorityId,payrollAdjustmentId:childIiOut.payrollAdjustmentId,finAccountId:childIiOut.finAccountId,finAccountTransId:childIiOut.finAccountTransId,billThruVendorName:childIiOut.billThruVendorName,billThruVendorRef:childIiOut.billThruVendorRef,lastUpdatedStamp:childIiOut.lastUpdatedStamp]" in-map="[invoiceId:invoiceId, itemTypeEnumId:(childOrderItem.itemTypeEnumId ?: 'ItemSales'),                                         parentItemSeqId:parentInvoiceItemSeqId, amount:childAmountToBill,                                         productId:(childOrderItem.productId ?: otherOrderItem.productId),                                         description:childOrderItem.itemDescription, quantity:childQtyToBill,                                         quantityUomId:childOrderItem.quantityUomId]"/><service-call name="create#mantle.order.OrderItemBilling" in-map="[orderId:childOrderItem.orderId, orderItemSeqId:childOrderItem.orderItemSeqId,                                         invoiceId:invoiceId, invoiceItemSeqId:childIiOut.invoiceItemSeqId,                                         shipmentId:shipmentId, amount:childAmountToBill, quantity:childQtyToBill]"/></if></iterate></iterate></iterate><if condition="statusId && statusId != 'InvoiceInProcess'"><iterate list="invoiceIdByOrderPartIdMap.values()" entry="invoiceId"><service-call name="update#mantle.account.invoice.Invoice" in-map="[invoiceId:invoiceId, statusId:statusId]"/></iterate></if><if condition="applyPayments"><iterate list="invoiceIdByOrderPartIdMap.entrySet()" entry="invoiceIdByOrderIdEntry"><set field="orderAndPartId" from="invoiceIdByOrderIdEntry.key"/><set field="orderId" from="orderAndPartId.substring(0, orderAndPartId.indexOf(':'))"/><set field="orderPartSeqId" from="orderAndPartId.substring(orderAndPartId.indexOf(':') + 1)"/><set field="invoiceId" from="invoiceIdByOrderIdEntry.value"/><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"><field-map field-name="invoiceId"/></entity-find-one><if condition="invoice.statusId == 'InvoiceInProcess'"><service-call name="update#mantle.account.invoice.Invoice" in-map="[invoiceId:invoiceId, statusId:'InvoiceFinalized']"/></if><service-call name="mantle.account.PaymentServices.apply#OrderPaymentsToInvoice" in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, invoiceId:invoiceId]"/></iterate></if></actions></service>