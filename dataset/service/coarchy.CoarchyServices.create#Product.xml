<!--Service Location coarchy.CoarchyServices.create#Product--><service verb="create" noun="Product"><in-parameters><parameter name="productName" required="true" entity-name="mantle.product.Product" field-name="productName"/><parameter name="description" entity-name="mantle.product.Product" field-name="description"/><parameter name="organizationId" required="true"/></in-parameters><out-parameters><parameter name="productId" entity-name="mantle.product.Product" field-name="productId"/></out-parameters><actions><set field="productName" from="productName.trim()"/><set field="description" from="description?.trim()"/><entity-find entity-name="mantle.product.Product" list="productList" limit="20"><econdition field-name="productClassEnumId" value="PclsCoarchy"/><econdition field-name="ownerPartyId" from="organizationId"/><econdition field-name="productName" from="productName" ignore-case="true"/></entity-find><if condition="productList"><return type="danger" message="${ec.resource.expand('CoarchyProductAlreadyExists', null, [productName:productList?.getFirst()?.productName])}"/></if><service-call name="create#mantle.product.Product" in-map="[productName:productName,description:description,productClassEnumId:'PclsCoarchy',ownerPartyId:organizationId]" out-map="[productId:context.productId,pseudoId:context.pseudoId,productTypeEnumId:context.productTypeEnumId,productClassEnumId:context.productClassEnumId,assetTypeEnumId:context.assetTypeEnumId,assetClassEnumId:context.assetClassEnumId,statusId:context.statusId,ownerPartyId:context.ownerPartyId,productName:context.productName,description:context.description,comments:context.comments,salesIntroductionDate:context.salesIntroductionDate,salesDiscontinuationDate:context.salesDiscontinuationDate,salesDiscWhenNotAvail:context.salesDiscWhenNotAvail,supportDiscontinuationDate:context.supportDiscontinuationDate,requireInventory:context.requireInventory,chargeShipping:context.chargeShipping,signatureRequiredEnumId:context.signatureRequiredEnumId,shippingInsuranceReqd:context.shippingInsuranceReqd,inShippingBox:context.inShippingBox,defaultShipmentBoxTypeId:context.defaultShipmentBoxTypeId,taxable:context.taxable,taxCode:context.taxCode,returnable:context.returnable,amountUomId:context.amountUomId,amountFixed:context.amountFixed,amountRequire:context.amountRequire,originGeoId:context.originGeoId,hidden:context.hidden,lastUpdatedStamp:context.lastUpdatedStamp]"/></actions></service>