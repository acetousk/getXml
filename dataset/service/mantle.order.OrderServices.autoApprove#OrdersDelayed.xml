<!--Service Location mantle.order.OrderServices.autoApprove#OrdersDelayed--><service verb="autoApprove" noun="OrdersDelayed"><in-parameters><parameter name="productStoreId"><description><![CDATA[If specified only run for this store, otherwise run for all stores]]></description></parameter></in-parameters><out-parameters/><actions><entity-find entity-name="mantle.product.store.ProductStore" list="productStoreList"><econdition field-name="productStoreId" ignore-if-empty="true"/><econdition field-name="autoApproveDelay" operator="not-equals" from="0"/></entity-find><iterate list="productStoreList" entry="productStore"><set field="delayMinutes" from="productStore.autoApproveDelay"/><script><![CDATA[Calendar delayCal = ec.user.getCalendarSafe()
                    delayCal.add(Calendar.MINUTE, (int) -delayMinutes)
                    delayTimestamp = new Timestamp(delayCal.getTimeInMillis())]]></script><entity-find entity-name="mantle.order.OrderHeader" list="orderList"><econdition field-name="productStoreId" from="productStore.productStoreId"/><econdition field-name="statusId" value="OrderPlaced"/><econdition field-name="placedDate" operator="less-equals" from="delayTimestamp"/><select-field field-name="orderId"/></entity-find><if condition="orderList"><log message="Trying delayed auto-approve for store ${productStore.productStoreId} with ${delayMinutes}m delay (before ${delayTimestamp}) for ${orderList.size()} orders"/><iterate list="orderList" entry="order"><service-call name="mantle.order.OrderServices.autoApprove#Order" in-map="[orderId:order.orderId]"/></iterate></if></iterate></actions></service>