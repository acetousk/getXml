<!--Service Location mantle.shipment.ShipmentServices.unpack#ShipmentItemIssuance--><service verb="unpack" noun="ShipmentItemIssuance"><in-parameters><parameter name="assetIssuanceId" required="true"/><parameter name="unpackDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="unpackAssemblyComponents" type="Boolean" default="true"/></in-parameters><out-parameters><parameter name="assetReservationId"/></out-parameters><actions><entity-find-one entity-name="mantle.product.issuance.AssetIssuance" value-field="assetIssuance"/><set field="shipmentId" from="assetIssuance.shipmentId"/><if condition="!shipmentId"><return error="true" message="Cannot unpack issuance ${assetIssuanceId}, not on a shipment"/></if><set field="originalQuantity" from="assetIssuance.quantity"/><if condition="!originalQuantity"><return message="No quantity to unpack for issuance ${assetIssuanceId} of asset ${assetIssuance.assetId} in shipment ${shipmentId}"/></if><if condition="!assetIssuance.shipmentItemSourceId"><return error="true" message="Cannot unpack issuance ${assetIssuanceId}, has no shipment item source"/></if><entity-find-one entity-name="mantle.shipment.ShipmentItemSource" value-field="shipmentItemSource" for-update="true"><field-map field-name="shipmentItemSourceId" from="assetIssuance.shipmentItemSourceId"/></entity-find-one><if condition="shipmentItemSource.invoiceId"><return error="true" message="Cannot unpack issuance ${assetIssuanceId}, item source ${assetIssuance.shipmentItemSourceId} already on invoice ${shipmentItemSource.invoiceId}"/></if><set field="shipmentItemSource.quantityNotHandled" from="shipmentItemSource.quantityNotHandled + originalQuantity"/><if condition="shipmentItemSource.statusId == 'SisPacked'"><set field="shipmentItemSource.statusId" value="SisPending"/></if><entity-update value-field="shipmentItemSource"/><service-call name="mantle.product.AssetServices.cancel#AssetIssuance" out-map="[assetReservationId:context.assetReservationId]" in-map="[assetIssuanceId:assetIssuanceId, cancelDate:unpackDate]"/><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="assetIssuance.productId"/></entity-find-one><if condition="product.productTypeEnumId == 'PtPickAssembly'"><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset"><field-map field-name="assetId" from="assetIssuance.assetId"/></entity-find-one><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"><field-map field-name="shipmentId"/></entity-find-one><if condition="shipment.assemblyWorkEffortId == asset.acquireWorkEffortId"><service-call name="mantle.work.ManufacturingServices.breakDown#Assembly" in-map="[assetId:asset.assetId, asset:asset, workEffortId:shipment.assemblyWorkEffortId,                                 quantityToBreakDown:originalQuantity, unissueAssemblyComponents:unpackAssemblyComponents,                                 breakDownDate:unpackDate]"/></if></if></actions></service>