<!--Service Location mantle.account.InvoiceServices.get#InvoiceBasicInfo--><service verb="get" noun="InvoiceBasicInfo"><in-parameters><parameter name="invoiceId" required="true"/><parameter name="activeOrgId"/></in-parameters><out-parameters><parameter name="invoice" type="Map"/><parameter name="editableStatusIds" type="Set"><parameter name="statusId"/></parameter><parameter name="invoiceEditable" type="Boolean"/><parameter name="recordPaymentStatusIds" type="Set"><parameter name="statusId"/></parameter><parameter name="canRecordPayments" type="Boolean"/><parameter name="isFromPartyOrgInternal" type="Boolean"/><parameter name="isToPartyOrgInternal" type="Boolean"/><parameter name="organizationPartyId"><description><![CDATA[Org considered primary for this invoice to determine payable or
                receivable; based on activeOrgId if specified, otherwise defaults to whichever party has role OrgInternal and
                defaulting to fromPartyId]]></description></parameter><parameter name="isPayableInvoice" type="Boolean"><description><![CDATA[If true invoice is payable for activeOrgId or default logic, otherwise is receivable]]></description></parameter><parameter name="statusFlowId"/><parameter name="invoiceTotal" type="BigDecimal"/><parameter name="appliedPaymentsTotal" type="BigDecimal"/><parameter name="unpaidTotal" type="BigDecimal"/></out-parameters><actions><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><if condition="invoice == null"><return error="true" message="Invoice not found with ID ${invoiceId}"/></if><service-call name="mantle.account.InvoiceServices.get#InvoiceTotal" in-map="[invoiceId:invoiceId]" out-map="[invoiceTotal:context.invoiceTotal,appliedPaymentsTotal:context.appliedPaymentsTotal,unpaidTotal:context.unpaidTotal]"/><set field="editableStatusIds" from="new HashSet(['InvoiceInProcess', 'InvoiceIncoming', 'InvoiceReceived'])"/><set field="invoiceEditable" from="editableStatusIds.contains(invoice.statusId)"/><set field="recordPaymentStatusIds" from="new HashSet(['InvoiceInProcess', 'InvoiceFinalized', 'InvoiceSent', 'InvoiceAcked', 'InvoiceWriteOff', 'InvoiceReceived', 'InvoiceApproved'])"/><set field="canRecordPayments" from="recordPaymentStatusIds.contains(invoice.statusId) && unpaidTotal > 0.0"/><entity-find-count entity-name="mantle.party.PartyRole" count-field="fromOrgInternalCount"><econdition field-name="partyId" from="invoice.fromPartyId"/><econdition field-name="roleTypeId" value="OrgInternal"/></entity-find-count><set field="isFromPartyOrgInternal" from="fromOrgInternalCount > 0"/><entity-find-count entity-name="mantle.party.PartyRole" count-field="toOrgInternalCount"><econdition field-name="partyId" from="invoice.toPartyId"/><econdition field-name="roleTypeId" value="OrgInternal"/></entity-find-count><set field="isToPartyOrgInternal" from="toOrgInternalCount > 0"/><service-call name="mantle.party.PartyServices.get#PartyOrganizationInfo" out-map="[activeOrgId:context.activeOrgId,userOrgIds:context.userOrgIds,filterOrgIds:context.filterOrgIds]" in-map="[partyId:partyId]"/><if condition="activeOrgId && ((isFromPartyOrgInternal && activeOrgId == invoice.fromPartyId) ||                     (isToPartyOrgInternal && activeOrgId == invoice.toPartyId))"><then><set field="organizationPartyId" from="activeOrgId"/></then><else-if condition="isToPartyOrgInternal && invoice.toPartyId in userOrgIds"><set field="organizationPartyId" from="invoice.toPartyId"/></else-if><else-if condition="isFromPartyOrgInternal && invoice.fromPartyId in userOrgIds"><set field="organizationPartyId" from="invoice.fromPartyId"/></else-if><else><set field="organizationPartyId" from="isFromPartyOrgInternal ? invoice.fromPartyId : invoice.toPartyId"/></else></if><set field="isPayableInvoice" from="organizationPartyId == invoice.toPartyId"/><set field="statusFlowId" from="isPayableInvoice ? 'InvoicePayable' : 'InvoiceReceivable'"/><entity-find-count entity-name="moqui.basic.StatusFlowTransition" count-field="statusFlowTransCount" cache="true"><econdition field-name="statusFlowId"/></entity-find-count><if condition="statusFlowTransCount == 0"><set field="statusFlowId" from="null"/></if></actions></service>