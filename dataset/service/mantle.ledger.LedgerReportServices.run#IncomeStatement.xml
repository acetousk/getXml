<!--Service Location mantle.ledger.LedgerReportServices.run#IncomeStatement--><service verb="run" noun="IncomeStatement"><in-parameters><parameter name="organizationPartyId" required="true"/><parameter name="timePeriodIdList" type="List" required="true"><parameter name="timePeriodId"/></parameter><parameter name="childOrgPeriods" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="organizationName"/><parameter name="partyAcctgPreference" type="Map"/><parameter name="currencyUomId"/><parameter name="timePeriodIdList" type="List"><parameter name="timePeriodId"/></parameter><parameter name="timePeriodIdMap" type="Map"/><parameter name="accountCodeFormatter" type="javax.swing.text.MaskFormatter"/><parameter name="classInfoById" type="Map"/><parameter name="grossProfitOnSalesMap" type="Map"/><parameter name="netOperatingIncomeMap" type="Map"/><parameter name="netNonOperatingIncomeMap" type="Map"/><parameter name="netIncomeMap" type="Map"/><parameter name="netIncomeOut" type="Map"/><parameter name="topExpenseByTimePeriod" type="Map"/></out-parameters><actions><service-call name="mantle.ledger.LedgerReportServices.get#ReportBasicInfo" in-map="context" out-map="[organizationName:context.organizationName,partyAcctgPreference:context.partyAcctgPreference,currencyUomId:context.currencyUomId,timePeriodIdList:context.timePeriodIdList,timePeriodIdMap:context.timePeriodIdMap,accountCodeFormatter:context.accountCodeFormatter]"/><set field="classIdList" from="['REVENUE', 'COST_OF_SALES', 'INCOME', 'EXPENSE', 'NON_OP_EXPENSE']"/><set field="grossProfitClassIdList" from="['REVENUE', 'COST_OF_SALES']"/><set field="netOpIncomeClassIdList" from="['REVENUE', 'COST_OF_SALES', 'EXPENSE']"/><set field="netNonOpIncomeClassIdList" from="['INCOME', 'NON_OP_EXPENSE']"/><set field="classInfoById" from="[:]"/><iterate list="classIdList" entry="classId"><service-call name="mantle.ledger.LedgerReportServices.get#GlAccountClassReportInfo" in-map="[organizationPartyId:organizationPartyId, timePeriodIdList:timePeriodIdList,                             classInfoById:classInfoById, negateDebit:true, glAccountClassEnumId:classId]"/></iterate><service-call name="mantle.ledger.LedgerReportServices.get#GlAccountClassInfoSums" out-map="[totalPosted:grossProfitOnSalesOut.totalPosted,totalPostedNoClosing:grossProfitOnSalesOut.totalPostedNoClosing,totalBalance:grossProfitOnSalesOut.totalBalance]" in-map="[classInfoById:classInfoById, classIdList:grossProfitClassIdList]"/><set field="grossProfitOnSalesMap" from="grossProfitOnSalesOut.totalPostedNoClosing"/><service-call name="mantle.ledger.LedgerReportServices.get#GlAccountClassInfoSums" out-map="[totalPosted:netOperatingIncomeOut.totalPosted,totalPostedNoClosing:netOperatingIncomeOut.totalPostedNoClosing,totalBalance:netOperatingIncomeOut.totalBalance]" in-map="[classInfoById:classInfoById, classIdList:netOpIncomeClassIdList]"/><set field="netOperatingIncomeMap" from="netOperatingIncomeOut.totalPostedNoClosing"/><service-call name="mantle.ledger.LedgerReportServices.get#GlAccountClassInfoSums" out-map="[totalPosted:netNonOperatingIncomeOut.totalPosted,totalPostedNoClosing:netNonOperatingIncomeOut.totalPostedNoClosing,totalBalance:netNonOperatingIncomeOut.totalBalance]" in-map="[classInfoById:classInfoById, classIdList:netNonOpIncomeClassIdList]"/><set field="netNonOperatingIncomeMap" from="netNonOperatingIncomeOut.totalPostedNoClosing"/><service-call name="mantle.ledger.LedgerReportServices.get#GlAccountClassInfoSums" out-map="[totalPosted:netIncomeOut.totalPosted,totalPostedNoClosing:netIncomeOut.totalPostedNoClosing,totalBalance:netIncomeOut.totalBalance]" in-map="[classInfoById:classInfoById, classIdList:classIdList]"/><set field="netIncomeMap" from="netIncomeOut.totalPostedNoClosing"/><set field="topExpenseByTimePeriod" from="[:]"/><set field="expenseChildren" from="classInfoById.GEN_ADMIN_EXPENSE.childClassInfoList + classInfoById.SALES_EXPENSE.childClassInfoList"/><iterate list="(['ALL'] + timePeriodIdList)" entry="timePeriodId"><set field="allExpenseList" from="[]"/><iterate list="expenseChildren" entry="childInfo"><set field="totalPosted" from="childInfo.totalPostedNoClosingByTimePeriod[timePeriodId]"/><script><![CDATA[if (totalPosted && totalPosted < 0.0) allExpenseList.add([className:childInfo.className, amount:-totalPosted])]]></script></iterate><order-map-list list="allExpenseList"><order-by field-name="-amount"/></order-map-list><script><![CDATA[topExpenseByTimePeriod.put(timePeriodId, allExpenseList.take(10))]]></script></iterate></actions></service>