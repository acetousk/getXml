<!--Service Location mantle.account.PaymentServices.apply#InvoicePayment--><service verb="apply" noun="InvoicePayment"><in-parameters><parameter name="paymentId" required="true"/><parameter name="invoiceId" required="true"/><parameter name="amount" type="BigDecimal"><description><![CDATA[Default to Invoice unpaidTotal.
                Actual amountApplied will never be greater than Invoice unpaidTotal or Payment unappliedTotal.]]></description></parameter><parameter name="billingAccountId"/><parameter name="overrideGlAccountId"/></in-parameters><out-parameters><parameter name="paymentApplicationId"/><parameter name="amountApplied" type="BigDecimal"/></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><set field="amountApplied" from="0.0"/><service-call name="mantle.account.InvoiceServices.get#InvoiceTotal" in-map="[invoiceId:invoiceId]" out-map="[invoiceTotal:context.invoiceTotal,appliedPaymentsTotal:context.appliedPaymentsTotal,unpaidTotal:context.unpaidTotal]"/><service-call name="mantle.account.PaymentServices.get#PaymentTotals" in-map="[paymentId:paymentId]" out-map="[paymentTotal:context.paymentTotal,appliedTotal:context.appliedTotal,unappliedTotal:context.unappliedTotal]"/><if condition="!amount || amount > unpaidTotal"><set field="amount" from="unpaidTotal"/></if><if condition="amount > unappliedTotal"><set field="amount" from="unappliedTotal"/></if><if condition="amount == 0.0"><entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList"><econdition field-name="paymentId"/><econdition field-name="invoiceId"/></entity-find><if condition="paymentApplicationList?.size() == 1"><set field="paymentApplicationId" from="paymentApplicationList[0].paymentApplicationId"/></if><return/></if><if condition="payment.amountUomId != invoice.currencyUomId"><return type="danger" message="Cannot apply payment ${paymentId} to invoice ${invoiceId}, payment has a different currency (${payment.amountUomId}) than invoice (${invoice.currencyUomId})"/></if><if condition="payment.fromPartyId != invoice.toPartyId"><return type="danger" message="Cannot apply payment ${paymentId} to invoice ${invoiceId}, payment is from a different party (${payment.fromPartyId}) than invoice is to (${invoice.toPartyId})"/></if><if condition="payment.toPartyId != invoice.fromPartyId"><return type="danger" message="Cannot apply payment ${paymentId} to invoice ${invoiceId}, payment is to a different party (${payment.toPartyId}) than invoice is from (${invoice.fromPartyId})"/></if><if condition="!(payment.statusId in ['PmntDelivered', 'PmntConfirmed'])"><return type="warning" message="Not applying payment ${paymentId} in status ${payment.statusId} to invoice ${invoiceId}, payment must be Delivered or Confirmed to be applied"/></if><if condition="!(invoice.statusId in ['InvoiceFinalized', 'InvoiceSent', 'InvoiceAcked', 'InvoicePmtRecvd', 'InvoiceApproved', 'InvoicePmtSent'])"><log level="warn" message="Not applying payment ${paymentId} to invoice ${invoiceId} in status ${invoice.statusId} stack: ${ec.artifactExecution.getStackNameString()}"/><return message="Not applying payment ${paymentId} to invoice ${invoiceId} in status ${invoice.status?.description}, invoice must be Finalized, Sent, Acknowledged, or Payment Received for Receivable OR Approved or Payment Sent for Payable"/></if><service-call name="mantle.account.PaymentServices.check#InvoiceStatusForPayment" in-map="[invoiceId:invoiceId]"/><set field="amountApplied" from="amount"/><set field="appliedDate" from="payment.effectiveDate != null && invoice.invoiceDate != null ?                     (payment.effectiveDate > invoice.invoiceDate ? payment.effectiveDate : invoice.invoiceDate) :                     (payment.effectiveDate ?: invoice.invoiceDate ?: ec.user.nowTimestamp)"/><service-call name="create#mantle.account.payment.PaymentApplication" out-map="[paymentApplicationId:context.paymentApplicationId,paymentId:context.paymentId,invoiceId:context.invoiceId,billingAccountId:context.billingAccountId,overrideGlAccountId:context.overrideGlAccountId,toPaymentId:context.toPaymentId,toInvoiceId:context.toInvoiceId,taxAuthGeoId:context.taxAuthGeoId,amountApplied:context.amountApplied,amountOriginallyApplied:context.amountOriginallyApplied,appliedDate:context.appliedDate,acctgTransResultEnumId:context.acctgTransResultEnumId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[paymentId:paymentId, invoiceId:invoiceId, billingAccountId:billingAccountId,                         overrideGlAccountId:overrideGlAccountId, amountApplied:amountApplied,                         appliedDate:appliedDate]"/><service-call name="mantle.account.InvoiceServices.get#InvoiceTotal" in-map="[invoiceId:invoiceId]" out-map="[invoiceTotal:context.invoiceTotal,appliedPaymentsTotal:context.appliedPaymentsTotal,unpaidTotal:context.unpaidTotal]"/><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><if condition="unpaidTotal == 0.0"><then><if condition="invoice.statusId in ['InvoiceFinalized', 'InvoiceSent', 'InvoiceAcked']"><then><service-call name="update#mantle.account.invoice.Invoice" in-map="[invoiceId:invoiceId, statusId:'InvoicePmtRecvd']"/></then><else-if condition="invoice.statusId == 'InvoiceApproved'"><service-call name="update#mantle.account.invoice.Invoice" in-map="[invoiceId:invoiceId, statusId:'InvoicePmtSent']"/></else-if></if></then><else><log message="After apply payment ${paymentId} to invoice ${invoiceId} not setting to Payment Sent/Received because unpaidTotal is ${unpaidTotal}"/></else></if></actions></service>