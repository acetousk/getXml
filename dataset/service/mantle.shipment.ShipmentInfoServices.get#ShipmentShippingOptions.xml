<!--Service Location mantle.shipment.ShipmentInfoServices.get#ShipmentShippingOptions--><service verb="get" noun="ShipmentShippingOptions"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="shipmentRouteSegmentSeqId"/><parameter name="carrierPartyIdList" type="List"><parameter name="carrierPartyId"/></parameter><parameter name="getRates" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="shippingOptions" type="List"><parameter name="option" type="Map"><parameter name="carrierPartyId"/><parameter name="carrierName"/><parameter name="shipmentMethodEnumId"/><parameter name="shipmentMethodDescription"/><parameter name="shippingTotal" type="BigDecimal"/></parameter></parameter><parameter name="postalContactMechId"><description><![CDATA[Return if address was validated and replaced]]></description></parameter></out-parameters><actions><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/><if condition="shipmentRouteSegmentSeqId"><then><entity-find-one entity-name="mantle.shipment.ShipmentRouteSegment" value-field="routeSegment"/></then><else><entity-find entity-name="mantle.shipment.ShipmentRouteSegment" list="routeSegmentList"><econdition field-name="shipmentId"/><order-by field-name="shipmentRouteSegmentSeqId"/></entity-find><set field="routeSegment" from="routeSegmentList[0]"/></else></if><if condition="shipment.productStoreId"><entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore"><field-map field-name="productStoreId" from="shipment.productStoreId"/></entity-find-one></if><if condition="productStore != null && productStore.shipmentAnyCarrierMethod != 'Y'"><set field="productStoreId" from="shipment.productStoreId"/><entity-find entity-name="mantle.product.store.ProductStoreShipOptionDetail" list="shipOptionList" cache="true"><econdition field-name="productStoreId"/><econdition field-name="carrierPartyId" operator="in" from="carrierPartyIdList" ignore-if-empty="true"/><order-by field-name="carrierPartyId,sequenceNum"/></entity-find><set field="carrierIdSet" from="new HashSet(shipOptionList*.carrierPartyId)"/><entity-find entity-name="mantle.product.store.ProductStoreShippingGateway" list="storeGatewayList"><econdition field-name="productStoreId"/><econdition field-name="carrierPartyId" operator="in" from="carrierIdSet"/></entity-find><set field="carriersByGateway" from="[:]"/><iterate list="storeGatewayList" entry="storeGateway"><script><![CDATA[addToSetInMap(storeGateway.shippingGatewayConfigId, storeGateway.carrierPartyId, carriersByGateway)]]></script></iterate></if><if condition="!carriersByGateway"><set field="shippingGatewayConfigId" from="routeSegment.shippingGatewayConfigId"/><if condition="!shippingGatewayConfigId && shipment?.fromPartyId"><service-call name="mantle.party.PartyServices.get#PartySettingValue" out-map="[settingValue:ptySettingOut.settingValue]" in-map="[partyId:shipment.fromPartyId, partySettingTypeId:'DefaultShipmentGatewayConfigId']"/><set field="shippingGatewayConfigId" from="ptySettingOut?.settingValue"/></if><if condition="!shippingGatewayConfigId"><set field="shippingGatewayConfigId" from="ec.user.getPreference('DefaultShipmentGatewayConfigId')"/></if><if condition="shippingGatewayConfigId"><if condition="carrierPartyIdList"><then><entity-find entity-name="mantle.shipment.carrier.CarrierShipmentMethod" list="shipOptionList" cache="false"><econdition field-name="carrierPartyId" operator="in" from="carrierPartyIdList"/><order-by field-name="carrierPartyId,sequenceNum"/></entity-find></then><else><entity-find entity-name="mantle.shipment.carrier.CarrierShipmentMethod" list="shipOptionList" cache="true"><order-by field-name="carrierPartyId,sequenceNum"/></entity-find></else></if><set field="carriersByGateway" from="[(shippingGatewayConfigId):new HashSet(shipOptionList*.carrierPartyId)]"/></if></if><if condition="getRates && shipOptionList && carriersByGateway"><set field="packageInfoList" from="[]"/><entity-find entity-name="mantle.shipment.ShipmentPackage" list="packageList"><econdition field-name="shipmentId"/><order-by field-name="shipmentPackageSeqId"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentPackageContent" list="shipmentPackageContentList"><econdition field-name="shipmentId"/><order-by field-name="productId"/></entity-find><iterate list="packageList" entry="pkg"><filter-map-list list="shipmentPackageContentList" to-list="curContentList"><field-map field-name="shipmentPackageSeqId" from="pkg.shipmentPackageSeqId"/></filter-map-list><set field="quantityByProductId" from="[:]"/><iterate list="curContentList" entry="curContent"><script><![CDATA[quantityByProductId.put(curContent.productId, curContent.quantity)]]></script></iterate><script><![CDATA[packageInfoList.add([shipmentBoxTypeId:pkg.shipmentBoxTypeId, weight:pkg.weight,
                            weightUomId:pkg.weightUomId, shipmentPackageSeqId:pkg.shipmentPackageSeqId, quantityByProductId:quantityByProductId])]]></script></iterate><set field="originPostalContactMechId" from="routeSegment.originPostalContactMechId"/><if condition="!originPostalContactMechId && routeSegment.originFacilityId"><service-call name="mantle.facility.ContactServices.get#FacilityDefaultShipOrigin" out-map="[postalContactMechId:facOriginOut.postalContactMechId,telecomContactMechId:facOriginOut.telecomContactMechId]" in-map="[facilityId:routeSegment.originFacilityId]"/><set field="originPostalContactMechId" from="facOriginOut.postalContactMechId"/></if><if condition="packageList && originPostalContactMechId && routeSegment.destPostalContactMechId"><if condition="shipment.productStoreId"><entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore" cache="true"><field-map field-name="productStoreId" from="shipment.productStoreId"/></entity-find-one></if><iterate list="carriersByGateway" entry="carrierPartyIdSet" key="shippingGatewayConfigId"><entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayConfig" value-field="shippingGatewayConfig" cache="true"><field-map field-name="shippingGatewayConfigId"/></entity-find-one><if condition="!shippingGatewayConfig?.getShippingRatesBulkName"><continue/></if><set field="curShipOptionList" from="shipOptionList.findAll({ it.carrierPartyId in carrierPartyIdSet })"/><service-call name="${shippingGatewayConfig.getShippingRatesBulkName}" out-map="bulkOut" out-map-add-to-existing="false" in-map="[shippingGatewayConfigId:shippingGatewayConfigId, carrierShipmentMethodList:curShipOptionList,                                     fromPartyId:shipment.fromPartyId, toPartyId:shipment.toPartyId,                                     originFacilityId:routeSegment.originFacilityId, originPostalContactMechId:originPostalContactMechId,                                     destPostalContactMechId:routeSegment.destPostalContactMechId, packageInfoList:packageInfoList,                                     productStoreId:shipment.productStoreId, vendorPartyId:shipment.fromPartyId,                                     currencyUomId:shipment.costUomId]"/><if condition="bulkOut.destPostalContactMechId && bulkOut.destPostalContactMechId != routeSegment.destPostalContactMechId"><set field="routeSegment.destPostalContactMechId" from="bulkOut.destPostalContactMechId"/><entity-update value-field="routeSegment"/></if><set field="shippingRateInfoList" from="bulkOut.shippingRateInfoList"/><if condition="shippingRateInfoList"><set field="newShipOptionList" from="[]"/><iterate list="shipOptionList" entry="shipOption"><set field="shippingRateInfo" from="shippingRateInfoList.find({ it.carrierPartyId == shipOption.carrierPartyId && it.shipmentMethodEnumId == shipOption.shipmentMethodEnumId })"/><if condition="shippingRateInfo != null"><then><if condition="productStore?.markupShipmentShipLabels == 'Y' || ec.user.getPreference('AllStoresMarkupLabelShipment') == 'true'"><service-call name="mantle.shipment.CarrierServices.get#ShipLabelMarkup" out-map="[markupAmount:markupOut.markupAmount,markupPercent:markupOut.markupPercent,markupMultiplier:markupOut.markupMultiplier,markedUpAmount:markupOut.markedUpAmount]" out-map-add-to-existing="false" in-map="[productStoreId:productStore.productStoreId, carrierPartyId:shippingRateInfo.carrierPartyId,                                                     shipmentMethodEnumId:shippingRateInfo.shipmentMethodEnumId]"/></if><set field="markupAmount" from="markupOut?.markupAmount ?: 0.0"/><set field="markupMultiplier" from="markupOut?.markupMultiplier ?: 0.0"/><if condition="(markupMultiplier != 0.0 || markupAmount != 0.0) && shippingRateInfo.shippingTotal"><set field="shippingRateInfo.shippingTotal" from="shippingRateInfo.shippingTotal + markupAmount +                                                 (markupMultiplier as BigDecimal).multiply(shippingRateInfo.shippingTotal).setScale(2, BigDecimal.ROUND_HALF_UP)"/></if><script><![CDATA[newShipOptionList.add(shippingRateInfo)]]></script></then><else><script><![CDATA[newShipOptionList.add(shipOption)]]></script></else></if></iterate><set field="shipOptionList" from="newShipOptionList"/></if></iterate></if></if><set field="shippingOptions" from="[]"/><iterate list="shipOptionList" entry="shipOption"><set field="shippingOption" from="new HashMap(shipOption)"/><if condition="!shipOption.description || shipOption.sequenceNum == null"><entity-find-one entity-name="mantle.shipment.carrier.CarrierShipmentMethod" value-field="carrierShipmentMethod"><field-map field-name="carrierPartyId" from="shipOption.carrierPartyId"/><field-map field-name="shipmentMethodEnumId" from="shipOption.shipmentMethodEnumId"/></entity-find-one><set field="shippingOption.description" from="shippingOption.description ?: carrierShipmentMethod?.description"/><set field="shippingOption.sequenceNum" from="shippingOption.sequenceNum ?: carrierShipmentMethod?.sequenceNum"/></if><entity-find-one entity-name="mantle.party.Party" value-field="carrierParty" cache="true"><field-map field-name="partyId" from="shipOption.carrierPartyId"/></entity-find-one><entity-find-one entity-name="moqui.basic.Enumeration" value-field="shipmentMethodEnum"><field-map field-name="enumId" from="shipOption.shipmentMethodEnumId"/></entity-find-one><set field="shippingOption.carrierName" from="carrierParty.pseudoId"/><set field="shippingOption.shipmentMethodDescription" from="shipmentMethodEnum.description"/><script><![CDATA[shippingOptions.add(shippingOption)]]></script></iterate><order-map-list list="shippingOptions"><order-by field-name="carrierName"/><order-by field-name="sequenceNum"/></order-map-list></actions></service>