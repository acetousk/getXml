<!--Service Location mantle.party.ContactServices.findOrCreate#PartyPostalAddress--><service verb="findOrCreate" noun="PartyPostalAddress"><in-parameters><parameter name="partyId" required="true"/><parameter name="toName" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="toName"/><parameter name="attnName" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="attnName"/><parameter name="address1" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="address1"/><parameter name="address2" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="address2"/><parameter name="unitNumber" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="unitNumber"/><parameter name="directions" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="directions"/><parameter name="city" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="city"/><parameter name="cityGeoId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="cityGeoId"/><parameter name="schoolDistrictGeoId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="schoolDistrictGeoId"/><parameter name="countyGeoId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="countyGeoId"/><parameter name="stateProvinceGeoId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="stateProvinceGeoId"/><parameter name="countryGeoId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="countryGeoId"/><parameter name="postalCode" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="postalCode"/><parameter name="postalCodeExt" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="postalCodeExt"/><parameter name="postalCodeGeoId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="postalCodeGeoId"/><parameter name="geoPointId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="geoPointId"/><parameter name="commercial" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="commercial"/><parameter name="accessCode" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="accessCode"/><parameter name="telecomContactMechId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="telecomContactMechId"/><parameter name="emailContactMechId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="emailContactMechId"/><parameter name="shipGatewayAddressId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="shipGatewayAddressId"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.party.contact.PostalAddress" field-name="lastUpdatedStamp"/><parameter name="contactMechPurposeId"/></in-parameters><out-parameters><parameter name="contactMechId"/></out-parameters><actions><entity-find entity-name="mantle.party.contact.PartyContactMechPostalAddress" list="existingList"><date-filter/><econdition field-name="partyId"/><econdition field-name="address1"/><econdition field-name="city"/><econdition field-name="postalCode"/><econdition field-name="stateProvinceGeoId" ignore-if-empty="true"/><econdition field-name="countryGeoId" ignore-if-empty="true"/></entity-find><if condition="existingList"><then><set field="contactMechId" from="existingList.get(0).contactMechId"/><if condition="contactMechPurposeId && !existingList*.contactMechPurposeId.contains(contactMechPurposeId)"><service-call name="create#mantle.party.contact.PartyContactMech" in-map="[partyId:partyId, contactMechId:contactMechId, fromDate:ec.user.nowTimestamp,                                 contactMechPurposeId:contactMechPurposeId]"/></if></then><else><if condition="!contactMechPurposeId"><set field="contactMechPurposeId" value="PostalPrimary"/></if><service-call name="mantle.party.ContactServices.create#PostalAddress" out-map="[contactMechId:paOut.contactMechId]" in-map="context"/><set field="contactMechId" from="paOut.contactMechId"/></else></if></actions></service>