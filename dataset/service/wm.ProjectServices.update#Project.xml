<!--Service Location wm.ProjectServices.update#Project--><service verb="update" noun="Project"><in-parameters><parameter name="workEffortId" required="true"/><parameter name="workEffortName"/><parameter name="estimatedCompletionDate"/><parameter name="description" allow-html="safe"/><parameter name="statusId"/><parameter name="managerPartyId"/></in-parameters><out-parameters/><actions><service-call name="update#mantle.work.effort.WorkEffort" out-map="[workEffortId:context.workEffortId,universalId:context.universalId,sourceReferenceId:context.sourceReferenceId,parentWorkEffortId:context.parentWorkEffortId,rootWorkEffortId:context.rootWorkEffortId,workEffortTypeEnumId:context.workEffortTypeEnumId,purposeEnumId:context.purposeEnumId,visibilityEnumId:context.visibilityEnumId,resolutionEnumId:context.resolutionEnumId,workTypeEnumId:context.workTypeEnumId,ownerPartyId:context.ownerPartyId,productStoreId:context.productStoreId,statusId:context.statusId,statusFlowId:context.statusFlowId,priority:context.priority,sendNotificationEmail:context.sendNotificationEmail,percentComplete:context.percentComplete,revisionNumber:context.revisionNumber,workEffortName:context.workEffortName,description:context.description,location:context.location,facilityId:context.facilityId,infoUrl:context.infoUrl,shipmentMethodEnumId:context.shipmentMethodEnumId,estimatedStartDate:context.estimatedStartDate,estimatedCompletionDate:context.estimatedCompletionDate,actualStartDate:context.actualStartDate,actualCompletionDate:context.actualCompletionDate,recurStartCron:context.recurStartCron,recurLimit:context.recurLimit,recurEndDate:context.recurEndDate,allDayStart:context.allDayStart,allDayEnd:context.allDayEnd,estimatedWorkTime:context.estimatedWorkTime,estimatedSetupTime:context.estimatedSetupTime,remainingWorkTime:context.remainingWorkTime,actualWorkTime:context.actualWorkTime,actualSetupTime:context.actualSetupTime,totalTimeAllowed:context.totalTimeAllowed,estimatedWorkDuration:context.estimatedWorkDuration,actualWorkDuration:context.actualWorkDuration,actualBreakDuration:context.actualBreakDuration,timeUomId:context.timeUomId,actualCost:context.actualCost,actualClientCost:context.actualClientCost,totalClientCostAllowed:context.totalClientCostAllowed,costUomId:context.costUomId,activityId:context.activityId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="context"/><entity-find entity-name="mantle.work.effort.WorkEffortParty" list="assignToList"><econdition field-name="workEffortId"/><econdition field-name="roleTypeId" value="Manager"/><date-filter/></entity-find><if condition="managerList"><set field="curManagerPartyId" from="managerList[0].partyId"/></if><if condition="managerPartyId && curManagerPartyId != managerPartyId"><service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty" in-map="[workEffortId:workEffortId, roleTypeId:'Manager', newPartyId:managerPartyId, statusId:'WeptAssigned']"/></if></actions></service>