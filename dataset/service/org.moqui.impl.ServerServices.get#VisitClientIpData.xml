<!--Service Location org.moqui.impl.ServerServices.get#VisitClientIpData--><service verb="get" noun="VisitClientIpData"><in-parameters><parameter name="visitId" required="true"/></in-parameters><out-parameters><parameter name="clientIpPostalCode"/><parameter name="clientIpCity"/><parameter name="clientIpMetroCode"/><parameter name="clientIpRegionCode"/><parameter name="clientIpRegionName"/><parameter name="clientIpStateProvGeoId"/><parameter name="clientIpCountryGeoId"/><parameter name="clientIpLatitude"/><parameter name="clientIpLongitude"/><parameter name="clientIpTimeZone"/></out-parameters><actions><return message="Geo IP lookup disabled"/><entity-find-one entity-name="moqui.server.Visit" value-field="visit"/><if condition="visit == null"><return message="No visit found with ID ${visitId}"/></if><if condition="!visit.clientIpAddress"><return message="Visit with ID ${visitId} has no clientIpAddress"/></if><if condition="!visit.clientIpAddress.contains('.')"><return message="IP address not a IPv4 address"/></if><set field="address" from="InetAddress.getByName(visit.clientIpAddress)"/><if condition="address.isSiteLocalAddress() || address.isAnyLocalAddress() || address.isLinkLocalAddress() ||                     address.isLoopbackAddress() || address.isMulticastAddress()"><return message="IP address is not a public address"/></if><script><![CDATA[geoIp = ec.service.rest().method("get").uri("http://freegeoip.net/json/${visit.clientIpAddress}").call().checkError().jsonObject()]]></script><if condition="!geoIp"><return message="No return from freegeoip.net for IP ${visit.clientIpAddress}"/></if><set field="mapped" from="[clientIpPostalCode:geoIp.zip_code, clientIpCity:geoIp.city,                     clientIpMetroCode:geoIp.metro_code, clientIpRegionCode:geoIp.region_code, clientIpRegionName:geoIp.region_name,                     clientIpLatitude:geoIp.latitude, clientIpLongitude:geoIp.longitude, clientIpTimeZone:geoIp.time_zone]"/><if condition="geoIp.country_code"><entity-find entity-name="moqui.basic.Geo" list="geoList"><econdition field-name="geoTypeEnumId" value="GEOT_COUNTRY"/><econdition field-name="geoCodeAlpha2" from="geoIp.country_code"/></entity-find><if condition="geoList"><set field="mapped.clientIpCountryGeoId" from="geoList[0].geoId"/></if></if><if condition="geoIp.region_code"><entity-find entity-name="moqui.basic.Geo" list="geoList"><econdition field-name="geoTypeEnumId" operator="in" value="GEOT_STATE,GEOT_PROVINCE,GEOT_TERRITORY"/><econdition field-name="geoCodeAlpha2" from="geoIp.region_code"/></entity-find><if condition="geoList"><set field="mapped.clientIpStateProvGeoId" from="geoList[0].geoId"/></if></if><script><![CDATA[ec.context.putAll(mapped); visit.putAll(mapped)]]></script><entity-update value-field="visit"/></actions></service>