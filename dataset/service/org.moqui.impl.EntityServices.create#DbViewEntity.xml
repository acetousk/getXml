<!--Service Location org.moqui.impl.EntityServices.create#DbViewEntity--><service verb="create" noun="DbViewEntity"><in-parameters><parameter name="packageName" type="java.lang.String" required="false" allow-html="none" entity-name="moqui.entity.view.DbViewEntity" field-name="packageName"><matches regexp="[a-z][a-z0-9\.]*" message="Must start with a lower case letter and contain only lower case letters, digits, and dot/period"/></parameter><parameter name="cache" type="java.lang.String" required="false" allow-html="none" entity-name="moqui.entity.view.DbViewEntity" field-name="cache"/><parameter name="isDataView" type="java.lang.String" required="false" allow-html="none" entity-name="moqui.entity.view.DbViewEntity" field-name="isDataView"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="moqui.entity.view.DbViewEntity" field-name="lastUpdatedStamp"/><parameter name="dbViewEntityName" required="true" entity-name="moqui.entity.view.DbViewEntity" field-name="dbViewEntityName"><matches regexp="[A-Z]\w*" message="Must start with a upper case letter and contain only letters and digits"/></parameter></in-parameters><out-parameters/><actions><entity-find-one entity-name="moqui.entity.view.DbViewEntity" value-field="existing"/><if condition="existing || ec.entity.isEntityDefined(dbViewEntityName)"><return error="true" message="Name '${dbViewEntityName}' already in use"/></if><service-call name="create#moqui.entity.view.DbViewEntity" in-map="context" out-map="[dbViewEntityName:context.dbViewEntityName,packageName:context.packageName,cache:context.cache,isDataView:context.isDataView,lastUpdatedStamp:context.lastUpdatedStamp]"/></actions></service>