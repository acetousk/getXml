<!--Service Location mantle.product.AssetServices.get#AvailableForOrder--><service verb="get" noun="AvailableForOrder"><in-parameters><parameter name="productId" required="true"/><parameter name="orderId" required="true"/><parameter name="orderPartSeqId" required="true"/><parameter name="orderItemSeqId"><description><![CDATA[Should be specified for updates to add in existing reservations (also available to the OrderItem)]]></description></parameter><parameter name="orderHeader" type="EntityValue"/><parameter name="orderPart" type="EntityValue"/></in-parameters><out-parameters><parameter name="availableToPromiseTotal" type="BigDecimal"/></out-parameters><actions><if condition="orderHeader == null"><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/></if><if condition="orderPart == null"><entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/></if><if condition="!orderPart.facilityId && !orderHeader.productStoreId"><return type="warning" message="Cannot get available inventory for order ${orderId} part ${orderPartSeqId}, no facility on order part and no store on header"/></if><service-call name="mantle.product.AssetServices.get#AvailableInventory" out-map="[availableToPromiseTotal:context.availableToPromiseTotal]" in-map="[productId:productId, facilityId:orderPart.facilityId, productStoreId:orderHeader.productStoreId,                         vendorPartyId:orderPart.vendorPartyId, customerPartyId:orderPart.customerPartyId]"/><if condition="orderItemSeqId"><entity-find entity-name="mantle.product.issuance.AssetReservationSummary" list="resSumList"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/><econdition field-name="productId"/><select-field field-name="quantity,quantityNotAvailable"/></entity-find><if condition="resSumList.size() > 0"><set field="resQuantity" from="resSumList[0].quantity"/><set field="resQuantityNotAvailable" from="resSumList[0].quantityNotAvailable"/><set field="availableToPromiseTotal" from="(availableToPromiseTotal ?: 0.0) + (resQuantity ?: 0.0) - (resQuantityNotAvailable ?: 0.0)"/></if><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"/><if condition="product.productTypeEnumId == 'PtPickAssembly'"><entity-find entity-name="mantle.product.issuance.AssetReservationSummary" list="allResSumList"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/><select-field field-name="productId,quantity,quantityNotAvailable"/></entity-find><entity-find entity-name="mantle.product.ProductAssoc" list="assocList" cache="true"><date-filter/><econdition field-name="productId" from="product.productId"/><econdition field-name="productAssocTypeEnumId" value="PatMfgBom"/></entity-find><set field="reservedFromComponents" from="0.0"/><set field="reservedNotAvailFromComponents" from="0.0"/><iterate list="assocList" entry="assoc"><set field="curResSum" from="allResSumList.find({ it.productId == assoc.toProductId })"/><set field="compScale" from="assoc.quantity != null ? assoc.quantity.scale() : 0"/><set field="resQuantity" from="(curResSum.quantity ?: 0.0).divide((assoc.quantity ?: 1.0), compScale, BigDecimal.ROUND_FLOOR)"/><set field="resQuantityNotAvailable" from="(curResSum.quantityNotAvailable ?: 0.0).divide((assoc.quantity ?: 1.0), compScale, BigDecimal.ROUND_FLOOR)"/><log level="warn" message="order item ${orderId}:${orderItemSeqId} comp prod ${assoc.toProductId} res qty ${curResSum.quantity} not avail ${curResSum.quantityNotAvailable} comp qty ${assoc.quantity} (scale ${compScale}) resQuantity ${resQuantity} resQuantityNotAvailable ${resQuantityNotAvailable}"/><if condition="reservedFromComponents == 0.0 || reservedFromComponents > resQuantity"><set field="reservedFromComponents" from="resQuantity"/></if><if condition="reservedNotAvailFromComponents < resQuantityNotAvailable"><set field="reservedNotAvailFromComponents" from="resQuantityNotAvailable"/></if></iterate><set field="availableToPromiseTotal" from="(availableToPromiseTotal ?: 0.0) + reservedFromComponents - reservedNotAvailFromComponents"/></if></if></actions></service>