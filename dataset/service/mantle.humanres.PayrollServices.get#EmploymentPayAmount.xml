<!--Service Location mantle.humanres.PayrollServices.get#EmploymentPayAmount--><service verb="get" noun="EmploymentPayAmount"><in-parameters><parameter name="partyRelationshipId"/><parameter name="employment" type="Map"/><parameter name="timePeriodId" required="true"/></in-parameters><out-parameters><parameter name="payAmount" type="BigDecimal"/><parameter name="currencyUomId"/><parameter name="salaryFlag"/><parameter name="timeEntryList" type="List"/><parameter name="employment" type="Map"/><parameter name="employee" type="Map"/><parameter name="emplPosition" type="Map"/><parameter name="timePeriod" type="Map"/><parameter name="fromTimestamp" type="Timestamp"/><parameter name="thruTimestamp" type="Timestamp"/></out-parameters><actions><if condition="!employment"><then><if condition="partyRelationshipId"><then><entity-find-one entity-name="mantle.humanres.employment.EmploymentAndRelationship" value-field="employment"/></then><else><return error="true" message="partyRelationshipId or employment is required."/></else></if></then><else><set field="partyRelationshipId" from="employment.partyRelationshipId"/></else></if><entity-find-one entity-name="mantle.humanres.employment.Employee" value-field="employee"><field-map field-name="partyId" from="employment.fromPartyId"/></entity-find-one><entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="emplPosition"><field-map field-name="emplPositionId" from="employment.emplPositionId"/></entity-find-one><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod"/><entity-find-one entity-name="mantle.party.PartyDetail" value-field="fromDetail"><field-map field-name="partyId" from="employment.fromPartyId"/></entity-find-one><set field="salaryFlag" from="emplPosition.salaryFlag ?: 'N'"/><set field="payAmount" from="0.0"/><if condition="employment.timePeriodTypeId != timePeriod.timePeriodTypeId"><return message="Employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is not paid in this type of period"/></if><service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriod:timePeriod]" out-map="[timePeriod:periodInfo.timePeriod,fromTimestamp:periodInfo.fromTimestamp,thruTimestamp:periodInfo.thruTimestamp,thruTimestampExclusive:periodInfo.thruTimestampExclusive,thruTimestampLate:periodInfo.thruTimestampLate]"/><set field="fromTimestamp" from="periodInfo.fromTimestamp"/><set field="thruTimestamp" from="periodInfo.thruTimestamp"/><if condition="employment.fromDate != null && employment.fromDate > thruTimestamp"><return message="Employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is not yet employed"/></if><if condition="employment.thruDate != null && employment.thruDate < fromTimestamp"><return message="Employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is no longer employed"/></if><if condition="salaryFlag == 'Y'"><then><entity-find entity-name="mantle.humanres.employment.EmploymentSalary" list="employmentSalaryList"><econdition field-name="fromDate" operator="less-equals" from="thruTimestamp"/><econdition field-name="thruDate" operator="greater-equals" from="fromTimestamp" or-null="true"/><econdition field-name="partyRelationshipId"/><econdition field-name="timePeriodTypeId" from="timePeriod.timePeriodTypeId"/><order-by field-name="-fromDate"/></entity-find><if condition="!employmentSalaryList"><return error="true" message="No salary found for salaried employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)}"/></if><set field="employmentSalary" from="employmentSalaryList[0]"/><set field="payAmount" from="employmentSalary.amount"/><set field="currencyUomId" from="employmentSalary.currencyUomId"/><if condition="employment.fromDate != null && employment.fromDate > fromTimestamp"><set field="partialFrom" from="employment.fromDate"/></if><if condition="employment.thruDate != null && employment.thruDate < thruTimestamp"><set field="partialThru" from="employment.thruDate"/></if><if condition="partialFrom || partialThru"><if condition="partialFrom"><set field="partialFromDate" from="new java.sql.Date(partialFrom.time)"/><else><set field="partialFromDate" from="timePeriod.fromDate"/></else></if><if condition="partialThru"><set field="partialThruDate" from="new java.sql.Date(partialThru.time+24*60*60*1000-1)"/><else><set field="partialThruDate" from="timePeriod.thruDate"/></else></if><set field="partialTime" from="partialThruDate.time - partialFromDate.time"/><set field="periodTime" from="timePeriod.thruDate.time - timePeriod.fromDate.time"/><set field="payAmount" from="ec.l10n.roundCurrency(payAmount * (partialTime/periodTime), currencyUomId)"/></if></then><else><entity-find entity-name="mantle.work.time.TimeEntry" list="timeEntryList" for-update="true"><econdition field-name="partyId" from="employment.fromPartyId"/><econdition field-name="clientPartyId" from="employment.toPartyId"/><econdition field-name="invoiceId" operator="is-null"/><econdition field-name="vendorInvoiceId" operator="is-null"/><econdition field-name="fromDate" operator="less-equals" from="thruTimestamp"/></entity-find><iterate list="timeEntryList" entry="timeEntry"><service-call name="mantle.work.TimeServices.get#TimeEntryAmount" out-map="[amountTotal:getTeaOut.amountTotal,amount:getTeaOut.amount,quantity:getTeaOut.quantity,currencyUomId:getTeaOut.currencyUomId,hourlyAmountTotal:getTeaOut.hourlyAmountTotal,pieceAmountTotal:getTeaOut.pieceAmountTotal,hourlyAmount:getTeaOut.hourlyAmount,pieceAmount:getTeaOut.pieceAmount,hours:getTeaOut.hours,pieceCount:getTeaOut.pieceCount]" in-map="[timeEntryId:timeEntry.timeEntryId, timeEntry:timeEntry, ratePurposeEnumId:ratePurposeEnumId]"/><set field="payAmount" from="payAmount + getTeaOut.amountTotal"/><set field="currencyUomId" from="getTeaOut.currencyUomId"/></iterate><set field="payAmount" from="ec.l10n.roundCurrency(payAmount, currencyUomId)"/></else></if></actions></service>