<!--Service Location mantle.product.AssetServices.reduce#AssetReservation--><service verb="reduce" noun="AssetReservation"><in-parameters><parameter name="assetReservationId" required="true" entity-name="mantle.product.issuance.AssetReservation" field-name="assetReservationId"/><parameter name="quantityToDeduct" type="BigDecimal"><description><![CDATA[Defaults to entire quantityNotIssued, limited to quantityNotIssued]]></description></parameter><parameter name="reserveIncreasedAsset" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="quantityDeducted" type="BigDecimal"/></out-parameters><actions><entity-find-one entity-name="mantle.product.issuance.AssetReservation" value-field="existingRes"/><if condition="!quantityToDeduct"><set field="quantityToDeduct" from="existingRes.quantityNotIssued"/></if><if condition="quantityToDeduct >= existingRes.quantity && existingRes.quantity == existingRes.quantityNotIssued"><then><service-call name="create#mantle.product.asset.AssetDetail" in-map="[assetId:existingRes.assetId,                                 effectiveDate:ec.user.nowTimestamp, availableToPromiseDiff:existingRes.quantity,                                 assetReservationId:existingRes.assetReservationId, productId:existingRes.productId, orderId:existingRes.orderId]"/><set field="quantityDeducted" from="existingRes.quantity"/><entity-delete value-field="existingRes"/></then><else><set field="curQuantityToDeduct" from="existingRes.quantityNotIssued > quantityToDeduct ?                                 quantityToDeduct : existingRes.quantityNotIssued"/><if condition="curQuantityToDeduct"><service-call name="create#mantle.product.asset.AssetDetail" in-map="[assetId:existingRes.assetId,                             effectiveDate:ec.user.nowTimestamp, availableToPromiseDiff:curQuantityToDeduct,                             assetReservationId:existingRes.assetReservationId, productId:existingRes.productId,                             orderId:existingRes.orderId, orderItemSeqId:existingRes.orderItemSeqId]"/></if><set field="existingRes.quantity" from="existingRes.quantity - curQuantityToDeduct"/><set field="existingRes.quantityNotAvailable" from="existingRes.quantityNotAvailable > curQuantityToDeduct ?                                     existingRes.quantityNotAvailable - curQuantityToDeduct : 0.0"/><set field="existingRes.quantityNotIssued" from="existingRes.quantityNotIssued - curQuantityToDeduct"/><if condition="existingRes.quantity < 0.0"><return error="true" message="In reduce#AssetReservation got negative quantity ${existingRes.quantity}, quantity deducted ${curQuantityToDeduct}"/></if><if condition="existingRes.quantity == 0.0 || existingRes.quantityNotIssued == 0.0"><then><entity-delete value-field="existingRes"/></then><else><entity-update value-field="existingRes"/></else></if><set field="quantityDeducted" from="curQuantityToDeduct"/></else></if><if condition="reserveIncreasedAsset"><service-call name="mantle.product.AssetServices.reserve#IncreasedAsset" in-map="[assetId:existingRes.assetId]"/></if></actions></service>