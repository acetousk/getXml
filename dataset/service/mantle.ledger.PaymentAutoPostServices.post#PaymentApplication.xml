<!--Service Location mantle.ledger.PaymentAutoPostServices.post#PaymentApplication--><service verb="post" noun="PaymentApplication"><in-parameters><parameter name="paymentApplicationId" required="true" entity-name="mantle.account.payment.PaymentApplication" field-name="paymentApplicationId"/></in-parameters><out-parameters><parameter name="acctgTransId"/></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.PaymentApplication" value-field="paymentApplication" for-update="true"/><if condition="paymentApplication.amountApplied == 0.0"><return/></if><set field="paymentId" from="paymentApplication.paymentId"/><set field="toPaymentId" from="paymentApplication.toPaymentId"/><set field="invoiceId" from="paymentApplication.invoiceId"/><set field="toInvoiceId" from="paymentApplication.toInvoiceId"/><if condition="toPaymentId && !paymentId"><return error="true" message="PaymentApplication ${paymentApplicationId} not valid, has toPaymentId but no paymentId"/></if><if condition="toInvoiceId && !invoiceId"><return error="true" message="PaymentApplication ${paymentApplicationId} not valid, has toInvoiceId but no invoiceId"/></if><if condition="!paymentId && !invoiceId"><return error="true" message="PaymentApplication ${paymentApplicationId} not valid, has no paymentId and no invoiceId"/></if><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="existingTransList"><econdition field-name="paymentApplicationId"/><econdition field-name="reversedByAcctgTransId" from="null"/><econdition field-name="reverseOfAcctgTransId" from="null"/><econdition field-name="acctgTransTypeEnumId" operator="in" from="['AttPayment', 'AttDisbursement', 'AttReceipt',                         'AttPaymentAdjust', 'AttIncomingPayment', 'AttOutgoingPayment',                         'AttOutgoingPaymentAp', 'AttIncomingPaymentAp', 'AttPaymentInOutAppl', 'AttInvoiceInOutAppl', 'AttPaymentApplied']"/></entity-find><if condition="existingTransList"><return message="Payment Application ${paymentApplicationId} has already been posted in accounting transaction ${existingTransList*.acctgTransId}"/></if><if condition="paymentId"><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/><if condition="payment == null"><return error="true" message="Could not find from Payment with ID ${paymentId}"/></if></if><if condition="toPaymentId"><entity-find-one entity-name="mantle.account.payment.Payment" value-field="toPayment"><field-map field-name="paymentId" from="toPaymentId"/></entity-find-one><if condition="toPayment == null"><return error="true" message="Could not find to Payment with ID ${toPaymentId}"/></if></if><if condition="invoiceId"><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><if condition="invoice == null"><return error="true" message="Could not find Invoice with ID ${invoiceId}"/></if></if><if condition="toInvoiceId"><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="toInvoice"><field-map field-name="invoiceId" from="toInvoiceId"/></entity-find-one><if condition="toInvoice == null"><return error="true" message="Could not find to Invoice with ID ${toInvoiceId}"/></if></if><if condition="paymentId"><then><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="paymentTransList"><econdition field-name="paymentId" from="payment.paymentId"/><econdition field-name="reversedByAcctgTransId" from="null"/><econdition field-name="reverseOfAcctgTransId" from="null"/><econdition field-name="acctgTransTypeEnumId" operator="in" from="['AttPayment', 'AttDisbursement', 'AttReceipt', 'AttIncomingPayment', 'AttOutgoingPayment']"/></entity-find><if condition="!paymentTransList"><log level="trace" message="Payment ${payment.paymentId} has not yet been posted, not posting PaymentApplication"/><set field="paymentApplication.acctgTransResultEnumId" value="AtrPaymentNotPosted"/><entity-update value-field="paymentApplication"/><return/></if><set field="foundUnappliedEntry" from="false"/><iterate list="paymentTransList" entry="paymentTrans"><entity-find-count entity-name="mantle.ledger.transaction.AcctgTransEntryGlAccount" count-field="entryCount"><econdition field-name="acctgTransId" from="paymentTrans.acctgTransId"/><econdition field-name="glAccountClassEnumId" operator="in" value="UNEARNED_REVENUE,PREPAID_EXPENSE"/></entity-find-count><if condition="entryCount > 0"><set field="foundUnappliedEntry" from="true"/></if></iterate><if condition="!foundUnappliedEntry"><log message="Payment ${payment.paymentId} has been posted but doesn't have an entry for an unapplied account, not posting PaymentApplication"/><set field="paymentApplication.acctgTransResultEnumId" value="AtrPaymentNotPosted"/><entity-update value-field="paymentApplication"/><return/></if><set field="fromPartyId" from="payment.fromPartyId"/><set field="toPartyId" from="payment.toPartyId"/><set field="amountUomId" from="payment.amountUomId"/><service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentPartyAcctgPreferences" in-map="[payment:payment]" out-map="[fromPartyAcctgPreference:context.fromPartyAcctgPreference,toPartyAcctgPreference:context.toPartyAcctgPreference]"/></then><else><set field="fromPartyId" from="invoice.fromPartyId"/><set field="toPartyId" from="invoice.toPartyId"/><set field="amountUomId" from="invoice.currencyUomId"/><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoicePartyAcctgPreferences" in-map="[invoice:invoice]" out-map="[fromPartyAcctgPreference:context.fromPartyAcctgPreference,toPartyAcctgPreference:context.toPartyAcctgPreference]"/></else></if><if condition="fromPartyAcctgPreference == null && toPartyAcctgPreference == null"><log level="trace" message="Not posting payment application [${paymentApplicationId}] for payment [${payment.paymentId}], could not find PartyAcctgPreference for From Party [${payment.fromPartyId}], To Party [${payment.toPartyId}], or Override Party [${payment.overrideOrgPartyId}]"/><set field="paymentApplication.acctgTransResultEnumId" value="AtrNoAcctgPreference"/><entity-update value-field="paymentApplication"/><return/></if><set field="transactionDate" from="paymentApplication.appliedDate ?: payment.effectiveDate"/><if condition="fromPartyAcctgPreference != null"><service-call name="mantle.ledger.LedgerServices.create#AcctgTrans" out-map="[acctgTransId:context.acctgTransId]" in-map="[acctgTransTypeEnumId:(paymentId ? (invoiceId ? 'AttOutgoingPaymentAp' : 'AttPaymentInOutAppl') : 'AttInvoiceInOutAppl'),                             organizationPartyId:fromPartyId, otherPartyId:toPartyId, amountUomId:amountUomId,                             paymentId:paymentId, invoiceId:invoiceId, toPaymentId:toPaymentId, toInvoiceId:toInvoiceId,                             paymentApplicationId:paymentApplicationId, transactionDate:transactionDate]"/><entity-find-one entity-name="mantle.ledger.transaction.AcctgTrans" value-field="fromAcctgTrans"/></if><if condition="toPartyAcctgPreference != null"><service-call name="mantle.ledger.LedgerServices.create#AcctgTrans" out-map="[acctgTransId:context.acctgTransId]" in-map="[acctgTransTypeEnumId:(paymentId ? (invoiceId ? 'AttIncomingPaymentAp' : 'AttPaymentInOutAppl') : 'AttInvoiceInOutAppl'),                             organizationPartyId:toPartyId, otherPartyId:fromPartyId, amountUomId:amountUomId,                             paymentId:paymentId, invoiceId:invoiceId, toPaymentId:toPaymentId, toInvoiceId:toInvoiceId,                             paymentApplicationId:paymentApplicationId, transactionDate:transactionDate]"/><entity-find-one entity-name="mantle.ledger.transaction.AcctgTrans" value-field="toAcctgTrans"/></if><set field="useErrorJournal" from="false"/><if condition="fromPartyAcctgPreference != null"><if condition="paymentId"><then><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" out-map="[useErrorJournal:context.useErrorJournal]" in-map="[paymentTypeEnumId:payment.paymentTypeEnumId, partyAcctgPreference:fromPartyAcctgPreference, acctgTrans:fromAcctgTrans,                                 amount:paymentApplication.amountApplied, organizationPartyId:fromPartyId, otherPartyId:toPartyId,                                 isApplied:'N', isPayable:'Y', debitCreditFlag:'C', useErrorJournal:useErrorJournal]"/><if condition="invoiceId"><then><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoiceTypeTransType" out-map="[acctgTransTypeEnumId:fromInvoiceTypeTransTypeOut.acctgTransTypeEnumId,glAccountId:fromInvoiceTypeTransTypeOut.glAccountId,glAccountTypeEnumId:fromInvoiceTypeTransTypeOut.glAccountTypeEnumId]" in-map="[invoiceTypeEnumId:invoice.invoiceTypeEnumId, organizationPartyId:fromPartyId, isPayable:'Y']"/><if condition="!fromInvoiceTypeTransTypeOut.glAccountId"><set field="useErrorJournal" from="true"/></if><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[amount:paymentApplication.amountApplied, acctgTransId:fromAcctgTrans.acctgTransId, acctgTrans:fromAcctgTrans,                                     debitCreditFlag:'D', glAccountTypeEnumId:fromInvoiceTypeTransTypeOut.glAccountTypeEnumId,                                     glAccountId:fromInvoiceTypeTransTypeOut.glAccountId]"/></then><else><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" out-map="[useErrorJournal:context.useErrorJournal]" in-map="[paymentTypeEnumId:toPayment.paymentTypeEnumId, partyAcctgPreference:fromPartyAcctgPreference, acctgTrans:fromAcctgTrans,                                     amount:paymentApplication.amountApplied, organizationPartyId:fromPartyId, otherPartyId:toPartyId,                                     isApplied:'N', isPayable:'N', debitCreditFlag:'D', useErrorJournal:useErrorJournal]"/></else></if></then><else><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoiceTypeTransType" out-map="[acctgTransTypeEnumId:fromFromInvoiceTypeTransTypeOut.acctgTransTypeEnumId,glAccountId:fromFromInvoiceTypeTransTypeOut.glAccountId,glAccountTypeEnumId:fromFromInvoiceTypeTransTypeOut.glAccountTypeEnumId]" in-map="[invoiceTypeEnumId:invoice.invoiceTypeEnumId, organizationPartyId:fromPartyId, isPayable:'N']"/><if condition="!fromFromInvoiceTypeTransTypeOut.glAccountId"><set field="useErrorJournal" from="true"/></if><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[amount:paymentApplication.amountApplied, acctgTransId:fromAcctgTrans.acctgTransId, acctgTrans:fromAcctgTrans,                                 debitCreditFlag:'C', glAccountTypeEnumId:fromFromInvoiceTypeTransTypeOut.glAccountTypeEnumId,                                 glAccountId:fromFromInvoiceTypeTransTypeOut.glAccountId]"/><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoiceTypeTransType" out-map="[acctgTransTypeEnumId:fromToInvoiceTypeTransTypeOut.acctgTransTypeEnumId,glAccountId:fromToInvoiceTypeTransTypeOut.glAccountId,glAccountTypeEnumId:fromToInvoiceTypeTransTypeOut.glAccountTypeEnumId]" in-map="[invoiceTypeEnumId:toInvoice.invoiceTypeEnumId, organizationPartyId:fromPartyId, isPayable:'Y']"/><if condition="!fromToInvoiceTypeTransTypeOut.glAccountId"><set field="useErrorJournal" from="true"/></if><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[amount:paymentApplication.amountApplied, acctgTransId:fromAcctgTrans.acctgTransId, acctgTrans:fromAcctgTrans,                                 debitCreditFlag:'D', glAccountTypeEnumId:fromToInvoiceTypeTransTypeOut.glAccountTypeEnumId,                                 glAccountId:fromToInvoiceTypeTransTypeOut.glAccountId]"/></else></if></if><if condition="toPartyAcctgPreference != null"><if condition="paymentId"><then><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" out-map="[useErrorJournal:context.useErrorJournal]" in-map="[paymentTypeEnumId:payment.paymentTypeEnumId, partyAcctgPreference:toPartyAcctgPreference, acctgTrans:toAcctgTrans,                                 amount:paymentApplication.amountApplied, organizationPartyId:toPartyId, otherPartyId:fromPartyId,                                 isApplied:'N', isPayable:'N', debitCreditFlag:'D', useErrorJournal:useErrorJournal]"/><if condition="invoiceId"><then><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoiceTypeTransType" out-map="[acctgTransTypeEnumId:toInvoiceTypeTransTypeOut.acctgTransTypeEnumId,glAccountId:toInvoiceTypeTransTypeOut.glAccountId,glAccountTypeEnumId:toInvoiceTypeTransTypeOut.glAccountTypeEnumId]" in-map="[invoiceTypeEnumId:invoice.invoiceTypeEnumId, organizationPartyId:toPartyId, isPayable:'N']"/><if condition="!toInvoiceTypeTransTypeOut.glAccountId"><set field="useErrorJournal" from="true"/></if><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[amount:paymentApplication.amountApplied, acctgTransId:toAcctgTrans.acctgTransId, acctgTrans:toAcctgTrans,                                     debitCreditFlag:'C', glAccountTypeEnumId:toInvoiceTypeTransTypeOut.glAccountTypeEnumId,                                     glAccountId:toInvoiceTypeTransTypeOut.glAccountId]"/></then><else><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" out-map="[useErrorJournal:context.useErrorJournal]" in-map="[paymentTypeEnumId:toPayment.paymentTypeEnumId, partyAcctgPreference:toPartyAcctgPreference, acctgTrans:toAcctgTrans,                                     amount:paymentApplication.amountApplied, organizationPartyId:toPartyId, otherPartyId:fromPartyId,                                     isApplied:'N', isPayable:'Y', debitCreditFlag:'C', useErrorJournal:useErrorJournal]"/></else></if></then><else><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoiceTypeTransType" out-map="[acctgTransTypeEnumId:toFromInvoiceTypeTransTypeOut.acctgTransTypeEnumId,glAccountId:toFromInvoiceTypeTransTypeOut.glAccountId,glAccountTypeEnumId:toFromInvoiceTypeTransTypeOut.glAccountTypeEnumId]" in-map="[invoiceTypeEnumId:invoice.invoiceTypeEnumId, organizationPartyId:toPartyId, isPayable:'Y']"/><if condition="!toFromInvoiceTypeTransTypeOut.glAccountId"><set field="useErrorJournal" from="true"/></if><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[amount:paymentApplication.amountApplied, acctgTransId:toAcctgTrans.acctgTransId, acctgTrans:toAcctgTrans,                                 debitCreditFlag:'D', glAccountTypeEnumId:toFromInvoiceTypeTransTypeOut.glAccountTypeEnumId,                                 glAccountId:toFromInvoiceTypeTransTypeOut.glAccountId]"/><service-call name="mantle.ledger.InvoiceAutoPostServices.get#InvoiceTypeTransType" out-map="[acctgTransTypeEnumId:toToInvoiceTypeTransTypeOut.acctgTransTypeEnumId,glAccountId:toToInvoiceTypeTransTypeOut.glAccountId,glAccountTypeEnumId:toToInvoiceTypeTransTypeOut.glAccountTypeEnumId]" in-map="[invoiceTypeEnumId:toInvoice.invoiceTypeEnumId, organizationPartyId:toPartyId, isPayable:'N']"/><if condition="!toToInvoiceTypeTransTypeOut.glAccountId"><set field="useErrorJournal" from="true"/></if><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[amount:paymentApplication.amountApplied, acctgTransId:toAcctgTrans.acctgTransId, acctgTrans:toAcctgTrans,                                 debitCreditFlag:'C', glAccountTypeEnumId:toToInvoiceTypeTransTypeOut.glAccountTypeEnumId,                                 glAccountId:toToInvoiceTypeTransTypeOut.glAccountId]"/></else></if></if><if condition="useErrorJournal"><then><if condition="fromPartyAcctgPreference?.errorGlJournalId"><service-call name="update#mantle.ledger.transaction.AcctgTrans" in-map="[acctgTransId:fromAcctgTrans.acctgTransId, glJournalId:fromPartyAcctgPreference.errorGlJournalId]"/></if><if condition="toPartyAcctgPreference?.errorGlJournalId"><service-call name="update#mantle.ledger.transaction.AcctgTrans" in-map="[acctgTransId:toAcctgTrans.acctgTransId, glJournalId:toPartyAcctgPreference.errorGlJournalId]"/></if></then><else><if condition="fromPartyAcctgPreference != null"><service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:fromAcctgTrans.acctgTransId]"/></if><if condition="toPartyAcctgPreference != null"><service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:toAcctgTrans.acctgTransId]"/></if></else></if><set field="paymentApplication.acctgTransResultEnumId" value="AtrSuccess"/><entity-update value-field="paymentApplication"/></actions></service>