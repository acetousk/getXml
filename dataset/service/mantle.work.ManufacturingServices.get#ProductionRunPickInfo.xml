<!--Service Location mantle.work.ManufacturingServices.get#ProductionRunPickInfo--><service verb="get" noun="ProductionRunPickInfo"><in-parameters><parameter name="workEffortId" required="true"/><parameter name="locationOrderBy" default-value="facilityId,areaId,aisleId,sectionId,levelId,positionId"/><parameter name="productOrderBy" default-value="pseudoId,productName"/></in-parameters><out-parameters><parameter name="workEffort" type="Map"/><parameter name="originFacility" type="Map"/><parameter name="destinationFacility" type="Map"/><parameter name="lineFacility" type="Map"/><parameter name="warehouseFacility" type="Map"/><parameter name="inventoryFacilityId"/><parameter name="inventoryFacility" type="Map"/><parameter name="consumeProductList" type="List"><parameter name="productItem" type="Map"/></parameter><parameter name="consumeProductIdList" type="List"><parameter name="productId"/></parameter><parameter name="equipmentList" type="List"><parameter name="equipment" type="Map"/></parameter><parameter name="locationInfoList" type="List"><description><![CDATA[locationInfoList is a  List of Maps with:
                      - FacilityLocation fields [facilityId, locationTypeEnumId, areaId, aisleId, sectionId, levelId, positionId]
                      - locationTypeEnum
                      - GeoPoint fields [latitude, longitude, elevation, elevationUomId]
                      - productInfoList - List of Maps with:
                        - Product fields (all fields from entity)
                        - quantity]]></description><parameter name="locationInfo" type="Map"/></parameter><parameter name="productInfoList" type="List"><description><![CDATA[productInfoList is a List of Maps with:
                      - Product fields (all fields from entity)
                      - quantity
                      - locationInfoList
                        - FacilityLocation fields [facilityId, locationTypeEnumId, areaId, aisleId, sectionId, levelId, positionId]
                        - locationTypeEnum
                        - GeoPoint fields [latitude, longitude, elevation, elevationUomId]
                        - quantity]]></description><parameter name="productInfo" type="Map"/></parameter></out-parameters><actions><entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort"/><entity-find-related-one value-field="workEffort" relationship-name="mantle.facility.Facility" to-value-field="lineFacility"/><entity-find-related-one value-field="lineFacility" relationship-name="Parent#mantle.facility.Facility" to-value-field="warehouseFacility"/><set field="inventoryFacilityId" from="warehouseFacility?.facilityId ?: lineFacility?.facilityId"/><set field="inventoryFacility" from="warehouseFacility ?: lineFacility"/><entity-find entity-name="mantle.work.effort.WorkEffortAssetAndAssign" list="equipmentList"><date-filter/><econdition field-name="workEffortId"/><order-by field-name="assetName"/></entity-find><set field="productInfoList" from="[]"/><set field="locationInfoMap" from="[:]"/><entity-find entity-name="mantle.work.effort.WorkEffortProduct" list="consumeProductList"><date-filter/><econdition field-name="workEffortId"/><econdition field-name="typeEnumId" value="WeptConsume"/></entity-find><set field="consumeProductIdList" from="consumeProductList?.productId ?: []"/><iterate list="consumeProductList" entry="consumeItem"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="consumeItem.productId"/></entity-find-one><set field="productLocationInfoMap" from="[:]"/><if condition="!consumeItem.estimatedQuantity"><continue/></if><entity-find entity-name="mantle.product.asset.Asset" list="assetList"><econdition field-name="productId" from="consumeItem.productId"/><econdition field-name="statusId" value="AstAvailable"/><econdition field-name="availableToPromiseTotal" operator="greater" from="0"/><econdition field-name="facilityId" from="inventoryFacilityId" ignore-if-empty="true"/><order-by field-name="receivedDate"/></entity-find><set field="curQuantityNotHandled" from="consumeItem.estimatedQuantity"/><iterate list="assetList" entry="asset"><set field="assetLocKey" from="[facilityId:asset.facilityId, locationSeqId:asset.locationSeqId]"/><entity-find-one entity-name="mantle.facility.FacilityLocation" value-field="facLoc"><field-map field-name="facilityId" from="asset.facilityId"/><field-map field-name="locationSeqId" from="asset.locationSeqId"/></entity-find-one><set field="locationTypeEnum" from="facLoc?.'FacilityLocationType#moqui.basic.Enumeration'"/><set field="locationInfo" from="locationInfoMap.get(assetLocKey)"/><if condition="!locationInfo"><set field="locationInfo" from="[productInfoMap:[:], locationTypeEnum:locationTypeEnum]"/><script><![CDATA[if (facLoc) locationInfo.putAll(facLoc)]]></script><if condition="facLoc?.geoPointId"><entity-find-one entity-name="moqui.basic.GeoPoint" value-field="geoPoint"><field-map field-name="facLoc.geoPointId"/></entity-find-one><script><![CDATA[if (geoPoint) locationInfo.putAll(geoPoint)]]></script></if><script><![CDATA[locationInfoMap.put(assetLocKey, locationInfo)]]></script></if><set field="productLocationInfo" from="productLocationInfoMap.get(assetLocKey)"/><if condition="!productLocationInfo"><set field="productLocationInfo" from="[locationTypeEnum:locationTypeEnum]"/><script><![CDATA[if (facLoc) productLocationInfo.putAll(facLoc)]]></script><if condition="facLoc?.geoPointId"><entity-find-one entity-name="moqui.basic.GeoPoint" value-field="geoPoint"><field-map field-name="facLoc.geoPointId"/></entity-find-one><script><![CDATA[if (geoPoint) productLocationInfo.putAll(geoPoint)]]></script></if><script><![CDATA[productLocationInfoMap.put(assetLocKey, productLocationInfo)]]></script></if><set field="quantityToAdd" from="curQuantityNotHandled > asset.availableToPromiseTotal ? asset.availableToPromiseTotal : curQuantityNotHandled"/><set field="productInfo" from="locationInfo.productInfoMap.get(consumeItem.productId)"/><if condition="!productInfo"><script><![CDATA[productInfo = [:]
                        productInfo.putAll(product)
                        locationInfo.productInfoMap.put(consumeItem.productId, productInfo)]]></script></if><script><![CDATA[addToBigDecimalInMap("quantity", quantityToAdd, productInfo)]]></script><script><![CDATA[addToBigDecimalInMap("quantity", quantityToAdd, productLocationInfo)]]></script><set field="curQuantityNotHandled" from="curQuantityNotHandled - quantityToAdd"/><if condition="curQuantityNotHandled == 0"><break/></if></iterate><set field="productLocationInfoList" from="new ArrayList(productLocationInfoMap.values())"/><order-map-list list="productLocationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><script><![CDATA[productInfo = [locationInfoList:productLocationInfoList,
                                   productLocationInfoMap:productLocationInfoMap,
                                   quantity:consumeItem.estimatedQuantity]
                    productInfo.putAll(product)
                    productInfoList.add(productInfo)]]></script></iterate><iterate list="locationInfoMap" entry="locationInfo" key="assetLocKey"><set field="locationInfo.productInfoList" from="new ArrayList(locationInfo.productInfoMap.values())"/><order-map-list list="locationInfo.productInfoList"><order-by field-name="${productOrderBy}"/></order-map-list></iterate><set field="locationInfoList" from="new ArrayList(locationInfoMap.values())"/><order-map-list list="locationInfoList"><order-by field-name="${locationOrderBy}"/></order-map-list><order-map-list list="productInfoList"><order-by field-name="${productOrderBy}"/></order-map-list></actions></service>