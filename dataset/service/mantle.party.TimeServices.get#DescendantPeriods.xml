<!--Service Location mantle.party.TimeServices.get#DescendantPeriods--><service verb="get" noun="DescendantPeriods"><in-parameters><parameter name="parentPeriodId" required="true"/><parameter name="timePeriodTypeId" required="true"/><parameter name="createMissing" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="timePeriodList" type="List"><parameter name="timePeriod" type="Map"/></parameter></out-parameters><actions><if condition="createMissing"><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="parentPeriod"><field-map field-name="timePeriodId" from="parentPeriodId"/></entity-find-one></if><set field="timePeriodList" from="new ArrayList()"/><entity-find entity-name="mantle.party.time.TimePeriod" list="childPeriodList"><econdition field-name="parentPeriodId"/><order-by field-name="thruDate"/></entity-find><if condition="createMissing"><if condition="childPeriodList"><then><set field="lastChildPeriod" from="childPeriodList.get(childPeriodList.size() - 1)"/><while condition="lastChildPeriod.thruDate < parentPeriod.thruDate"><service-call name="mantle.party.TimeServices.getOrCreate#NextTimePeriod" out-map="[nextTimePeriodId:createNextChildOut.nextTimePeriodId,nextTimePeriod:createNextChildOut.nextTimePeriod]" in-map="[timePeriodId:lastChildPeriod.timePeriodId]" out-map-add-to-existing="false"/><set field="lastChildPeriod" from="createNextChildOut.nextTimePeriod"/><script><![CDATA[childPeriodList.add(createNextChildOut.nextTimePeriod)]]></script></while></then><else><entity-find-one entity-name="mantle.party.time.TimePeriodType" value-field="targetPeriodType"><field-map field-name="timePeriodTypeId"/></entity-find-one><set field="childPeriodType" from="targetPeriodType"/><while condition="childPeriodType?.parentPeriodTypeId && childPeriodType.parentPeriodTypeId != parentPeriod.timePeriodTypeId"><entity-find-one entity-name="mantle.party.time.TimePeriodType" value-field="childPeriodType"><field-map field-name="timePeriodTypeId" from="childPeriodType.parentPeriodTypeId"/></entity-find-one></while><if condition="childPeriodType == null"><return error="true" message="Tried to create missing children but could not find parent period type for target type ${targetPeriodType.description}"/></if><entity-find entity-name="mantle.party.time.TimePeriod" list="mostRecentPeriodList" limit="1"><econdition field-name="partyId" from="parentPeriod.partyId"/><econdition field-name="timePeriodTypeId" from="childPeriodType.timePeriodTypeId"/><order-by field-name="-thruDate"/></entity-find><if condition="mostRecentPeriodList"><then><set field="lastChildPeriod" from="mostRecentPeriodList.get(0)"/></then><else><service-call name="mantle.party.TimeServices.getOrCreate#TimePeriod" out-map="[timePeriodId:lastChildOut.timePeriodId,timePeriod:lastChildOut.timePeriod]" in-map="[partyId:parentPeriod.partyId, timePeriodTypeId:childPeriodType.timePeriodTypeId,                                     fromDate:parentPeriod.fromDate, parentPeriodId:parentPeriod.timePeriodId]"/><set field="lastChildPeriod" from="lastChildOut.timePeriod"/><script><![CDATA[childPeriodList.add(lastChildPeriod)]]></script></else></if><while condition="lastChildPeriod.thruDate < parentPeriod.thruDate"><service-call name="mantle.party.TimeServices.getOrCreate#NextTimePeriod" out-map="[nextTimePeriodId:createNextChildOut.nextTimePeriodId,nextTimePeriod:createNextChildOut.nextTimePeriod]" in-map="[timePeriodId:lastChildPeriod.timePeriodId]" out-map-add-to-existing="false"/><set field="lastChildPeriod" from="createNextChildOut.nextTimePeriod"/><script><![CDATA[childPeriodList.add(lastChildPeriod)]]></script></while></else></if></if><iterate list="childPeriodList" entry="childPeriod"><if condition="childPeriod.timePeriodTypeId == timePeriodTypeId"><then><script><![CDATA[timePeriodList.add(childPeriod)]]></script></then><else><service-call name="mantle.party.TimeServices.get#DescendantPeriods" out-map="[timePeriodList:childGetOut.timePeriodList]" out-map-add-to-existing="false" in-map="[parentPeriodId:childPeriod.timePeriodId, timePeriodTypeId:timePeriodTypeId, createMissing:createMissing]"/><script><![CDATA[if (childGetOut.timePeriodList) timePeriodList.addAll(childGetOut.timePeriodList)]]></script></else></if></iterate></actions></service>