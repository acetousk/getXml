<!--Service Location mantle.ledger.LedgerReportServices.get#GlAccountClassReportInfo--><service verb="get" noun="GlAccountClassReportInfo"><in-parameters><parameter name="organizationPartyId" required="true"/><parameter name="timePeriodIdList" type="List" required="true"/><parameter name="glAccountClassEnumId" required="true"/><parameter name="negateDebit" type="Boolean" default="false"/><parameter name="negateCredit" type="Boolean" default="false"/><parameter name="classInfoById" type="Map"/></in-parameters><out-parameters><parameter name="classInfoMap" type="Map"/></out-parameters><actions><entity-find-one entity-name="moqui.basic.Enumeration" value-field="classEnum"><field-map field-name="enumId" from="glAccountClassEnumId"/></entity-find-one><if condition="!classEnum"><return error="true" message="Enumeration not found for ${glAccountClassEnumId}"/></if><set field="negate" from="false"/><if condition="negateDebit || negateCredit"><service-call name="mantle.ledger.LedgerServices.find#RootGlAccountClassEnum" out-map="[rootGlAccountClassEnumId:context.rootGlAccountClassEnumId,ancestorClassEnumIdSet:context.ancestorClassEnumIdSet,isContra:context.isContra]" in-map="[glAccountClassEnumId:glAccountClassEnumId]"/><set field="negate" from="(negateDebit && (rootGlAccountClassEnumId == 'DEBIT' || (rootGlAccountClassEnumId == 'CREDIT' && isContra == 'Y'))) ||                         (negateCredit && (rootGlAccountClassEnumId == 'CREDIT' || (rootGlAccountClassEnumId == 'DEBIT' && isContra == 'Y')))"/></if><entity-find entity-name="mantle.ledger.report.GlAccountOrgTimePeriodDetail" list="glAccountDetailList"><econdition field-name="timePeriodId" operator="in" from="timePeriodIdList"/><econdition field-name="glAccountClassEnumId"/><select-field field-name="timePeriodId,glAccountId,accountCode,accountName,isDebit"/><select-field field-name="beginningBalance,endingBalance,postedDebitsNoClosing,postedCreditsNoClosing"/></entity-find><set field="balanceByTimePeriod" from="[:]"/><set field="postedByTimePeriod" from="[:]"/><set field="postedNoClosingByTimePeriod" from="[:]"/><set field="glAccountInfoMap" from="[:]"/><iterate list="glAccountDetailList" entry="glAccountDetail"><script><![CDATA[boolean isDebit = glAccountDetail.isDebit.equals('Y')
                    BigDecimal balance = glAccountDetail.endingBalance ?: 0.0
                    BigDecimal posted = balance - (glAccountDetail.beginningBalance ?: 0.0)
                    BigDecimal postedNoClosing = isDebit ? ((glAccountDetail.postedDebitsNoClosing ?: 0.0) - (glAccountDetail.postedCreditsNoClosing ?: 0.0)) :
                            ((glAccountDetail.postedCreditsNoClosing ?: 0.0) - (glAccountDetail.postedDebitsNoClosing ?: 0.0))
                    if (negate) { balance = -balance; posted = -posted; postedNoClosing = -postedNoClosing }

                    addToBigDecimalInMap(glAccountDetail.timePeriodId, balance, balanceByTimePeriod)
                    addToBigDecimalInMap(glAccountDetail.timePeriodId, posted, postedByTimePeriod)
                    addToBigDecimalInMap(glAccountDetail.timePeriodId, postedNoClosing, postedNoClosingByTimePeriod)
                    addToBigDecimalInMap('ALL', balance, balanceByTimePeriod)
                    addToBigDecimalInMap('ALL', posted, postedByTimePeriod)
                    addToBigDecimalInMap('ALL', postedNoClosing, postedNoClosingByTimePeriod)

                    Map glAccountInfo = glAccountInfoMap.get(glAccountDetail.accountCode)
                    if (glAccountInfo == null) {
                        glAccountInfo = [accountCode:glAccountDetail.accountCode, accountName:glAccountDetail.accountName,
                                glAccountId:glAccountDetail.glAccountId, balanceByTimePeriod:[:], postedByTimePeriod:[:],
                                postedNoClosingByTimePeriod:[:]]
                        glAccountInfoMap.put(glAccountDetail.accountCode, glAccountInfo)
                    }
                    glAccountInfo.balanceByTimePeriod.put(glAccountDetail.timePeriodId, balance)
                    glAccountInfo.postedByTimePeriod.put(glAccountDetail.timePeriodId, posted)
                    glAccountInfo.postedNoClosingByTimePeriod.put(glAccountDetail.timePeriodId, postedNoClosing)
                    addToBigDecimalInMap('ALL', balance, glAccountInfo.balanceByTimePeriod)
                    addToBigDecimalInMap('ALL', posted, glAccountInfo.postedByTimePeriod)
                    addToBigDecimalInMap('ALL', postedNoClosing, glAccountInfo.postedNoClosingByTimePeriod)]]></script></iterate><set field="glAccountInfoList" from="new ArrayList(glAccountInfoMap.values())"/><order-map-list list="glAccountInfoList"><order-by field-name="accountCode"/></order-map-list><set field="childClassInfoList" from="[]"/><set field="childBalanceByTimePeriod" from="[:]"/><set field="childPostedByTimePeriod" from="[:]"/><set field="childPostedNoClosingByTimePeriod" from="[:]"/><entity-find entity-name="moqui.basic.Enumeration" list="childEnumList"><econdition field-name="parentEnumId" from="glAccountClassEnumId"/><order-by field-name="sequenceNum,description"/></entity-find><iterate list="childEnumList" entry="childEnum"><service-call name="mantle.ledger.LedgerReportServices.get#GlAccountClassReportInfo" out-map="[classInfoMap:childOut.classInfoMap]" in-map="[organizationPartyId:organizationPartyId, timePeriodIdList:timePeriodIdList,                             glAccountClassEnumId:childEnum.enumId, negateDebit:negateDebit, negateCredit:negateCredit,                             classInfoById:classInfoById]"/><script><![CDATA[childClassInfoList.add(childOut.classInfoMap)]]></script><iterate list="timePeriodIdList" entry="timePeriodId"><script><![CDATA[addToBigDecimalInMap(timePeriodId, childOut.classInfoMap.balanceByTimePeriod[timePeriodId], childBalanceByTimePeriod)
                        addToBigDecimalInMap(timePeriodId, childOut.classInfoMap.childBalanceByTimePeriod[timePeriodId], childBalanceByTimePeriod)
                        addToBigDecimalInMap(timePeriodId, childOut.classInfoMap.postedByTimePeriod[timePeriodId], childPostedByTimePeriod)
                        addToBigDecimalInMap(timePeriodId, childOut.classInfoMap.childPostedByTimePeriod[timePeriodId], childPostedByTimePeriod)
                        addToBigDecimalInMap(timePeriodId, childOut.classInfoMap.postedNoClosingByTimePeriod[timePeriodId], childPostedNoClosingByTimePeriod)
                        addToBigDecimalInMap(timePeriodId, childOut.classInfoMap.childPostedNoClosingByTimePeriod[timePeriodId], childPostedNoClosingByTimePeriod)

                        addToBigDecimalInMap('ALL', childBalanceByTimePeriod[timePeriodId], childBalanceByTimePeriod)
                        addToBigDecimalInMap('ALL', childPostedByTimePeriod[timePeriodId], childPostedByTimePeriod)
                        addToBigDecimalInMap('ALL', childPostedNoClosingByTimePeriod[timePeriodId], childPostedNoClosingByTimePeriod)]]></script></iterate></iterate><set field="totalBalanceByTimePeriod" from="[:]"/><set field="totalPostedByTimePeriod" from="[:]"/><set field="totalPostedNoClosingByTimePeriod" from="[:]"/><iterate list="timePeriodIdList" entry="timePeriodId"><script><![CDATA[addToBigDecimalInMap(timePeriodId, balanceByTimePeriod[timePeriodId], totalBalanceByTimePeriod)
                    addToBigDecimalInMap(timePeriodId, childBalanceByTimePeriod[timePeriodId], totalBalanceByTimePeriod)
                    addToBigDecimalInMap(timePeriodId, postedByTimePeriod[timePeriodId], totalPostedByTimePeriod)
                    addToBigDecimalInMap(timePeriodId, childPostedByTimePeriod[timePeriodId], totalPostedByTimePeriod)
                    addToBigDecimalInMap(timePeriodId, postedNoClosingByTimePeriod[timePeriodId], totalPostedNoClosingByTimePeriod)
                    addToBigDecimalInMap(timePeriodId, childPostedNoClosingByTimePeriod[timePeriodId], totalPostedNoClosingByTimePeriod)

                    addToBigDecimalInMap('ALL', totalBalanceByTimePeriod[timePeriodId], totalBalanceByTimePeriod)
                    addToBigDecimalInMap('ALL', totalPostedByTimePeriod[timePeriodId], totalPostedByTimePeriod)
                    addToBigDecimalInMap('ALL', totalPostedNoClosingByTimePeriod[timePeriodId], totalPostedNoClosingByTimePeriod)]]></script></iterate><set field="classInfoMap" from="[glAccountClassEnumId:glAccountClassEnumId, className:classEnum.description,                     balanceByTimePeriod:balanceByTimePeriod, childBalanceByTimePeriod:childBalanceByTimePeriod,                     postedByTimePeriod:postedByTimePeriod, childPostedByTimePeriod:childPostedByTimePeriod,                     postedNoClosingByTimePeriod:postedNoClosingByTimePeriod, childPostedNoClosingByTimePeriod:childPostedNoClosingByTimePeriod,                     totalBalanceByTimePeriod:totalBalanceByTimePeriod, totalPostedByTimePeriod:totalPostedByTimePeriod,                     totalPostedNoClosingByTimePeriod:totalPostedNoClosingByTimePeriod, childClassInfoList:childClassInfoList,                     glAccountDetailList:glAccountDetailList, glAccountInfoList:glAccountInfoList]"/><if condition="classInfoById != null"><script><![CDATA[classInfoById.put(glAccountClassEnumId, classInfoMap)]]></script></if></actions></service>