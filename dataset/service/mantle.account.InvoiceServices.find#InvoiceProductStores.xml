<!--Service Location mantle.account.InvoiceServices.find#InvoiceProductStores--><service verb="find" noun="InvoiceProductStores"><in-parameters><parameter name="invoiceId" required="true"/><parameter name="invoice" type="EntityValue"/></in-parameters><out-parameters><parameter name="productStoreIdSet" type="Set"/></out-parameters><actions><entity-find entity-name="mantle.order.OrderItemBilling" list="orderItemBillingList" distinct="true"><econdition field-name="invoiceId"/><select-field field-name="orderId"/></entity-find><set field="orderIdSet" from="new HashSet(orderItemBillingList*.orderId)"/><if condition="orderIdSet"><entity-find entity-name="mantle.order.OrderHeader" list="orderHeaderList" distinct="true"><econdition field-name="orderId" operator="in" from="orderIdSet"/><econdition field-name="productStoreId" operator="is-not-null"/><select-field field-name="productStoreId"/></entity-find><set field="productStoreIdSet" from="new HashSet(orderHeaderList*.productStoreId)"/></if><if condition="!productStoreIdSet"><if condition="invoice == null"><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/></if><if condition="invoice?.fromPartyId"><service-call name="mantle.party.PartyServices.get#PartySettingValue" out-map="[settingValue:ptySettingOut.settingValue]" in-map="[partyId:invoice.fromPartyId, partySettingTypeId:'OrgInvoiceProductStoreId']"/><if condition="ptySettingOut.settingValue"><entity-find-one entity-name="mantle.product.store.ProductStore" value-field="checkProdStore"><field-map field-name="productStoreId" from="ptySettingOut.settingValue"/></entity-find-one><if condition="checkProdStore != null"><then><set field="productStoreIdSet" from="new HashSet()"/><script><![CDATA[productStoreIdSet.add(ptySettingOut.settingValue)]]></script></then><else><log level="error" message="In find#InvoiceProductStores found OrgInvoiceProductStoreId setting for party ${invoice.fromPartyId} with invalid productStoreId ${ptySettingOut.settingValue}"/></else></if></if><if condition="!productStoreIdSet"><entity-find entity-name="mantle.product.store.ProductStore" list="prodStoreList" limit="2"><econdition field-name="organizationPartyId" from="invoice.fromPartyId"/></entity-find><if condition="prodStoreList.size() == 1"><set field="productStoreIdSet" from="new HashSet()"/><script><![CDATA[productStoreIdSet.add(prodStoreList[0].productStoreId)]]></script></if></if></if></if></actions></service>