<!--Service Location mantle.account.PaymentServices.get#SinglePaymentGatewayDetails--><service verb="get" noun="SinglePaymentGatewayDetails"><in-parameters><parameter name="paymentId" required="true"/><parameter name="payment" type="EntityValue"/></in-parameters><out-parameters><parameter name="paymentGatewayResponseId"/></out-parameters><actions><if condition="payment == null"><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/></if><if condition="payment == null"><return message="Payment ${paymentId} not found"/></if><if condition="!payment.paymentRefNum"><return message="Payment ${paymentId} does not have a transaction ID (reference number)"/></if><if condition="!paymentGatewayConfigId"><set field="paymentGatewayConfigId" from="payment.paymentGatewayConfigId"/></if><if condition="!paymentGatewayConfigId && payment.paymentMethodId"><set field="paymentMethod" from="payment.method"/><set field="paymentGatewayConfigId" from="paymentMethod?.paymentGatewayConfigId"/></if><if condition="!paymentGatewayConfigId && payment.paymentInstrumentEnumId == 'PiFinancialAccount'"><set field="paymentGatewayConfigId" value="FinancialAccountLocal"/></if><entity-find-one entity-name="mantle.account.method.PaymentGatewayConfig" value-field="paymentGatewayConfig" cache="true"/><if condition="paymentGatewayConfig == null"><return message="Not getting transaction details for Payment ${paymentId}, could not find Payment Gateway Config"/></if><if condition="!paymentGatewayConfig.detailsServiceName"><return type="warning" message="Not getting transaction details for Payment ${paymentId}, no detailsServiceName in PaymentGatewayConfig ${paymentGatewayConfigId}"/></if><if condition="!payment.paymentGatewayConfigId"><set field="payment.paymentGatewayConfigId" from="paymentGatewayConfigId"/><entity-update value-field="payment"/></if><service-call name="${paymentGatewayConfig.detailsServiceName}" out-map="detailOut" in-map="[paymentId:payment.paymentId, paymentGatewayConfigId:paymentGatewayConfig.paymentGatewayConfigId]"/><set field="paymentGatewayResponseId" from="detailOut.paymentGatewayResponseId"/><if condition="detailOut.gatewayStatusId"><then><if condition="detailOut.gatewayStatusId != payment.statusId"><then><if condition="detailOut.gatewayStatusId == 'PmntConfirmed' && payment.statusId != 'PmntDelivered'"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId, statusId:'PmntDelivered',                                 effectiveDate:(detailOut.effectiveDate ?: detailOut.settlementDate ?: payment.effectiveDate ?: ec.user.nowTimestamp)]"/></if><if condition="detailOut.gatewayStatusId == 'PmntDelivered'"><then><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId,                                 effectiveDate:(detailOut.effectiveDate ?: payment.effectiveDate ?: ec.user.nowTimestamp), statusId:'PmntDelivered']"/></then><else-if condition="detailOut.gatewayStatusId == 'PmntConfirmed'"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId,                                 settlementDate:(detailOut.settlementDate ?: payment.settlementDate), statusId:'PmntConfirmed']"/></else-if><else><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId, statusId:detailOut.gatewayStatusId]"/></else></if><message><![CDATA[Status for Payment ${paymentId} updated from gateway transaction status]]></message></then><else><if condition="detailOut.settlementDate != null && payment.settlementDate == null"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId, settlementDate:detailOut.settlementDate]"/></if><message><![CDATA[Status for Payment ${paymentId} matches current gateway transaction status]]></message></else></if></then><else><message><![CDATA[No automatically handled status for Payment ${paymentId} found from gateway, see gateway history for details]]></message></else></if></actions></service>