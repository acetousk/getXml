<!--Service Location org.moqui.impl.PrintServices.get#ServerPrinters--><service verb="get" noun="ServerPrinters"><in-parameters><parameter name="serverHost" required="true"/><parameter name="serverPort" type="Integer" default="631"/></in-parameters><out-parameters><parameter name="networkPrinterIdList" type="List"><parameter name="networkPrinterId"/></parameter></out-parameters><actions><set field="networkPrinterIdList" from="[]"/><set field="printerNameSet" from="new HashSet()"/><entity-find entity-name="moqui.basic.print.NetworkPrinter" list="networkPrinterList"><econdition field-name="serverHost"/><econdition field-name="serverPort"/></entity-find><iterate list="networkPrinterList" entry="networkPrinter"><script><![CDATA[networkPrinterIdList.add(networkPrinter.networkPrinterId)]]></script><script><![CDATA[printerNameSet.add(networkPrinter.printerName)]]></script></iterate><set field="cupsClient" from="new org.cups4j.CupsClient(serverHost, serverPort)"/><set field="printerList" from="cupsClient.getPrinters()"/><iterate list="printerList" entry="cupsPrinter"><if condition="!printerNameSet.contains(cupsPrinter.getName())"><service-call name="create#moqui.basic.print.NetworkPrinter" out-map="[networkPrinterId:npOut.networkPrinterId,serverHost:npOut.serverHost,serverPort:npOut.serverPort,printerName:npOut.printerName,description:npOut.description,location:npOut.location,assetId:npOut.assetId,lastUpdatedStamp:npOut.lastUpdatedStamp]" in-map="[serverHost:serverHost, serverPort:serverPort, printerName:cupsPrinter.getName(),                                 description:cupsPrinter.getDescription(), location:cupsPrinter.getLocation()]"/><script><![CDATA[networkPrinterIdList.add(npOut.networkPrinterId)]]></script></if></iterate></actions></service>