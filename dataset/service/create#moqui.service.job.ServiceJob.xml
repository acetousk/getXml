<!--Service Location create#moqui.service.job.ServiceJob--><service verb="create" noun="moqui.service.job.ServiceJob"><in-parameters><parameter name="jobName" type="java.lang.String" required="true"/><parameter name="description" type="java.lang.String" required="false"/><parameter name="serviceName" type="java.lang.String" required="false"/><parameter name="transactionTimeout" type="java.lang.Long" required="false"/><parameter name="topic" type="java.lang.String" required="false"/><parameter name="localOnly" type="java.lang.String" required="false"/><parameter name="cronExpression" type="java.lang.String" required="false"/><parameter name="fromDate" type="java.sql.Timestamp" required="false"/><parameter name="thruDate" type="java.sql.Timestamp" required="false"/><parameter name="repeatCount" type="java.lang.Long" required="false"/><parameter name="paused" type="java.lang.String" required="false"/><parameter name="expireLockTime" type="java.lang.Long" required="false"/><parameter name="minRetryTime" type="java.lang.Long" required="false"/><parameter name="priority" type="java.lang.Long" required="false"/></in-parameters><out-parameters><parameter name="jobName" type="java.lang.String" required="true"/></out-parameters><action><service-call name="create#moqui.service.job.ServiceJob" in-map="[jobName:context.jobName,description:context.description,serviceName:context.serviceName,transactionTimeout:context.transactionTimeout,topic:context.topic,localOnly:context.localOnly,cronExpression:context.cronExpression,fromDate:context.fromDate,thruDate:context.thruDate,repeatCount:context.repeatCount,paused:context.paused,expireLockTime:context.expireLockTime,minRetryTime:context.minRetryTime,priority:context.priority]" out-map="[jobName:context.jobName]"/></action></service>