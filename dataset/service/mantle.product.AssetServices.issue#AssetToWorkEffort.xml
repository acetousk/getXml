<!--Service Location mantle.product.AssetServices.issue#AssetToWorkEffort--><service verb="issue" noun="AssetToWorkEffort"><in-parameters><parameter name="assetId" required="true" default="defaultAssetId"/><parameter name="asset" type="EntityValue"/><parameter name="defaultAssetId"/><parameter name="workEffortId" required="true"/><parameter name="quantity" type="BigDecimal"><description><![CDATA[If not specified entire quantity of given Asset record will be used.]]></description></parameter><parameter name="quantityUomId"><description><![CDATA[If not specified product Uom Id will be used.]]></description></parameter><parameter name="issuedDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="noConsumeProduct" default-value="error"><description><![CDATA[If the asset has a productId that is
                not one of the WorkEffort consume products, "add" it, "ignore" it, or return an "error"?]]></description></parameter><parameter name="noOriginFacility" default-value="error"><description><![CDATA[If the asset has a originFacilityId that is
                not one of the WorkEffort origin facilities, "add" it, "ignore" it, or return an "error"?]]></description></parameter></in-parameters><out-parameters/><actions><if condition="asset == null"><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset" for-update="true"><field-map field-name="assetId"/></entity-find-one></if><if condition="asset == null"><return error="true" message="Asset not found with ID ${assetId}"/></if><if condition="quantity && quantityUomId"><then><service-call name="mantle.shipment.ShipmentServices.convert#ProductBoxQuantity" out-map="[originalQuantityUomId:cvtQty.originalQuantityUomId,convertedQuantity:cvtQty.convertedQuantity]" in-map="[productId:asset.productId, originalQuantity:quantity, originalQuantityUomId:quantityUomId]"/><set field="quantity" from="cvtQty.convertedQuantity"/></then><else-if condition="!quantity"><set field="quantity" from="asset.availableToPromiseTotal"/></else-if></if><if condition="quantity > asset.availableToPromiseTotal"><set field="uomDescription" from="asset?.product?.amountUom?' '+(ec.resource.expand('UomNameTemplate','',asset.product.amountUom)):''"/><message error="true"><![CDATA[Quantity specified (${ec.l10n.format(quantity, '#,##0.00')}${uomDescription}) is greater than the quantity available (${ec.l10n.format(asset.availableToPromiseTotal, '#,##0.00')}${uomDescription})]]></message></if><entity-find-one entity-name="mantle.facility.Facility" value-field="facility" cache="true"><field-map field-name="facilityId" from="asset.facilityId"/></entity-find-one><if condition="facility?.assetAllowIssueOverQoh != 'Y'"><if condition="quantity > asset.quantityOnHandTotal"><return error="true" message="For work effort ${workEffortId} tried to issue quantity ${quantity} which is greater than quantity on hand ${asset.quantityOnHandTotal} for asset ${asset.assetId}"/></if></if><entity-find entity-name="mantle.work.effort.WorkEffortProduct" list="consumeProductList"><econdition field-name="workEffortId"/><econdition field-name="productId" from="asset.productId"/><econdition field-name="typeEnumId" value="WeptConsume"/></entity-find><if condition="!consumeProductList"><if condition="noConsumeProduct == 'add'"><then><service-call name="create#mantle.work.effort.WorkEffortProduct" in-map="[workEffortId:workEffortId,                             productId:asset.productId, typeEnumId:'WeptConsume', estimatedQuantity:quantity]"/></then><else-if condition="noConsumeProduct != 'ignore'"><entity-find-one entity-name="mantle.product.Product" value-field="product"><field-map field-name="productId" from="asset.productId"/></entity-find-one><message error="true"><![CDATA[Not issuing Asset [${assetId}], Product ${ec.resource.expand('ProductNameTemplate','',product)} is not a product to consume]]></message></else-if></if></if><if condition="asset.originFacilityId"><entity-find entity-name="mantle.work.effort.WorkEffortFacility" list="originFacilityList"><econdition field-name="workEffortId"/><econdition field-name="facilityId" from="asset.originFacilityId"/><econdition field-name="typeEnumId" value="WeftOrigin"/></entity-find><if condition="!originFacilityList"><if condition="noOriginFacility == 'add'"><then><service-call name="create#mantle.work.effort.WorkEffortFacility" in-map="[workEffortId:workEffortId,                             facilityId:asset.originFacilityId, typeEnumId:'WeftOrigin']"/></then><else-if condition="noOriginFacility != 'ignore'"><entity-find-one entity-name="mantle.facility.Facility" value-field="facility"><field-map field-name="facilityId" from="asset.originFacilityId"/></entity-find-one><message error="true"><![CDATA[Not issuing Asset [${assetId}], Origin Facility ${ec.resource.expand('FacilityNameTemplate','',facility)} is not an origin facility]]></message></else-if></if></if></if><check-errors/><set field="baseMap" from="[workEffortId:workEffortId, assetId:asset.assetId, productId:asset.productId]"/><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="existingIssuanceList"><econdition field-name="assetId"/><econdition field-name="workEffortId"/><econdition field-name="shipmentId" ignore-if-empty="true"/><econdition field-name="shipmentItemSourceId" ignore-if-empty="true"/><econdition field-name="orderId" ignore-if-empty="true"/><econdition field-name="orderItemSeqId" ignore-if-empty="true"/><econdition field-name="invoiceId" ignore-if-empty="true"/><econdition field-name="invoiceItemSeqId" ignore-if-empty="true"/></entity-find><if condition="existingIssuanceList"><then><set field="existingIssuance" from="existingIssuanceList[0]"/><service-call name="update#mantle.product.issuance.AssetIssuance" in-map="baseMap +                         [assetIssuanceId:existingIssuance.assetIssuanceId, quantity:(existingIssuance.quantity + quantity)]"/><service-call name="mantle.product.AssetServices.change#AssetQuantity" in-map="baseMap +                         [effectiveDate:issuedDate, quantityDiff:-quantity, assetIssuanceId:existingIssuance.assetIssuanceId]"/></then><else><service-call name="create#mantle.product.issuance.AssetIssuance" out-map="[assetIssuanceId:issueOut.assetIssuanceId,assetId:issueOut.assetId,assetReservationId:issueOut.assetReservationId,orderId:issueOut.orderId,orderItemSeqId:issueOut.orderItemSeqId,shipmentId:issueOut.shipmentId,shipmentItemSourceId:issueOut.shipmentItemSourceId,productId:issueOut.productId,invoiceId:issueOut.invoiceId,invoiceItemSeqId:issueOut.invoiceItemSeqId,returnId:issueOut.returnId,returnItemSeqId:issueOut.returnItemSeqId,workEffortId:issueOut.workEffortId,facilityId:issueOut.facilityId,assetMaintenanceId:issueOut.assetMaintenanceId,issuedByUserId:issueOut.issuedByUserId,issuedDate:issueOut.issuedDate,quantity:issueOut.quantity,quantityCancelled:issueOut.quantityCancelled,acctgTransResultEnumId:issueOut.acctgTransResultEnumId,lastUpdatedStamp:issueOut.lastUpdatedStamp]" in-map="baseMap + [issuedDate:issuedDate, issuedByUserId:ec.user.userId, quantity:quantity]"/><service-call name="mantle.product.AssetServices.change#AssetQuantity" in-map="baseMap +                         [effectiveDate:issuedDate, quantityDiff:-quantity, assetIssuanceId:issueOut.assetIssuanceId]"/></else></if></actions></service>