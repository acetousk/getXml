<!--Service Location mantle.shippo.ShippoServices.get#AddressMap--><service verb="get" noun="AddressMap"><in-parameters><parameter name="postalAddress" type="EntityValue" required="true"/><parameter name="partyId"/><parameter name="isOrigin" type="Boolean" default="false"/><parameter name="otherPartyId"/></in-parameters><out-parameters><parameter name="addressMap" type="Map"/></out-parameters><actions><set field="contactMechId" from="postalAddress.contactMechId"/><if condition="!partyId"><entity-find entity-name="mantle.party.contact.PartyContactMech" list="pcmList"><econdition field-name="contactMechId"/><select-field field-name="partyId"/></entity-find><set field="partyIds" from="new HashSet(pcmList*.partyId)"/><if condition="partyIds.size() == 1"><set field="partyId" from="pcmList[0].partyId"/></if></if><if condition="postalAddress.attnName"><then><set field="name" from="postalAddress.attnName"/><set field="company" from="postalAddress.toName"/></then><else><set field="name" from="postalAddress.toName"/><set field="company" from="null"/></else></if><if condition="!name && partyId"><entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail"><field-map field-name="partyId"/></entity-find-one><if condition="partyDetail != null"><set field="name" value="${partyDetail.firstName ? partyDetail.firstName + ' ' : ''}${partyDetail.lastName?:''}${partyDetail.organizationName?:''}"/></if></if><if condition="!name"><return error="true" message="No name found for address ${contactMechId}"/></if><if condition="name.length() > 35"><set field="name" from="name.substring(0, 35)"/></if><if condition="company && company.length() > 35"><set field="company" from="company.substring(0, 35)"/></if><set field="street1" from="postalAddress.address1"/><if condition="postalAddress.unitNumber"><set field="street1" from="street1 + ' #' + (String) postalAddress.unitNumber"/></if><set field="stateProvinceGeo" from="postalAddress.stateProvinceGeo"/><set field="countryGeo" from="postalAddress.countryGeo"/><set field="fullZip" from="postalAddress.postalCode"/><if condition="postalAddress.postalCodeExt && postalAddress.postalCode != postalAddress.postalCodeExt"><set field="fullZip" value="${postalAddress.postalCode}-${postalAddress.postalCodeExt}"/></if><if condition="postalAddress.telecomContactMechId"><entity-find-one entity-name="mantle.party.contact.TelecomNumber" value-field="telecomNumber"><field-map field-name="contactMechId" from="postalAddress.telecomContactMechId"/></entity-find-one><if condition="telecomNumber != null"><service-call name="mantle.party.ContactServices.clean#TelecomNumber" out-map="[countryCode:tnCleanOut.countryCode,areaCode:tnCleanOut.areaCode,contactNumber:tnCleanOut.contactNumber,extension:tnCleanOut.extension,isValid:tnCleanOut.isValid]" out-map-add-to-existing="false" in-map="[countryCode:telecomNumber.countryCode, areaCode:telecomNumber.areaCode, contactNumber:telecomNumber.contactNumber]"/><if condition="tnCleanOut.isValid != null && !tnCleanOut.isValid"><log level="warn" message="Shippo for Party ${partyId} found invalid PostalAddress TelecomNumber ${telecomNumber.countryCode}-${telecomNumber.areaCode}-${telecomNumber.contactNumber}, not using"/><set field="telecomNumber" from="null"/></if></if></if><if condition="telecomNumber == null && partyId"><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:telecomInfo.postalContactMechId,postalContactMech:telecomInfo.postalContactMech,postalContactMechPurposeId:telecomInfo.postalContactMechPurposeId,postalAddress:telecomInfo.postalAddress,postalAddressStateGeo:telecomInfo.postalAddressStateGeo,postalAddressCountryGeo:telecomInfo.postalAddressCountryGeo,postalAddressGeoPoint:telecomInfo.postalAddressGeoPoint,postalTrustLevelEnum:telecomInfo.postalTrustLevelEnum,telecomContactMechId:telecomInfo.telecomContactMechId,telecomContactMech:telecomInfo.telecomContactMech,telecomPartyContactMech:telecomInfo.telecomPartyContactMech,telecomContactMechPurposeId:telecomInfo.telecomContactMechPurposeId,telecomNumber:telecomInfo.telecomNumber,faxContactMechId:telecomInfo.faxContactMechId,faxContactMech:telecomInfo.faxContactMech,faxPartyContactMech:telecomInfo.faxPartyContactMech,faxContactMechPurposeId:telecomInfo.faxContactMechPurposeId,faxTelecomNumber:telecomInfo.faxTelecomNumber,emailContactMechId:telecomInfo.emailContactMechId,emailContactMech:telecomInfo.emailContactMech,emailPartyContactMech:telecomInfo.emailPartyContactMech,emailContactMechPurposeId:telecomInfo.emailContactMechPurposeId,emailAddress:telecomInfo.emailAddress,webContactMechId:telecomInfo.webContactMechId,webContactMech:telecomInfo.webContactMech,webPartyContactMech:telecomInfo.webPartyContactMech,webContactMechPurposeId:telecomInfo.webContactMechPurposeId,webAddress:telecomInfo.webAddress,otherContactMechId:telecomInfo.otherContactMechId,otherContactMech:telecomInfo.otherContactMech,otherContactMechPurposeId:telecomInfo.otherContactMechPurposeId,otherInfoString:telecomInfo.otherInfoString]" in-map="[partyId:partyId, telecomContactMechPurposeId:(isOrigin ? 'PhoneShippingOrigin' : 'PhoneShippingDest')]"/><if condition="telecomInfo.telecomNumber != null"><set field="telecomNumber" from="telecomInfo.telecomNumber"/><service-call name="mantle.party.ContactServices.clean#TelecomNumber" out-map="[countryCode:tnCleanOut.countryCode,areaCode:tnCleanOut.areaCode,contactNumber:tnCleanOut.contactNumber,extension:tnCleanOut.extension,isValid:tnCleanOut.isValid]" out-map-add-to-existing="false" in-map="[countryCode:telecomNumber.countryCode, areaCode:telecomNumber.areaCode, contactNumber:telecomNumber.contactNumber]"/><if condition="tnCleanOut.isValid != null && !tnCleanOut.isValid"><log level="warn" message="Shippo for Party ${partyId} found invalid Party TelecomNumber ${telecomNumber.countryCode}-${telecomNumber.areaCode}-${telecomNumber.contactNumber}, not using"/><set field="telecomNumber" from="null"/></if><if condition="telecomNumber != null"><set field="postalAddress.telecomContactMechId" from="telecomNumber.contactMechId"/><entity-update value-field="postalAddress"/></if></if></if><if condition="telecomNumber == null && otherPartyId && !isOrigin"><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:telecomInfo.postalContactMechId,postalContactMech:telecomInfo.postalContactMech,postalContactMechPurposeId:telecomInfo.postalContactMechPurposeId,postalAddress:telecomInfo.postalAddress,postalAddressStateGeo:telecomInfo.postalAddressStateGeo,postalAddressCountryGeo:telecomInfo.postalAddressCountryGeo,postalAddressGeoPoint:telecomInfo.postalAddressGeoPoint,postalTrustLevelEnum:telecomInfo.postalTrustLevelEnum,telecomContactMechId:telecomInfo.telecomContactMechId,telecomContactMech:telecomInfo.telecomContactMech,telecomPartyContactMech:telecomInfo.telecomPartyContactMech,telecomContactMechPurposeId:telecomInfo.telecomContactMechPurposeId,telecomNumber:telecomInfo.telecomNumber,faxContactMechId:telecomInfo.faxContactMechId,faxContactMech:telecomInfo.faxContactMech,faxPartyContactMech:telecomInfo.faxPartyContactMech,faxContactMechPurposeId:telecomInfo.faxContactMechPurposeId,faxTelecomNumber:telecomInfo.faxTelecomNumber,emailContactMechId:telecomInfo.emailContactMechId,emailContactMech:telecomInfo.emailContactMech,emailPartyContactMech:telecomInfo.emailPartyContactMech,emailContactMechPurposeId:telecomInfo.emailContactMechPurposeId,emailAddress:telecomInfo.emailAddress,webContactMechId:telecomInfo.webContactMechId,webContactMech:telecomInfo.webContactMech,webPartyContactMech:telecomInfo.webPartyContactMech,webContactMechPurposeId:telecomInfo.webContactMechPurposeId,webAddress:telecomInfo.webAddress,otherContactMechId:telecomInfo.otherContactMechId,otherContactMech:telecomInfo.otherContactMech,otherContactMechPurposeId:telecomInfo.otherContactMechPurposeId,otherInfoString:telecomInfo.otherInfoString]" out-map-add-to-existing="false" in-map="[partyId:otherPartyId, telecomContactMechPurposeId:'PhoneShippingDest']"/><if condition="telecomInfo.telecomNumber != null"><set field="telecomNumber" from="telecomInfo.telecomNumber"/></if></if><if condition="telecomNumber != null"><set field="phone" value="${telecomNumber.countryCode? telecomNumber.countryCode + '-' :''}${telecomNumber.areaCode? telecomNumber.areaCode + '-' :''}${telecomNumber.contactNumber?:''}"/></if><if condition="postalAddress.emailContactMechId"><entity-find-one entity-name="mantle.party.contact.ContactMech" value-field="emailCm"><field-map field-name="contactMechId" from="postalAddress.emailContactMechId"/></entity-find-one><set field="email" from="emailCm?.infoString"/></if><if condition="!email && partyId"><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:emailInfo.postalContactMechId,postalContactMech:emailInfo.postalContactMech,postalContactMechPurposeId:emailInfo.postalContactMechPurposeId,postalAddress:emailInfo.postalAddress,postalAddressStateGeo:emailInfo.postalAddressStateGeo,postalAddressCountryGeo:emailInfo.postalAddressCountryGeo,postalAddressGeoPoint:emailInfo.postalAddressGeoPoint,postalTrustLevelEnum:emailInfo.postalTrustLevelEnum,telecomContactMechId:emailInfo.telecomContactMechId,telecomContactMech:emailInfo.telecomContactMech,telecomPartyContactMech:emailInfo.telecomPartyContactMech,telecomContactMechPurposeId:emailInfo.telecomContactMechPurposeId,telecomNumber:emailInfo.telecomNumber,faxContactMechId:emailInfo.faxContactMechId,faxContactMech:emailInfo.faxContactMech,faxPartyContactMech:emailInfo.faxPartyContactMech,faxContactMechPurposeId:emailInfo.faxContactMechPurposeId,faxTelecomNumber:emailInfo.faxTelecomNumber,emailContactMechId:emailInfo.emailContactMechId,emailContactMech:emailInfo.emailContactMech,emailPartyContactMech:emailInfo.emailPartyContactMech,emailContactMechPurposeId:emailInfo.emailContactMechPurposeId,emailAddress:emailInfo.emailAddress,webContactMechId:emailInfo.webContactMechId,webContactMech:emailInfo.webContactMech,webPartyContactMech:emailInfo.webPartyContactMech,webContactMechPurposeId:emailInfo.webContactMechPurposeId,webAddress:emailInfo.webAddress,otherContactMechId:emailInfo.otherContactMechId,otherContactMech:emailInfo.otherContactMech,otherContactMechPurposeId:emailInfo.otherContactMechPurposeId,otherInfoString:emailInfo.otherInfoString]" in-map="[partyId:partyId, emailContactMechPurposeId:(isOrigin ? 'EmailShippingOrigin' : 'EmailShippingDest')]"/><if condition="emailInfo.emailAddress"><set field="email" from="emailInfo.emailAddress"/><set field="postalAddress.emailContactMechId" from="emailInfo.emailContactMechId"/><entity-update value-field="postalAddress"/></if></if><set field="addressMap" from="[object_purpose:'PURCHASE', name:name, company:company,                 street1:street1, street2:postalAddress.address2, city:postalAddress.city,                 state:stateProvinceGeo?.geoCodeAlpha2, country:countryGeo?.geoCodeAlpha2, zip:fullZip,                 phone:phone, email:email]"/></actions></service>