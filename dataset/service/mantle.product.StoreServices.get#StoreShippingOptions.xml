<!--Service Location mantle.product.StoreServices.get#StoreShippingOptions--><service verb="get" noun="StoreShippingOptions"><in-parameters><parameter name="productStoreId"><description><![CDATA[If not specified returns list all ShipmentMethod type Enumeration values with _NA_ carrier]]></description></parameter><parameter name="orderId"/><parameter name="orderPartSeqId"/><parameter name="postalContactMechId"><description><![CDATA[Overrides the OrderPart.postalContactMechId if specified.]]></description></parameter><parameter name="getRates" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="shippingOptions" type="List"><parameter name="option" type="Map"><parameter name="carrierPartyId"/><parameter name="carrierName"/><parameter name="shipmentMethodEnumId"/><parameter name="shipmentMethodDescription"/><parameter name="shippingTotal" type="BigDecimal"/></parameter></parameter><parameter name="postalContactMechId"><description><![CDATA[Return if address was validated and replaced]]></description></parameter></out-parameters><actions><set field="shippingOptions" from="[]"/><if condition="productStoreId"><set field="shipOptionList" from="[]"/><entity-find entity-name="mantle.product.store.ProductStoreShipOption" list="shipOptionList" cache="true"><econdition field-name="productStoreId"/><order-by field-name="sequenceNum"/></entity-find><if condition="!shipOptionList"><set field="shipOptionList" from="[]"/><entity-find entity-name="mantle.product.store.ProductStoreShippingGateway" list="pssgList" cache="true"><econdition field-name="productStoreId"/></entity-find><iterate list="pssgList" entry="pssg"><entity-find entity-name="mantle.shipment.carrier.CarrierShipmentMethod" list="csmList" cache="true"><econdition field-name="carrierPartyId" from="pssg.carrierPartyId"/><order-by field-name="sequenceNum"/></entity-find><script><![CDATA[shipOptionList.addAll(csmList)]]></script></iterate></if><if condition="getRates && shipOptionList && orderId && orderPartSeqId"><service-call name="mantle.shipment.CarrierServices.get#OrderShippingRatesBulk" out-map="[shippingRateInfoList:ratesBulkOut.shippingRateInfoList,postalContactMechId:ratesBulkOut.postalContactMechId]" in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, postalContactMechId:postalContactMechId,                             carrierShipmentMethodList:shipOptionList]"/><set field="postalContactMechId" from="ratesBulkOut.postalContactMechId"/><set field="newShipOptionList" from="[]"/><set field="shippingRateInfoList" from="ratesBulkOut.shippingRateInfoList"/><if condition="shippingRateInfoList"><iterate list="shipOptionList" entry="shipOption"><set field="shippingRateInfo" from="shippingRateInfoList.find({ it.carrierPartyId == shipOption.carrierPartyId && it.shipmentMethodEnumId == shipOption.shipmentMethodEnumId })"/><if condition="shippingRateInfo != null"><then><script><![CDATA[newShipOptionList.add(shippingRateInfo)]]></script></then><else><script><![CDATA[newShipOptionList.add(shipOption)]]></script></else></if></iterate><set field="shipOptionList" from="newShipOptionList"/></if></if><iterate list="shipOptionList" entry="shipOption"><set field="shippingOption" from="new HashMap(shipOption)"/><entity-find-one entity-name="mantle.shipment.carrier.CarrierShipmentMethod" value-field="carrierShipmentMethod"><field-map field-name="carrierPartyId" from="shipOption.carrierPartyId"/><field-map field-name="shipmentMethodEnumId" from="shipOption.shipmentMethodEnumId"/></entity-find-one><if condition="!carrierShipmentMethod"><return error="true" message="No matching Carrier Shipment Method found for Carrier ${shipOption.carrierPartyId} and Shipment Method ${shipOption.shipmentMethodEnumId}"/></if><set field="shippingOption.description" from="shippingOption.description ?: carrierShipmentMethod.description"/><entity-find-one entity-name="mantle.party.PartyDetail" value-field="carrierDetail" cache="true"><field-map field-name="partyId" from="shipOption.carrierPartyId"/></entity-find-one><entity-find-one entity-name="moqui.basic.Enumeration" value-field="shipmentMethodEnum"><field-map field-name="enumId" from="shipOption.shipmentMethodEnumId"/></entity-find-one><set field="shippingOption.carrierName" from="carrierDetail.pseudoId"/><set field="shippingOption.shipmentMethodDescription" from="shipmentMethodEnum.description"/><script><![CDATA[shippingOptions.add(shippingOption)]]></script></iterate></if><if condition="!shippingOptions"><entity-find entity-name="moqui.basic.Enumeration" list="methodEnumList"><econdition field-name="enumTypeId" value="ShipmentMethod"/><order-by field-name="sequenceNum,description"/></entity-find><iterate list="methodEnumList" entry="methodEnum"><script><![CDATA[shippingOptions.add([carrierPartyId:'_NA_', carrierName:'',
                            shipmentMethodEnumId:methodEnum.enumId, shipmentMethodDescription:methodEnum.description])]]></script></iterate></if></actions></service>