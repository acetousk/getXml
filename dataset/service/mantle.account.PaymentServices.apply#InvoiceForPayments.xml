<!--Service Location mantle.account.PaymentServices.apply#InvoiceForPayments--><service verb="apply" noun="InvoiceForPayments"><in-parameters><parameter name="invoiceId" required="true"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><if condition="invoice == null"><return message="Invoice ${invoiceId} not found, not applying payments"/></if><entity-find entity-name="mantle.account.payment.Payment" list="paymentList"><econdition field-name="forInvoiceId" from="invoiceId"/></entity-find><iterate list="paymentList" entry="payment"><if condition="payment.statusId in ['PmntDelivered', 'PmntConfirmed'] && (payment.unappliedTotal == null || payment.unappliedTotal > 0.0)"><if condition="payment.fromPartyId != invoice.toPartyId"><message type="warning"><![CDATA[Cannot apply payment ${paymentId} to invoice ${invoiceId}, payment is from a different party (${payment.fromPartyId}) than invoice is to (${invoice.toPartyId})]]></message><continue/></if><if condition="payment.toPartyId != invoice.fromPartyId"><message type="warning"><![CDATA[Cannot apply payment ${paymentId} to invoice ${invoiceId}, payment is to a different party (${payment.toPartyId}) than invoice is from (${invoice.fromPartyId})]]></message><continue/></if><service-call name="mantle.account.PaymentServices.apply#InvoicePayment" out-map="[paymentApplicationId:context.paymentApplicationId,amountApplied:context.amountApplied]" in-map="[paymentId:payment.paymentId, invoiceId:invoiceId]"/></if></iterate></actions></service>