<!--Service Location mantle.order.OrderServices.add#OrderPartPayment--><service verb="add" noun="OrderPartPayment"><in-parameters><parameter name="paymentTypeEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="paymentTypeEnumId" default-value="PtInvoicePayment"/><parameter name="paymentInstrumentEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="paymentInstrumentEnumId"/><parameter name="paymentMethodId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="paymentMethodId"/><parameter name="toPaymentMethodId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="toPaymentMethodId"/><parameter name="paymentGatewayConfigId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="paymentGatewayConfigId"/><parameter name="orderId" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="orderId"/><parameter name="orderPartSeqId" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="orderPartSeqId"/><parameter name="orderItemSeqId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="orderItemSeqId"/><parameter name="statusId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="statusId" default-value="PmntPromised"/><parameter name="effectiveDate" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="effectiveDate"/><parameter name="settlementDate" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="settlementDate"/><parameter name="dueDate" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="dueDate"/><parameter name="paymentAuthCode" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="paymentAuthCode"/><parameter name="paymentRefNum" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="paymentRefNum"/><parameter name="comments" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="comments"/><parameter name="memo" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="memo"/><parameter name="distGroupEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="distGroupEnumId"/><parameter name="amount" type="BigDecimal" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="amount"><description><![CDATA[Defaults to OrderPart.partTotal]]></description></parameter><parameter name="appliedTotal" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="appliedTotal"/><parameter name="unappliedTotal" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="unappliedTotal"/><parameter name="forInvoiceId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="forInvoiceId"/><parameter name="refundForPaymentId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="refundForPaymentId"/><parameter name="finAccountId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="finAccountId"/><parameter name="finAccountAuthId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="finAccountAuthId"/><parameter name="finAccountTransId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="finAccountTransId"/><parameter name="overrideGlAccountId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="overrideGlAccountId"/><parameter name="overrideOrgPartyId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="overrideOrgPartyId"/><parameter name="partyRelationshipId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="partyRelationshipId"/><parameter name="timePeriodId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="timePeriodId"/><parameter name="originalCurrencyAmount" type="java.math.BigDecimal" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="originalCurrencyAmount"/><parameter name="originalCurrencyUomId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="originalCurrencyUomId"/><parameter name="presentFlag" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="presentFlag"/><parameter name="swipedFlag" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="swipedFlag"/><parameter name="processAttempt" type="java.lang.Long" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="processAttempt"/><parameter name="needsNsfRetry" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="needsNsfRetry"/><parameter name="visitId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="visitId" default="ec.user.visitId"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.account.payment.Payment" field-name="lastUpdatedStamp"/><parameter name="settlementTermId"/></in-parameters><out-parameters><parameter name="paymentId"/></out-parameters><actions><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/><set field="fromPartyId" from="orderPart.customerPartyId"/><entity-find entity-name="mantle.order.OrderPartParty" list="billToList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/><econdition field-name="roleTypeId" value="CustomerBillTo"/></entity-find><if condition="billToList"><set field="fromPartyId" from="billToList[0].partyId"/></if><set field="amountUomId" from="orderHeader.currencyUomId"/><set field="toPartyId" from="orderPart.vendorPartyId"/><if condition="settlementTermId"><entity-find-one entity-name="mantle.account.invoice.SettlementTerm" value-field="settlementTerm" cache="true"/><if condition="!settlementTerm?.orderPmtServiceRegisterId"><message type="warning"><![CDATA[Selected Term has no Auto Payments Service, creating a single Payment]]></message></if></if><if condition="settlementTerm?.orderPmtServiceRegisterId"><then><service-call name="update#mantle.order.OrderPart" in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, settlementTermId:settlementTermId]"/><entity-find-one entity-name="moqui.service.ServiceRegister" value-field="serviceRegister"><field-map field-name="serviceRegisterId" from="settlementTerm.orderPmtServiceRegisterId"/></entity-find-one><script><![CDATA[try {
                        ec.service.sync().name(serviceRegister.serviceName).parameters(context).softValidate(true).disableAuthz().call()
                        if (ec.message.hasError()) return
                    } catch (Throwable t) {
                        ec.logger.log(300, "Error calling auto order payments service for SettlementTerm ${settlementTermId}", t)
                    }]]></script></then><else><service-call name="mantle.account.PaymentServices.create#Payment" out-map="[paymentId:context.paymentId]" in-map="context + [amount:amount?:orderPart.partTotal, amountUomId:amountUomId, fromPartyId:fromPartyId, toPartyId:toPartyId]"/></else></if></actions></service>