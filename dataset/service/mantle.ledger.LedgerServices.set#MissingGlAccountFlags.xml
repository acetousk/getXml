<!--Service Location mantle.ledger.LedgerServices.set#MissingGlAccountFlags--><service verb="set" noun="MissingGlAccountFlags"><in-parameters/><out-parameters/><actions><entity-find entity-name="mantle.ledger.account.GlAccount" list="glAccountList"><econditions combine="or"><econdition field-name="isDebit" operator="is-not-null"/><econdition field-name="isTemporary" operator="is-not-null"/></econditions></entity-find><iterate list="glAccountList" entry="glAccount"><service-call name="mantle.ledger.LedgerServices.find#RootGlAccountClassEnum" out-map="[rootGlAccountClassEnumId:rootOut.rootGlAccountClassEnumId,ancestorClassEnumIdSet:rootOut.ancestorClassEnumIdSet,isContra:rootOut.isContra]" out-map-add-to-existing="false" in-map="[glAccountClassEnumId:glAccount.glAccountClassEnumId]"/><if condition="rootOut.isContra == 'Y'"><then><set field="entityValue.isDebit" from="'DEBIT'.equals(rootOut.rootGlAccountClassEnumId) ? 'N' : 'Y'"/></then><else><set field="entityValue.isDebit" from="'DEBIT'.equals(rootOut.rootGlAccountClassEnumId) ? 'Y' : 'N'"/></else></if><set field="glAccount.isTemporary" value="N"/><set field="tempAccountClasses" from="['REVENUE', 'COST_OF_SALES', 'INCOME', 'EXPENSE', 'NON_OP_EXPENSE']"/><iterate list="tempAccountClasses" entry="tempAccountClass"><if condition="rootOut.ancestorClassEnumIdSet.contains(tempAccountClass)"><set field="glAccount.isTemporary" value="Y"/><break/></if></iterate><entity-update value-field="glAccount"/></iterate></actions></service>