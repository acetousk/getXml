<!--Service Location mantle.account.PositivePayServices.send#PositivePayJob--><service verb="send" noun="PositivePayJob"><in-parameters><parameter name="paymentMethodId" required="true"/><parameter name="paymentInstrumentEnumId" default-value="PiCompanyCheck"/><parameter name="lookBackDays" type="Integer"/><parameter name="formatServiceName"><description><![CDATA[Extension mechanism, generally empty and determined based
                on BankAccount.posPayFormatEnumId]]></description></parameter><parameter name="systemMessageTypeId"><description><![CDATA[If not specified looked up in PaymentMethodFileType]]></description></parameter><parameter name="systemMessageRemoteId"><description><![CDATA[If not specified looked up in PaymentMethodFileType]]></description></parameter></in-parameters><out-parameters><parameter name="paymentMethodFileId"/><parameter name="systemMessageId"/><parameter name="paymentCount"/></out-parameters><actions><if condition="lookBackDays"><script><![CDATA[Calendar lookBackCal = ec.user.nowCalendar
                    lookBackCal.add(Calendar.DAY_OF_MONTH, -lookBackDays)
                    fromDate = new java.sql.Timestamp(lookBackCal.getTimeInMillis())]]></script></if><log message="Generating PositivePay file for payment method ${paymentMethodId} instrument ${paymentInstrumentEnumId} look back days ${lookBackDays} fromDate ${fromDate}"/><service-call name="mantle.account.PositivePayServices.generate#PositivePayFile" in-map="context" out-map="[paymentMethodFileId:context.paymentMethodFileId,fileText:context.fileText,paymentCount:context.paymentCount]" transaction="force-new"/><if condition="!paymentMethodFileId"><log message="In send#PositivePayJob no file generated, not sending"/><return/></if><service-call name="mantle.account.PaymentMethodServices.produce#PaymentMethodFileSystemMessage" in-map="context" out-map="[systemMessageId:context.systemMessageId]"/></actions></service>