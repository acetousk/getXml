<!--Service Location org.moqui.impl.UserServices.login#UserAccount--><service verb="login" noun="UserAccount"><in-parameters><parameter name="username" entity-name="moqui.security.UserAccount" field-name="username"/><parameter name="password"/><parameter name="code"/></in-parameters><out-parameters><parameter name="secondFactorRequired" type="Boolean"/><parameter name="factorTypeEnumIds" type="Set"/><parameter name="factorTypeDescriptions" type="List"/><parameter name="sendableFactors" type="List"><parameter name="sendableFactor" type="Map"><parameter name="factorId"/><parameter name="factorTypeEnumId"/><parameter name="factorOption"/></parameter></parameter><parameter name="loggedIn" type="Boolean"/></out-parameters><actions><if condition="ec.web?.sessionAttributes?.moquiPreAuthcUsername"><then><set field="username" from="ec.web?.sessionAttributes?.moquiPreAuthcUsername"/></then><else><set field="loggedIn" from="ec.user.loginUser(username, password)"/></else></if><if condition="ec.web.sessionAttributes.moquiAuthcFactorRequired"><then><if condition="code"><then><service-call name="org.moqui.impl.UserServices.validate#ExternalUserAuthcCode" in-map="[code:code]" out-map="[verified:validateOut.verified,factorId:validateOut.factorId,username:validateOut.username]"/><if condition="validateOut.verified"><then><set field="loggedIn" from="ec.user.internalLoginUser(validateOut.username)"/></then><else><message type="danger" public="true"><![CDATA[Authentication code is not valid]]></message></else></if></then><else><service-call name="org.moqui.impl.UserServices.get#ExternalUserAuthcFactorInfo" out-map="[secondFactorRequired:context.secondFactorRequired,factorTypeEnumIds:context.factorTypeEnumIds,factorTypeDescriptions:context.factorTypeDescriptions,sendableFactors:context.sendableFactors]"/></else></if></then></if></actions></service>