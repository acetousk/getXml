<!--Service Location org.moqui.impl.GoogleServices.verify#ReCaptcha--><service verb="verify" noun="ReCaptcha"><in-parameters><parameter name="reCaptchaToken"/><parameter name="reCaptchaSecret" default="ec.user.getPreference('reCAPTCHA.secret.key')"/></in-parameters><out-parameters/><actions><if condition="!reCaptchaSecret"><log level="warn" message="In verify#ReCaptcha no secret key found, not verifying"/><return/></if><if condition="!reCaptchaToken"><message public="true" type="warning"><![CDATA[reCAPTCHA token required, confirm you are not a robot]]></message><return error="true" message="No reCAPTCHA token"/></if><script><![CDATA[org.moqui.util.RestClient restClient = ec.service.rest().method(org.moqui.util.RestClient.POST)
                        .uri("https://www.google.com/recaptcha/api/siteverify").addHeader("Content-Type", "application/json")
                        .addBodyParameter("secret", reCaptchaSecret).addBodyParameter("response", reCaptchaToken)
                org.moqui.util.RestClient.RestResponse restResponse = restClient.call()
                Map respMap = (Map) restResponse.jsonObject()
                if (restResponse.statusCode < 200 || restResponse.statusCode >= 300 || !respMap?.success) {
                    ec.logger.warn("Unsuccessful reCAPTCHA verify: ${respMap}")
                    ec.message.addPublic("Could not validate reCAPTCHA response, confirm you are not a robot", "warning")
                    ec.message.addError("Could not verify reCAPTCHA token")
                    return
                }
                ec.logger.info("Successful reCAPTCHA verify: ${respMap}")]]></script></actions></service>