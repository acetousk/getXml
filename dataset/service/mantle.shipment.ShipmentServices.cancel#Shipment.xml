<!--Service Location mantle.shipment.ShipmentServices.cancel#Shipment--><service verb="cancel" noun="Shipment"><in-parameters><parameter name="shipmentId" required="true" entity-name="mantle.shipment.Shipment" field-name="shipmentId"/><parameter name="undoIssueReceive" type="Boolean" default="true"/></in-parameters><out-parameters><parameter name="oldStatusId"/><parameter name="statusChanged" type="Boolean"/></out-parameters><actions><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/><if condition="shipment == null"><return error="true" message="Shipment not found with ID ${shipmentId}"/></if><set field="shipmentTypeEnum" from="shipment.'ShipmentType#moqui.basic.Enumeration'"/><set field="isIncoming" from="shipmentTypeEnum?.enumId == 'ShpTpIncoming' || shipmentTypeEnum?.parentEnumId == 'ShpTpIncoming'"/><set field="isOutgoing" from="shipmentTypeEnum?.enumId == 'ShpTpOutgoing' || shipmentTypeEnum?.parentEnumId == 'ShpTpOutgoing'"/><set field="isTransfer" from="shipmentTypeEnum?.enumId == 'ShpTpTransfer' || shipmentTypeEnum?.parentEnumId == 'ShpTpTransfer'"/><if condition="isOutgoing"><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="sisInvoiceList" distinct="true"><econdition field-name="shipmentId"/><econdition field-name="invoiceId" operator="is-not-null"/><select-field field-name="invoiceId"/></entity-find><set field="invoiceIdList" from="sisInvoiceList*.invoiceId"/><iterate list="invoiceIdList" entry="invoiceId"><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><if condition="invoice.statusId == 'InvoiceCancelled'"><then><message type="info"><![CDATA[Invoice ${invoiceId} already cancelled]]></message></then><else><service-call name="update#mantle.account.invoice.Invoice" in-map="[invoiceId:invoiceId, statusId:'InvoiceCancelled']"/></else></if></iterate></if><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="sisOrderList" distinct="true"><econdition field-name="shipmentId"/><econdition field-name="orderId" operator="is-not-null"/><select-field field-name="orderId"/></entity-find><set field="orderIdList" from="sisOrderList*.orderId"/><if condition="undoIssueReceive"><entity-find entity-name="mantle.product.issuance.AssetIssuance" list="assetIssuanceList"><econdition field-name="shipmentId"/><econdition field-name="quantity" operator="greater" from="0.0"/></entity-find><iterate list="assetIssuanceList" entry="assetIssuance"><service-call name="mantle.shipment.ShipmentServices.unpack#ShipmentItemIssuance" in-map="[assetIssuanceId:assetIssuance.assetIssuanceId]"/></iterate><entity-find entity-name="mantle.product.receipt.AssetReceipt" list="assetReceiptList"><econdition field-name="shipmentId"/><econdition field-name="quantityAccepted" operator="greater" from="0.0"/></entity-find><iterate list="assetReceiptList" entry="assetReceipt"><service-call name="mantle.product.AssetServices.update#AssetAndReceipt" in-map="[assetId:assetReceipt.assetId,                         assetReceiptId:assetReceipt.assetReceiptId, shipmentId:shipmentId, quantityAccepted:0.0, quantityRejected:0.0]"/></iterate></if><if condition="shipment.assemblyWorkEffortId"><service-call name="mantle.work.ManufacturingServices.cancel#AssemblyWorkEffort" in-map="[workEffortId:shipment.assemblyWorkEffortId]"/></if><entity-find entity-name="mantle.shipment.ShipmentItemSourceSummary" list="sisAfterList"><econdition field-name="shipmentId"/><select-field field-name="quantity,quantityNotHandled"/></entity-find><set field="sisAfterSum" from="sisAfterList.first()"/><if condition="sisAfterSum != null && sisAfterSum.quantity > sisAfterSum.quantityNotHandled"><return error="true" message="Shipment ${shipmentId} has items already handled, cannot cancel."/></if><if condition="isIncoming || isTransfer"><entity-find-count entity-name="mantle.product.receipt.AssetReceipt" count-field="assetReceiptCount"><econdition field-name="shipmentId"/><econdition field-name="quantityAccepted" operator="greater" from="0.0"/></entity-find-count><if condition="assetReceiptCount"><return error="true" message="Incoming shipment ${shipmentId} has items already received, cannot cancel."/></if></if><if condition="isOutgoing || isTransfer"><entity-find-count entity-name="mantle.product.issuance.AssetIssuance" count-field="assetIssuanceCount"><econdition field-name="shipmentId"/><econdition field-name="quantity" operator="greater" from="0.0"/></entity-find-count><if condition="assetIssuanceCount"><return error="true" message="Outgoing shipment ${shipmentId} has items already issued/packed, cannot cancel."/></if></if><service-call name="mantle.shipment.ShipmentServices.reduce#QuantitiesToHandled" in-map="[shipmentId:shipmentId]"/><service-call name="update#mantle.shipment.Shipment" in-map="[shipmentId:shipmentId, statusId:'ShipCancelled']" out-map="[shipmentId:context.shipmentId,shipmentTypeEnumId:context.shipmentTypeEnumId,statusId:context.statusId,fromPartyId:context.fromPartyId,toPartyId:context.toPartyId,binLocationNumber:context.binLocationNumber,productStoreId:context.productStoreId,priority:context.priority,entryDate:context.entryDate,shipAfterDate:context.shipAfterDate,shipBeforeDate:context.shipBeforeDate,estimatedReadyDate:context.estimatedReadyDate,estimatedShipDate:context.estimatedShipDate,estimatedArrivalDate:context.estimatedArrivalDate,latestCancelDate:context.latestCancelDate,packedDate:context.packedDate,pickContainerId:context.pickContainerId,shipWorkEffortId:context.shipWorkEffortId,receiveWorkEffortId:context.receiveWorkEffortId,assemblyWorkEffortId:context.assemblyWorkEffortId,estimatedShipCost:context.estimatedShipCost,costUomId:context.costUomId,addtlShippingCharge:context.addtlShippingCharge,addtlShippingChargeDesc:context.addtlShippingChargeDesc,signatureRequiredEnumId:context.signatureRequiredEnumId,handlingInstructions:context.handlingInstructions,otherPartyOrderId:context.otherPartyOrderId,systemMessageRemoteId:context.systemMessageRemoteId,externalId:context.externalId,originId:context.originId,lastUpdatedStamp:context.lastUpdatedStamp]"/><iterate list="orderIdList" entry="orderId"><service-call name="mantle.order.OrderServices.checkStillComplete#Order" in-map="[orderId:orderId]"/></iterate></actions></service>