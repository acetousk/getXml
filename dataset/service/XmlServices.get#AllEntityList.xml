<!--Service Location XmlServices.get#AllEntityList--><service verb="get" noun="AllEntityList"><in-parameters><parameter name="orderByField" default-value="fullEntityName" required="true"/><parameter name="filterRegexp"/><parameter name="masterEntitiesOnly" type="Boolean" required="true" default="false"/><parameter name="excludeViewEntities" type="Boolean" required="true" default="true"/><parameter name="outputFile" type="Boolean" required="true" default="false"/><parameter name="outputFilesToFolder" type="Boolean" required="true" default="false"/><parameter name="outputFolder" default-value="component://getXml/dataset/entity"/></in-parameters><out-parameters/><actions><set field="inEntityList" from="ec.entity.getAllEntitiesInfo(orderByField?:'fullEntityName', filterRegexp, masterEntitiesOnly, excludeViewEntities)"/><if condition="outputFile"><script><![CDATA[entityXml="""<?xml version="1.0" encoding="UTF-8"?><entities xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/entity-definition-3.xsd">"""]]></script></if><set field="entityList" from="[]"/><if condition="outputFilesToFolder"><set field="outputFolder" from="ec.resource.getLocationReference(outputFolder)"/></if><iterate list="inEntityList" entry="inEntity"><set field="entityDefinition" from="ec.entity.getEntityDefinition(inEntity.fullEntityName)"/><set field="entityInfo" from="entityDefinition.entityInfo"/><set field="entityNode" from="entityDefinition.getEntityNode()"/><set field="fieldInfos" from="entityInfo.allFieldInfoArray"/><set field="relationshipInfoList" from="entityDefinition.getRelationshipsInfo(false)"/><set field="dependents" from="entityDefinition.getDependentsTree()"/><script><![CDATA[eecas = ec.entity.eecaRulesByEntityName.get(entityDefinition.fullEntityName)
                    secas = []
                    for (verb in org.moqui.impl.service.runner.EntityAutoServiceRunner.verbSet) {
                        serviceName = verb + entityDefinition.fullEntityName
                        rules = ec.service.secaRulesByServiceName.get(serviceName)
                        if (rules) secas.addAll(rules)
                    }]]></script><log level="warn" message="Entity ${inEntity.fullEntityName} has ${eecas?.size()} EECAs and ${secas?.size()} SECAs"/><log level="warn" message="eecas: ${eecas} secas: ${secas}"/><set field="xml" value=""/><script><![CDATA[xml="\n<!-- Entity Name: ${inEntity.fullEntityName} sql table: ${inEntity.tableName} -->"+entityNode.toString()]]></script><set field="xml" from="xml-'</entity>'"/><iterate list="secas" entry="seca"><set field="xml" from="xml+'\n<!-- seca '+seca+'-->'"/></iterate><iterate list="eecas" entry="eeca"><set field="xml" from="xml+'\n<!-- eeca '+eeca+'-->'"/></iterate><set field="xml" from="xml+'\n</entity>'"/><if condition="outputFile"><set field="entityXml" from="entityXml+xml"/></if><if condition="outputFilesToFolder"><script><![CDATA[outputFolder.makeFile(inEntity.fullEntityName + '.xml').putText(xml)]]></script></if><set field="entityList" from="entityList+[name:inEntity.fullEntityName,prettyName:entityDefinition.getPrettyName(null, null),tableName:inEntity.tableName,xml:xml]"/></iterate><if condition="outputFile"><script><![CDATA[entityXml+="</entities>"]]></script><script><![CDATA[ec.resource.getLocationReference('component://getXml/dataset/allEntities.xml').putText(entityXml)]]></script><script><![CDATA[ec.resource.getLocationReference('component://getXml/dataset/allEntities.txt').putText(entityXml)]]></script></if></actions></service>