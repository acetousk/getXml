<!--Service Location mantle.account.FinancialAccountServices.capture#FinancialAccountPayment--><service verb="capture" noun="FinancialAccountPayment"><in-parameters><parameter name="paymentId" required="true" entity-name="mantle.account.payment.Payment" field-name="paymentId"/><parameter name="paymentGatewayConfigId" required="true" entity-name="mantle.account.payment.Payment" field-name="paymentGatewayConfigId"/><parameter name="amount" type="BigDecimal" entity-name="mantle.account.payment.Payment" field-name="amount"/></in-parameters><out-parameters><parameter name="paymentGatewayResponseId"/></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment" for-update="true"/><set field="finAccountId" from="payment.finAccountId"/><if condition="!finAccountId && payment.paymentMethodId"><set field="paymentMethod" from="payment.method"/><set field="finAccountId" from="paymentMethod.finAccountId"/></if><if condition="!finAccountId"><return error="true" message="No Financial Account associated with Payment ${payment.paymentId}"/></if><if condition="!amount"><set field="amount" from="payment.amount"/></if><service-call name="mantle.account.FinancialAccountServices.withdraw#FinancialAccount" out-map="[amount:wdOut.amount,preBalance:wdOut.preBalance,postBalance:wdOut.postBalance,finAccountTransId:wdOut.finAccountTransId,responseCode:wdOut.responseCode,responseMessage:wdOut.responseMessage]" in-map="[finAccountId:finAccountId, amount:amount, finAccountAuthId:payment.finAccountAuthId, paymentId:paymentId]"/><service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="[paymentGatewayResponseId:context.paymentGatewayResponseId,paymentGatewayConfigId:context.paymentGatewayConfigId,paymentOperationEnumId:context.paymentOperationEnumId,paymentId:context.paymentId,paymentMethodId:context.paymentMethodId,finAccountId:context.finAccountId,amount:context.amount,amountUomId:context.amountUomId,referenceNum:context.referenceNum,altReference:context.altReference,subReference:context.subReference,approvalCode:context.approvalCode,responseCode:context.responseCode,reasonCode:context.reasonCode,reasonMessage:context.reasonMessage,avsResult:context.avsResult,cvResult:context.cvResult,scoreResult:context.scoreResult,transactionDate:context.transactionDate,transactionStatus:context.transactionStatus,resultSuccess:context.resultSuccess,resultDeclined:context.resultDeclined,resultError:context.resultError,resultNsf:context.resultNsf,resultBadExpire:context.resultBadExpire,resultBadCardNumber:context.resultBadCardNumber,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoCapture',                         paymentId:paymentId, paymentMethodId:payment.paymentMethodId, finAccountId:finAccountId,                         amount:amount, amountUomId:payment.amountUomId,                         referenceNum:wdOut.finAccountTransId, approvalCode:wdOut.finAccountTransId,                         responseCode:wdOut.responseCode, reasonCode:null, reasonMessage:wdOut.responseMessage,                         transactionDate:ec.user.nowTimestamp,                         resultSuccess:(wdOut.responseCode == 'success' ? 'Y' : 'N'),                         resultDeclined:(wdOut.responseCode == 'success' ? 'N' : 'Y'),                         resultError:'N',                         resultNsf:(wdOut.responseCode == 'nsf' ? 'Y' : 'N')]"/><if condition="wdOut.finAccountTransId"><set field="payment.finAccountTransId" from="wdOut.finAccountTransId"/><entity-update value-field="payment"/></if></actions></service>