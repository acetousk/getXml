<!--Service Location mantle.account.PaymentServices.get#PaymentCheckInfo--><service verb="get" noun="PaymentCheckInfo"><in-parameters><parameter name="paymentIdList" type="List" required="true"><parameter name="paymentId"/></parameter><parameter name="templateSettingSuffix"><description><![CDATA[If set get templateLocation, like TemplatePaymentCheck or TemplatePaymentDetail]]></description></parameter></in-parameters><out-parameters><parameter name="paymentInfoList" type="List"><parameter name="paymentInfo" type="Map"><parameter name="payment" type="Map"/><parameter name="paymentId"/><parameter name="fromPartyDetail" type="Map"/><parameter name="toPartyDetail" type="Map"/><parameter name="toBillingContactInfo" type="Map"/><parameter name="paymentSignaturePrimaryLocation"/><parameter name="paymentSignatureSecondaryLocation"/><parameter name="paymentApplicationList" type="List"><parameter name="paymentApplication" type="Map"/></parameter><parameter name="invoiceList" type="List"><parameter name="invoice" type="Map"/></parameter><parameter name="financialAccount" type="Map"/><parameter name="orderItemBillingList" type="List"><parameter name="orderItemBilling" type="Map"/></parameter><parameter name="amountWords"/><parameter name="paymentDescription"/><parameter name="paymentTotal" type="BigDecimal"/><parameter name="appliedTotal" type="BigDecimal"/><parameter name="unappliedTotal" type="BigDecimal"/><parameter name="distGroupEnum" type="Map"/></parameter></parameter><parameter name="templateLocation"><description><![CDATA[Looked up PartySetting (for fromPartyId of first payment if more than one)]]></description></parameter></out-parameters><actions><entity-find entity-name="mantle.account.payment.Payment" list="paymentList"><econdition field-name="paymentId" operator="in" from="paymentIdList"/><order-by field-name="distGroupEnumId,paymentRefNum,-effectiveDate,paymentId"/></entity-find><set field="paymentInfoList" from="[]"/><iterate list="paymentList" entry="payment"><set field="paymentId" from="payment.paymentId"/><set field="descOut" from="null"/><service-call name="mantle.account.PaymentServices.get#PaymentDescription" out-map="[paymentDescription:descOut.paymentDescription]" in-map="[paymentId:paymentId, payment:payment]"/><set field="totalsOut" from="null"/><service-call name="mantle.account.PaymentServices.get#PaymentTotals" out-map="[paymentTotal:totalsOut.paymentTotal,appliedTotal:totalsOut.appliedTotal,unappliedTotal:totalsOut.unappliedTotal]" in-map="[paymentId:paymentId]"/><entity-find-one entity-name="moqui.basic.Enumeration" value-field="distGroupEnum" cache="true"><field-map field-name="enumId" from="payment.distGroupEnumId"/></entity-find-one><entity-find-one entity-name="mantle.party.PartyDetail" value-field="fromPartyDetail"><field-map field-name="partyId" from="payment.fromPartyId"/></entity-find-one><entity-find-one entity-name="mantle.party.PartyDetail" value-field="toPartyDetail"><field-map field-name="partyId" from="payment.toPartyId"/></entity-find-one><service-call name="mantle.party.ContactServices.get#PartyDefaultBilling" out-map="[postalContactMechId:toBillingOut.postalContactMechId,telecomContactMechId:toBillingOut.telecomContactMechId,emailContactMechId:toBillingOut.emailContactMechId]" in-map="[partyId:payment.toPartyId]" out-map-add-to-existing="false"/><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:toBillingContactInfo.postalContactMechId,postalContactMech:toBillingContactInfo.postalContactMech,postalContactMechPurposeId:toBillingContactInfo.postalContactMechPurposeId,postalAddress:toBillingContactInfo.postalAddress,postalAddressStateGeo:toBillingContactInfo.postalAddressStateGeo,postalAddressCountryGeo:toBillingContactInfo.postalAddressCountryGeo,postalAddressGeoPoint:toBillingContactInfo.postalAddressGeoPoint,postalTrustLevelEnum:toBillingContactInfo.postalTrustLevelEnum,telecomContactMechId:toBillingContactInfo.telecomContactMechId,telecomContactMech:toBillingContactInfo.telecomContactMech,telecomPartyContactMech:toBillingContactInfo.telecomPartyContactMech,telecomContactMechPurposeId:toBillingContactInfo.telecomContactMechPurposeId,telecomNumber:toBillingContactInfo.telecomNumber,faxContactMechId:toBillingContactInfo.faxContactMechId,faxContactMech:toBillingContactInfo.faxContactMech,faxPartyContactMech:toBillingContactInfo.faxPartyContactMech,faxContactMechPurposeId:toBillingContactInfo.faxContactMechPurposeId,faxTelecomNumber:toBillingContactInfo.faxTelecomNumber,emailContactMechId:toBillingContactInfo.emailContactMechId,emailContactMech:toBillingContactInfo.emailContactMech,emailPartyContactMech:toBillingContactInfo.emailPartyContactMech,emailContactMechPurposeId:toBillingContactInfo.emailContactMechPurposeId,emailAddress:toBillingContactInfo.emailAddress,webContactMechId:toBillingContactInfo.webContactMechId,webContactMech:toBillingContactInfo.webContactMech,webPartyContactMech:toBillingContactInfo.webPartyContactMech,webContactMechPurposeId:toBillingContactInfo.webContactMechPurposeId,webAddress:toBillingContactInfo.webAddress,otherContactMechId:toBillingContactInfo.otherContactMechId,otherContactMech:toBillingContactInfo.otherContactMech,otherContactMechPurposeId:toBillingContactInfo.otherContactMechPurposeId,otherInfoString:toBillingContactInfo.otherInfoString]" in-map="toBillingOut + [partyId:payment.toPartyId]" out-map-add-to-existing="false"/><if condition="payment.paymentMethodId"><entity-find entity-name="mantle.account.method.PaymentMethodContent" list="primarySignatureList"><econdition field-name="paymentMethodId" from="payment.paymentMethodId"/><econdition field-name="contentTypeEnumId" value="PmctSignaturePrimary"/></entity-find><set field="paymentSignaturePrimaryLocation" from="primarySignatureList ? primarySignatureList[0].contentLocation : null"/><entity-find entity-name="mantle.account.method.PaymentMethodContent" list="secondarySignatureList"><econdition field-name="paymentMethodId" from="payment.paymentMethodId"/><econdition field-name="contentTypeEnumId" value="PmctSignatureSecondary"/></entity-find><set field="paymentSignatureSecondaryLocation" from="secondarySignatureList ? secondarySignatureList[0].contentLocation : null"/></if><if condition="!paymentSignaturePrimaryLocation"><entity-find entity-name="mantle.party.PartyContent" list="primarySignatureList"><econdition field-name="partyId" from="payment.fromPartyId"/><econdition field-name="partyContentTypeEnumId" value="PcntPaymentSignaturePrimary"/></entity-find><set field="paymentSignaturePrimaryLocation" from="primarySignatureList ? primarySignatureList[0].contentLocation : null"/></if><if condition="!paymentSignatureSecondaryLocation"><entity-find entity-name="mantle.party.PartyContent" list="secondarySignatureList"><econdition field-name="partyId" from="payment.fromPartyId"/><econdition field-name="partyContentTypeEnumId" value="PcntPaymentSignatureSecondary"/></entity-find><set field="paymentSignatureSecondaryLocation" from="secondarySignatureList ? secondarySignatureList[0].contentLocation : null"/></if><entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList"><econdition field-name="paymentId"/><order-by field-name="appliedDate"/></entity-find><entity-find entity-name="mantle.account.payment.PaymentApplicationInvoiceSummary" list="invoiceList"><econdition field-name="paymentId"/><order-by field-name="invoiceId"/></entity-find><if condition="!invoiceList && payment.forInvoiceId"><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="forInvoice"><field-map field-name="invoiceId" from="payment.forInvoiceId"/></entity-find-one><if condition="forInvoice != null"><set field="invoiceList" from="[forInvoice.getMap()]"/></if></if><if condition="payment.finAccountTransId"><entity-find-one entity-name="mantle.account.financial.FinancialAccountTrans" value-field="financialAccountTrans"><field-map field-name="finAccountTransId" from="payment.finAccountTransId"/></entity-find-one><entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"><field-map field-name="finAccountId" from="financialAccountTrans.finAccountId"/></entity-find-one></if><if condition="payment.orderId"><entity-find entity-name="mantle.order.OrderItemBilling" list="orderItemBillingList"><econdition field-name="orderId" from="payment.orderId"/><order-by field-name="invoiceId,invoiceItemSeqId"/></entity-find></if><set field="paymentInfo" from="[payment:payment, paymentId:paymentId,                         fromPartyDetail:fromPartyDetail, toPartyDetail:toPartyDetail, toBillingContactInfo:toBillingContactInfo,                         paymentSignaturePrimaryLocation:paymentSignaturePrimaryLocation,                         paymentSignatureSecondaryLocation:paymentSignatureSecondaryLocation,                         paymentApplicationList:paymentApplicationList, invoiceList:invoiceList,                         financialAccount:financialAccount, financialAccountTrans:financialAccountTrans,                         orderItemBillingList:orderItemBillingList, distGroupEnum:distGroupEnum]"/><script><![CDATA[paymentInfo.amountWords = numberToWordsWithDecimal(payment.amount)

                    paymentInfo.putAll(descOut)
                    paymentInfo.putAll(totalsOut)
                    paymentInfoList.add(paymentInfo)]]></script></iterate><set field="firstPayment" from="paymentList ? paymentList[0] : null"/><if condition="templateSettingSuffix && firstPayment.fromPartyId"><service-call name="mantle.party.PartyServices.get#PartySettingValue" out-map="[settingValue:ptySettingOut.settingValue]" in-map="[partyId:firstPayment.fromPartyId, partySettingTypeId:('Org' + templateSettingSuffix)]"/><set field="templateLocation" from="ptySettingOut?.settingValue"/></if></actions></service>