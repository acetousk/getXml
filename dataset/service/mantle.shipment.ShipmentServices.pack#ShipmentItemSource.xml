<!--Service Location mantle.shipment.ShipmentServices.pack#ShipmentItemSource--><service verb="pack" noun="ShipmentItemSource"><in-parameters><parameter name="shipmentItemSourceId" required="true" entity-name="mantle.shipment.ShipmentItemSource" field-name="shipmentItemSourceId"/><parameter name="shipmentPackageSeqId"/><parameter name="quantity" type="BigDecimal" required="true" entity-name="mantle.shipment.ShipmentItemSource" field-name="quantity"/><parameter name="packDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="assetReservationId"><description><![CDATA[Specify to pack for a single reservation. If specified assetId is ignored.]]></description></parameter><parameter name="assetId"><description><![CDATA[Specify to pack a certain asset, may or may not be reserved. Packing
                a specific quantity of an asset assumes physical presence of the asset so other reservations are moved
                as needed.]]></description></parameter><parameter name="forceIssueOther" type="Boolean" default="false"/><parameter name="forceAddToPackage" type="Boolean" default="true"><description><![CDATA[Add to new package if no shipmentPackageSeqId specified]]></description></parameter></in-parameters><out-parameters><parameter name="shipmentPackageSeqId"/></out-parameters><actions><entity-find-one entity-name="mantle.shipment.ShipmentItemSource" value-field="shipmentItemSource"/><if condition="shipmentItemSource == null"><return error="true" message="Could not find ShipmentItemSource with ID ${shipmentItemSourceId}"/></if><set field="shipmentId" from="shipmentItemSource.shipmentId"/><set field="shipment" from="shipmentItemSource.shipment"/><if condition="shipment.statusId in ['ShipPacked', 'ShipShipped', 'ShipDelivered', 'ShipRejected', 'ShipCancelled']"><return error="true" message="Cannot pack Shipment ${shipmentId} in status ${shipment.status?.description ?: shipment.statusId}"/></if><if condition="shipment.statusId in ['ShipInput', 'ShipScheduled']"><service-call name="update#mantle.shipment.Shipment" in-map="[shipmentId:shipmentId, statusId:'ShipPicked']"/></if><if condition="assetReservationId"><entity-find-one entity-name="mantle.product.issuance.AssetReservation" value-field="assetReservation"/><if condition="assetReservation == null"><return error="true" message="Reservation [${assetReservationId}] not found, not packing"/></if><if condition="shipmentItemSource.orderId != assetReservation.orderId || shipmentItemSource.orderItemSeqId != assetReservation.orderItemSeqId"><return error="true" message="Reservation order item [${assetReservation.orderId}:${assetReservation.orderItemSeqId}] does not match shipment item source order item [${shipmentItemSource.orderId}:${shipmentItemSource.orderItemSeqId}], not packing"/></if><if condition="quantity > assetReservation.quantityNotIssued"><return error="true" message="Quantity specified (${quantity}) is greater than quantity not issued (${assetReservation.quantityNotIssued}) on reservation [${assetReservationId}], not packing"/></if><set field="assetId" from="null"/></if><if condition="assetId"><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset" for-update="true"/><if condition="asset == null"><return error="true" message="Asset ${assetId} not found, not packing"/></if><if condition="shipmentItemSource.productId != asset.productId"><return error="true" message="Asset product ${asset.productId} is not the same as shipment item product ${shipmentItemSource.productId}, not packing"/></if><if condition="quantity > asset.quantityOnHandTotal"><return error="true" message="Quantity specified (${quantity}) is greater than asset [${assetId}] quantity on hand (${asset.quantityOnHandTotal}), not packing"/></if><service-call name="mantle.product.AssetServices.displace#AssetReservations" in-map="[assetId:assetId, orderId:shipmentItemSource.orderId,                                 orderItemSeqId:shipmentItemSource.orderItemSeqId, quantity:quantity]"/></if><set field="quantityRemaining" from="quantity"/><if condition="assetReservation != null"><then><set field="assetReservationList" from="[assetReservation]"/></then><else-if condition="!assetReservationList"><entity-find entity-name="mantle.product.issuance.AssetReservation" list="assetReservationList"><econdition field-name="orderId" from="shipmentItemSource.orderId"/><econdition field-name="orderItemSeqId" from="shipmentItemSource.orderItemSeqId"/><econdition field-name="productId" from="shipmentItemSource.productId"/><econdition field-name="quantityNotIssued" operator="not-equals" from="0.0"/><econdition field-name="assetId" ignore-if-empty="true"/><order-by field-name="assetId"/></entity-find></else-if></if><if condition="assetReservationList"><set field="resAssetMap" from="[:]"/><iterate list="assetReservationList" entry="assetReservation"><set field="curAssetId" from="assetReservation.assetId"/><if condition="!resAssetMap.containsKey(curAssetId)"><entity-find-one entity-name="mantle.product.asset.Asset" value-field="curAsset" for-update="true"><field-map field-name="assetId" from="curAssetId"/></entity-find-one><script><![CDATA[resAssetMap.put(curAssetId, curAsset)]]></script></if></iterate><iterate list="assetReservationList" entry="assetReservation"><set field="curAsset" from="resAssetMap.get(assetReservation.assetId)"/><entity-find-one entity-name="mantle.facility.Facility" value-field="facility" cache="true"><field-map field-name="facilityId" from="curAsset?.facilityId"/></entity-find-one><if condition="facility?.assetAllowIssueOverQoh != 'Y'"><if condition="assetReservation.quantity > curAsset.quantityOnHandTotal"><message type="warning"><![CDATA[For reservation ${assetReservation.assetReservationId} tried to issue quantity ${assetReservation.quantity} which is greater than quantity on hand ${curAsset.quantityOnHandTotal} for asset ${curAsset.assetId}, skipping]]></message><continue/></if></if><if condition="assetReservation.quantityNotIssued < 0.0"><return error="true" message="In pack ShipmentItemSource found AssetReservation ${assetReservation.assetReservationId} with invalid (negative) quantityNotIssued ${assetReservation.quantityNotIssued}"/></if><set field="quantityToIssue" from="assetReservation.quantityNotIssued > quantityRemaining ?                         quantityRemaining : assetReservation.quantityNotIssued"/><if condition="quantityToIssue <= 0.0"><continue/></if><set field="quantityRemaining" from="quantityRemaining > assetReservation.quantityNotIssued ?                         (quantityRemaining - assetReservation.quantityNotIssued) : 0.0"/><service-call name="mantle.product.AssetServices.issue#AssetReservation" in-map="[assetReservation:assetReservation, shipmentId:shipmentItemSource.shipmentId,                                 shipmentItemSourceId:shipmentItemSourceId, issuedDate:packDate, quantity:quantityToIssue]"/><if condition="curAsset.shipmentBoxTypeId"><service-call name="create#mantle.shipment.ShipmentPackage" out-map="[shipmentId:context.shipmentId,shipmentPackageSeqId:context.shipmentPackageSeqId,shipmentBoxTypeId:context.shipmentBoxTypeId,weight:context.weight,weightUomId:context.weightUomId,gatewayPackageId:context.gatewayPackageId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[shipmentId:shipmentItemSource.shipmentId, shipmentBoxTypeId:asset.shipmentBoxTypeId]"/></if></iterate></if><if condition="quantityRemaining && asset"><set field="quantityToIssue" from="asset.quantityOnHandTotal > quantityRemaining ?                         quantityRemaining : asset.quantityOnHandTotal"/><set field="quantityRemaining" from="quantityRemaining > quantityToIssue ? (quantityRemaining - quantityToIssue) : 0.0"/><service-call name="mantle.product.AssetServices.issue#Asset" in-map="[shipmentId:shipmentItemSource.shipmentId, shipmentItemSourceId:shipmentItemSourceId,                             quantity:quantityToIssue, issuedDate:packDate, assetId:assetId,                             orderId:shipmentItemSource.orderId, orderItemSeqId:shipmentItemSource.orderItemSeqId,                             invoiceId:shipmentItemSource.invoiceId, invoiceItemSeqId:shipmentItemSource.invoiceItemSeqId]"/></if><if condition="quantityRemaining"><service-call name="mantle.product.AssetServices.issue#AnyAssetForShipmentItemSource" out-map="[quantityRemaining:issueAnyOut.quantityRemaining]" in-map="[shipmentItemSourceId:shipmentItemSourceId, quantity:quantityRemaining, issuedDate:packDate, forceIssueOther:forceIssueOther]"/><set field="quantityRemaining" from="issueAnyOut.quantityRemaining"/></if><if condition="quantityRemaining"><return error="true" message="Unable to issue ${ec.l10n.format(quantityRemaining, '0.00')} out of quantity specified (${ec.l10n.format(quantity, '0.00')}) for Shipment Item Source ${shipmentItemSourceId}, not packing"/></if><if condition="forceAddToPackage || shipmentPackageSeqId"><service-call name="mantle.shipment.ShipmentServices.add#ItemToPackage" in-map="[shipmentId:shipmentItemSource.shipmentId, productId:shipmentItemSource.productId,                             shipmentPackageSeqId:shipmentPackageSeqId, quantity:quantity]" out-map="[shipmentPackageSeqId:context.shipmentPackageSeqId]"/></if><set field="shipmentItemSource.quantityNotHandled" from="shipmentItemSource.quantityNotHandled - quantity"/><if condition="shipmentItemSource.quantityNotHandled <= 0"><set field="shipmentItemSource.statusId" value="SisPacked"/></if><entity-update value-field="shipmentItemSource"/></actions></service>