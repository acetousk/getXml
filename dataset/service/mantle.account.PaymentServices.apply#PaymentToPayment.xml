<!--Service Location mantle.account.PaymentServices.apply#PaymentToPayment--><service verb="apply" noun="PaymentToPayment"><in-parameters><parameter name="paymentId" required="true"/><parameter name="toPaymentId" required="true"/><parameter name="amount" type="BigDecimal"><description><![CDATA[Defaults to the lesser of unappliedTotal on the two Payments.
                Actual amountApplied will never be greater than unappliedTotal of either Payment.]]></description></parameter><parameter name="billingAccountId"/><parameter name="overrideGlAccountId"/></in-parameters><out-parameters><parameter name="paymentApplicationId"/><parameter name="amountApplied" type="BigDecimal"/></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/><entity-find-one entity-name="mantle.account.payment.Payment" value-field="toPayment"><field-map field-name="paymentId" from="toPaymentId"/></entity-find-one><set field="amountApplied" from="0.0"/><service-call name="mantle.account.PaymentServices.get#PaymentTotals" in-map="[paymentId:paymentId]" out-map="[paymentTotal:totalOut.paymentTotal,appliedTotal:totalOut.appliedTotal,unappliedTotal:totalOut.unappliedTotal]"/><service-call name="mantle.account.PaymentServices.get#PaymentTotals" in-map="[paymentId:toPaymentId]" out-map="[paymentTotal:toTotalOut.paymentTotal,appliedTotal:toTotalOut.appliedTotal,unappliedTotal:toTotalOut.unappliedTotal]"/><if condition="!amount || amount > totalOut.unappliedTotal"><set field="amount" from="totalOut.unappliedTotal"/></if><if condition="amount > toTotalOut.unappliedTotal"><set field="amount" from="toTotalOut.unappliedTotal"/></if><if condition="amount == 0.0"><entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList"><econdition field-name="paymentId"/><econdition field-name="toPaymentId"/></entity-find><if condition="paymentApplicationList?.size() == 1"><set field="paymentApplicationId" from="paymentApplicationList[0].paymentApplicationId"/></if><return/></if><if condition="payment.amountUomId != toPayment.amountUomId"><message error="true"><![CDATA[Cannot apply payment ${paymentId} to payment ${toPaymentId}, from payment has a different currency (${payment.amountUomId}) than to payment (${toPayment.amountUomId})]]></message></if><if condition="payment.fromPartyId != toPayment.toPartyId"><message error="true"><![CDATA[Cannot apply payment ${paymentId} to payment ${toPaymentId}, from payment is from a different party (${payment.fromPartyId}) than to payment is to (${toPayment.toPartyId})]]></message></if><if condition="payment.toPartyId != toPayment.fromPartyId"><message error="true"><![CDATA[Cannot apply payment ${paymentId} to payment ${toPaymentId}, from payment is to a different party (${payment.toPartyId}) than to payment is from (${toPayment.fromPartyId})]]></message></if><check-errors/><if condition="!(payment.statusId in ['PmntDelivered', 'PmntConfirmed'])"><return message="Not applying payment ${paymentId} in status ${payment.statusId} to payment ${toPaymentId}, from payment must be in Delivered or Confirmed status"/></if><if condition="!(toPayment.statusId in ['PmntDelivered', 'PmntConfirmed'])"><return message="Not applying payment ${toPaymentId} in status ${toPayment.statusId} from payment ${paymentId}, to payment must be in Delivered or Confirmed status"/></if><set field="amountApplied" from="amount"/><set field="appliedDate" from="payment.effectiveDate != null && toPayment.effectiveDate != null ?                     (payment.effectiveDate > toPayment.effectiveDate ? payment.effectiveDate : toPayment.effectiveDate) :                     (payment.effectiveDate ?: toPayment.effectiveDate ?: ec.user.nowTimestamp)"/><service-call name="create#mantle.account.payment.PaymentApplication" out-map="[paymentApplicationId:context.paymentApplicationId,paymentId:context.paymentId,invoiceId:context.invoiceId,billingAccountId:context.billingAccountId,overrideGlAccountId:context.overrideGlAccountId,toPaymentId:context.toPaymentId,toInvoiceId:context.toInvoiceId,taxAuthGeoId:context.taxAuthGeoId,amountApplied:context.amountApplied,amountOriginallyApplied:context.amountOriginallyApplied,appliedDate:context.appliedDate,acctgTransResultEnumId:context.acctgTransResultEnumId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[paymentId:paymentId, toPaymentId:toPaymentId, billingAccountId:billingAccountId,                         overrideGlAccountId:overrideGlAccountId, amountApplied:amountApplied,                         appliedDate:appliedDate]"/></actions></service>