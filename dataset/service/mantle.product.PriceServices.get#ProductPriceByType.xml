<!--Service Location mantle.product.PriceServices.get#ProductPriceByType--><service verb="get" noun="ProductPriceByType"><in-parameters><parameter name="productId" required="true"/><parameter name="priceTypeEnumId" required="true"/><parameter name="quantity" type="BigDecimal" default="1.0"/><parameter name="validDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="priceUomId" default="ec.user.getPreference('CurrencyDefault') ?: 'USD'"/><parameter name="pricePurposeEnumId" default-value="PppPurchase"/><parameter name="productStoreId"/><parameter name="vendorPartyId"/><parameter name="customerPartyId"/></in-parameters><out-parameters><parameter name="price" type="BigDecimal"/><parameter name="productPriceId"/><parameter name="priceUomId"/></out-parameters><actions><entity-find entity-name="mantle.product.ProductPrice" list="currentPriceListAll"><date-filter valid-date="validDate"/><econdition field-name="priceTypeEnumId"/><econdition field-name="productId"/><econdition field-name="priceUomId"/><econdition field-name="pricePurposeEnumId" or-null="true"/><econdition field-name="productStoreId" or-null="true"/><econdition field-name="vendorPartyId" or-null="true"/><econdition field-name="customerPartyId" or-null="true"/><econdition field-name="price" operator="is-not-null"/><order-by field-name="-fromDate,-minQuantity"/></entity-find><if condition="currentPriceListAll.size() == 0"><return/></if><set field="currentPriceList" from="currentPriceListAll.findAll({ Map it -> ((BigDecimal) it.minQuantity) <= ((BigDecimal) quantity) })"/><set field="productPrice" from="findMaximalMatch(currentPriceList,                     [customerPartyId:customerPartyId, vendorPartyId:vendorPartyId, productStoreId:productStoreId])"/><set field="productPriceId" from="productPrice?.productPriceId"/><set field="price" from="productPrice?.price"/></actions></service>