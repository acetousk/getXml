<!--Service Location mantle.party.PartyServices.scan#PartyBadge--><service verb="scan" noun="PartyBadge"><in-parameters><parameter name="scanValue" type="java.lang.String" required="true" allow-html="none" entity-name="mantle.party.PartyBadgeScan" field-name="scanValue"/><parameter name="scanPurposeEnumId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.PartyBadgeScan" field-name="scanPurposeEnumId" default-value="PbspAccess"/><parameter name="facilityId" type="java.lang.String" required="false" allow-html="none" entity-name="mantle.party.PartyBadgeScan" field-name="facilityId"/><parameter name="lastUpdatedStamp" type="java.sql.Timestamp" required="false" allow-html="none" entity-name="mantle.party.PartyBadgeScan" field-name="lastUpdatedStamp"/><parameter name="scanDate" default="ec.user.nowTimestamp"/><parameter name="rateTypeEnumId" default-value="RatpStandard"/><parameter name="workTypeEnumId"/><parameter name="workEffortId"/><parameter name="breakHours" type="BigDecimal"/><parameter name="breakMinutes" type="BigDecimal"/><parameter name="pieceCount" type="BigDecimal"/></in-parameters><out-parameters><parameter name="partyBadgeId" entity-name="mantle.party.PartyBadge" field-name="partyBadgeId"/><parameter name="partyId" entity-name="mantle.party.PartyBadge" field-name="partyId"/><parameter name="organizationPartyId" entity-name="mantle.party.PartyBadge" field-name="organizationPartyId"/><parameter name="scanResultEnumId"/><parameter name="timeEntryId"/><parameter name="closedTimeEntryId"/></out-parameters><actions><service-call name="mantle.party.PartyServices.lookup#PartyBadge" in-map="context" out-map="[partyBadge:context.partyBadge]"/><if condition="!partyBadge"><return error="true" message="No badge found for scan value [${scanValue}]"/></if><set field="partyBadgeId" from="partyBadge.partyBadgeId"/><set field="partyId" from="partyBadge.partyId"/><set field="organizationPartyId" from="partyBadge.organizationPartyId"/><if condition="partyBadge.fromDate && partyBadge.fromDate > ec.user.nowTimestamp"><set field="scanResultEnumId" value="PbsrNotYetValid"/><service-call name="create#mantle.party.PartyBadgeScan" in-map="context" transaction="force-new"/><return error="true" message="Badge not yet valid"/></if><if condition="partyBadge.thruDate && partyBadge.thruDate < ec.user.nowTimestamp"><set field="scanResultEnumId" value="PbsrExpired"/><service-call name="create#mantle.party.PartyBadgeScan" in-map="context" transaction="force-new"/><return error="true" message="Badge expired"/></if><set field="scanResultEnumId" value="PbsrSuccess"/><service-call name="create#mantle.party.PartyBadgeScan" in-map="context"/><if condition="breakMinutes"><set field="breakHours" from="(breakHours ?: 0) + (breakMinutes / 60)"/></if><if condition="scanPurposeEnumId in ['PbspClockIn', 'PbspClockOut']"><set field="clientPartyId" from="partyBadge.organizationPartyId"/><entity-find entity-name="mantle.work.time.TimeEntry" list="openTimeEntryList"><econdition field-name="partyId"/><econdition field-name="thruDate" from="null"/><order-by field-name="-fromDate"/></entity-find><set field="openTimeEntry" from="openTimeEntryList ? openTimeEntryList[0] : null"/></if><if condition="scanPurposeEnumId == 'PbspClockIn'"><then><if condition="openTimeEntry"><service-call name="mantle.work.TimeServices.store#TimeEntry" in-map="openTimeEntry + [thruDate:scanDate, breakHours:breakHours, pieceCount:pieceCount]"/><set field="closedTimeEntryId" from="openTimeEntry.timeEntryId"/></if><set field="fromDate" from="scanDate"/><service-call name="mantle.work.TimeServices.create#TimeEntryClockIn" in-map="context" out-map="[timeEntryId:context.timeEntryId]"/><service-call name="update#mantle.party.PartyBadgeScan" in-map="[partyBadgeId:partyBadgeId, scanDate:scanDate, timeEntryId:timeEntryId]"/></then><else-if condition="scanPurposeEnumId == 'PbspClockOut'"><if condition="openTimeEntry"><then><service-call name="mantle.work.TimeServices.store#TimeEntry" in-map="openTimeEntry + [thruDate:scanDate, breakHours:breakHours, pieceCount:pieceCount]"/><set field="closedTimeEntryId" from="openTimeEntry.timeEntryId"/><service-call name="update#mantle.party.PartyBadgeScan" in-map="[partyBadgeId:partyBadgeId, scanDate:scanDate, timeEntryId:closedTimeEntryId]"/></then><else><return message="Scan succeeded but cannot clock out, no open time entry found"/></else></if></else-if></if></actions></service>