<!--Service Location mantle.humanres.EmploymentServices.check#NextPayrollTimePeriods--><service verb="check" noun="NextPayrollTimePeriods"><in-parameters><parameter name="organizationPartyId"/><parameter name="basisDate" type="java.sql.Date" default="new java.sql.Date(ec.user.nowTimestamp.time)"/></in-parameters><out-parameters/><actions><script><![CDATA[basisCal = ec.user.getCalendarSafe(); basisCal.setTime(basisDate)]]></script><entity-find-one entity-name="mantle.party.Organization" value-field="organization"><field-map field-name="partyId" from="organizationPartyId"/></entity-find-one><entity-find entity-name="mantle.party.time.TimePeriod" list="currentYearList"><date-filter valid-date="new Timestamp(basisDate.time)"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="PayrollYear"/></entity-find><if condition="!currentYearList"><script><![CDATA[yearFromCal = basisCal.clone(); yearFromCal.set(Calendar.DAY_OF_YEAR, 1)]]></script><script><![CDATA[yearThruCal = basisCal.clone(); yearThruCal.set(Calendar.DAY_OF_YEAR, yearThruCal.getActualMaximum(Calendar.DAY_OF_YEAR))]]></script><service-call name="create#mantle.party.time.TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId,parentPeriodId:createTpOut.parentPeriodId,previousPeriodId:createTpOut.previousPeriodId,timePeriodTypeId:createTpOut.timePeriodTypeId,partyId:createTpOut.partyId,periodNum:createTpOut.periodNum,periodName:createTpOut.periodName,fromDate:createTpOut.fromDate,thruDate:createTpOut.thruDate,isClosed:createTpOut.isClosed,lastUpdatedStamp:createTpOut.lastUpdatedStamp]" in-map="[timePeriodTypeId:'PayrollYear', partyId:organizationPartyId,                             periodNum:yearFromCal.get(Calendar.YEAR), beginningBalance:0, endingBalance:0,                             periodName:(organization.organizationName + ' ' + yearFromCal.get(Calendar.YEAR)),                             fromDate:new java.sql.Date(yearFromCal.getTimeInMillis()),                             thruDate:new java.sql.Date(yearThruCal.getTimeInMillis()), isClosed:'N']"/><set field="yearPeriodId" from="createTpOut.timePeriodId"/><else><script><![CDATA[yearFromCal = ec.user.getCalendarSafe(); yearFromCal.setTime(currentYearList.first.fromDate)]]></script><script><![CDATA[yearThruCal = ec.user.getCalendarSafe(); yearThruCal.setTime(currentYearList.first.thruDate)]]></script><set field="yearPeriodId" from="currentYearList.first.timePeriodId"/></else></if><entity-find entity-name="mantle.party.time.TimePeriod" list="currentQuarterList"><date-filter valid-date="new Timestamp(basisDate.time)"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="PayrollQuarter"/></entity-find><if condition="!currentQuarterList"><script><![CDATA[quarterNumber = (int) (basisCal.get(Calendar.MONTH)/3)]]></script><script><![CDATA[quarterFromCal = basisCal.clone(); quarterFromCal.set(Calendar.MONTH, (quarterNumber * 3)); quarterFromCal.set(Calendar.DAY_OF_MONTH, 1)]]></script><script><![CDATA[quarterThruCal = basisCal.clone(); quarterThruCal.set(Calendar.MONTH, ((quarterNumber + 1) * 3)); quarterThruCal.set(Calendar.DAY_OF_MONTH, 1); quarterThruCal.add(Calendar.DAY_OF_YEAR, -1)]]></script><service-call name="create#mantle.party.time.TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId,parentPeriodId:createTpOut.parentPeriodId,previousPeriodId:createTpOut.previousPeriodId,timePeriodTypeId:createTpOut.timePeriodTypeId,partyId:createTpOut.partyId,periodNum:createTpOut.periodNum,periodName:createTpOut.periodName,fromDate:createTpOut.fromDate,thruDate:createTpOut.thruDate,isClosed:createTpOut.isClosed,lastUpdatedStamp:createTpOut.lastUpdatedStamp]" in-map="[parentPeriodId:yearPeriodId, timePeriodTypeId:'PayrollQuarter', partyId:organizationPartyId,                             periodNum:(quarterNumber + 1), beginningBalance:0, endingBalance:0,                             periodName:(organization.organizationName + ' ' + quarterFromCal.get(Calendar.YEAR) + 'Q' + (quarterNumber + 1)),                             fromDate:new java.sql.Date(quarterFromCal.getTimeInMillis()),                             thruDate:new java.sql.Date(quarterThruCal.getTimeInMillis()), isClosed:'N']"/><set field="quarterPeriodId" from="createTpOut.timePeriodId"/><else><script><![CDATA[quarterFromCal = ec.user.getCalendarSafe(); quarterFromCal.setTime(currentQuarterList.first.fromDate)]]></script><script><![CDATA[quarterThruCal = ec.user.getCalendarSafe(); quarterThruCal.setTime(currentQuarterList.first.thruDate)]]></script><set field="quarterPeriodId" from="currentQuarterList.first.timePeriodId"/></else></if><entity-find entity-name="mantle.party.time.TimePeriod" list="currentMonthList"><date-filter valid-date="new Timestamp(basisDate.time)"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="PayrollMonth"/></entity-find><if condition="!currentMonthList"><script><![CDATA[monthNumber = basisCal.get(Calendar.MONTH)]]></script><script><![CDATA[monthFromCal = basisCal.clone(); monthFromCal.set(Calendar.DAY_OF_MONTH, 1)]]></script><script><![CDATA[monthThruCal = basisCal.clone(); monthThruCal.set(Calendar.DAY_OF_MONTH, basisCal.getActualMaximum(Calendar.DAY_OF_MONTH))]]></script><service-call name="create#mantle.party.time.TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId,parentPeriodId:createTpOut.parentPeriodId,previousPeriodId:createTpOut.previousPeriodId,timePeriodTypeId:createTpOut.timePeriodTypeId,partyId:createTpOut.partyId,periodNum:createTpOut.periodNum,periodName:createTpOut.periodName,fromDate:createTpOut.fromDate,thruDate:createTpOut.thruDate,isClosed:createTpOut.isClosed,lastUpdatedStamp:createTpOut.lastUpdatedStamp]" in-map="[parentPeriodId:quarterPeriodId, timePeriodTypeId:'PayrollMonth', partyId:organizationPartyId,                             periodNum:monthNumber+1, beginningBalance:0, endingBalance:0,                             periodName:(organization.organizationName + ' ' + monthFromCal.get(Calendar.YEAR) + '-' + (monthNumber + 1)),                             fromDate:new java.sql.Date(monthFromCal.getTimeInMillis()),                             thruDate:new java.sql.Date(monthThruCal.getTimeInMillis()), isClosed:'N']"/><set field="monthPeriodId" from="createTpOut.timePeriodId"/><else><script><![CDATA[monthFromCal = ec.user.getCalendarSafe(); monthFromCal.setTime(currentMonthList.first.fromDate)]]></script><script><![CDATA[monthThruCal = ec.user.getCalendarSafe(); monthThruCal.setTime(currentMonthList.first.thruDate)]]></script><set field="monthPeriodId" from="currentMonthList.first.timePeriodId"/></else></if><script><![CDATA[nextYearFromCal = yearFromCal.clone(); nextYearFromCal.add(Calendar.YEAR, 1); nextYearFromCal.getTimeInMillis()]]></script><entity-find entity-name="mantle.party.time.TimePeriod" list="nextYearList"><date-filter valid-date="new Timestamp(nextYearFromCal.getTimeInMillis())"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="PayrollYear"/></entity-find><if condition="!nextYearList"><script><![CDATA[nextYearThruCal = yearThruCal.clone(); nextYearThruCal.add(Calendar.YEAR, 1); nextYearThruCal.add(Calendar.DAY_OF_MONTH, 5); nextYearThruCal.set(Calendar.DAY_OF_MONTH, 1); nextYearThruCal.add(Calendar.DAY_OF_MONTH, -1); nextYearThruCal.getTimeInMillis()]]></script><set field="nextYearPeriodName" value="${organization.organizationName} ${nextYearFromCal.get(Calendar.YEAR)}"/><service-call name="create#mantle.party.time.TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId,parentPeriodId:createTpOut.parentPeriodId,previousPeriodId:createTpOut.previousPeriodId,timePeriodTypeId:createTpOut.timePeriodTypeId,partyId:createTpOut.partyId,periodNum:createTpOut.periodNum,periodName:createTpOut.periodName,fromDate:createTpOut.fromDate,thruDate:createTpOut.thruDate,isClosed:createTpOut.isClosed,lastUpdatedStamp:createTpOut.lastUpdatedStamp]" in-map="[previousPeriodId:yearPeriodId, timePeriodTypeId:'PayrollYear', partyId:organizationPartyId,                             beginningBalance:0, endingBalance:0, periodNum:nextYearFromCal.get(Calendar.YEAR),                             periodName:nextYearPeriodName, fromDate:new java.sql.Date(nextYearFromCal.getTimeInMillis()),                             thruDate:new java.sql.Date(nextYearThruCal.getTimeInMillis()), isClosed:'N']"/><set field="nextYearPeriodId" from="createTpOut.timePeriodId"/><else><script><![CDATA[nextYearFromCal = ec.user.getCalendarSafe(); nextYearFromCal.setTime(nextYearList.first.fromDate)]]></script><script><![CDATA[nextYearThruCal = ec.user.getCalendarSafe(); nextYearThruCal.setTime(nextYearList.first.thruDate)]]></script><set field="nextYearPeriodId" from="nextYearList.first.timePeriodId"/></else></if><script><![CDATA[nextQuarterFromCal = quarterFromCal.clone(); nextQuarterFromCal.add(Calendar.MONTH, 3); nextQuarterFromCal.add(Calendar.DAY_OF_MONTH, 5); nextQuarterFromCal.set(Calendar.DAY_OF_MONTH, 1); nextQuarterFromCal.getTimeInMillis()]]></script><entity-find entity-name="mantle.party.time.TimePeriod" list="nextQuarterList"><date-filter valid-date="new Timestamp(nextQuarterFromCal.getTimeInMillis())"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="PayrollQuarter"/></entity-find><if condition="!nextQuarterList"><set field="parentPeriodId" from="(nextQuarterFromCal.getTimeInMillis() < yearThruCal.getTimeInMillis()) ? yearPeriodId : nextYearPeriodId"/><script><![CDATA[nextQuarterThruCal = quarterThruCal.clone(); nextQuarterThruCal.add(Calendar.MONTH, 3); nextQuarterThruCal.add(Calendar.DAY_OF_MONTH, 5); nextQuarterThruCal.set(Calendar.DAY_OF_MONTH, 1); nextQuarterThruCal.add(Calendar.DAY_OF_MONTH, -1); nextQuarterThruCal.getTimeInMillis()]]></script><script><![CDATA[nextQuarterNumber = (int) (nextQuarterFromCal.get(Calendar.MONTH)/3)]]></script><set field="nextQuarterPeriodName" value="${organization.organizationName} ${nextQuarterFromCal.get(Calendar.YEAR)}Q${nextQuarterNumber + 1}"/><service-call name="create#mantle.party.time.TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId,parentPeriodId:createTpOut.parentPeriodId,previousPeriodId:createTpOut.previousPeriodId,timePeriodTypeId:createTpOut.timePeriodTypeId,partyId:createTpOut.partyId,periodNum:createTpOut.periodNum,periodName:createTpOut.periodName,fromDate:createTpOut.fromDate,thruDate:createTpOut.thruDate,isClosed:createTpOut.isClosed,lastUpdatedStamp:createTpOut.lastUpdatedStamp]" in-map="[parentPeriodId:parentPeriodId, previousPeriodId:quarterPeriodId,                             timePeriodTypeId:'PayrollQuarter', partyId:organizationPartyId, beginningBalance:0,                             endingBalance:0, periodNum:nextQuarterNumber+1, periodName:nextQuarterPeriodName,                             fromDate:new java.sql.Date(nextQuarterFromCal.getTimeInMillis()),                             thruDate:new java.sql.Date(nextQuarterThruCal.getTimeInMillis()), isClosed:'N']"/><set field="nextQuarterPeriodId" from="createTpOut.timePeriodId"/><else><script><![CDATA[nextQuarterFromCal = ec.user.getCalendarSafe(); nextQuarterFromCal.setTime(nextQuarterList.first.fromDate)]]></script><script><![CDATA[nextQuarterThruCal = ec.user.getCalendarSafe(); nextQuarterThruCal.setTime(nextQuarterList.first.thruDate)]]></script><set field="nextQuarterPeriodId" from="nextQuarterList.first.timePeriodId"/></else></if><script><![CDATA[nextMonthFromCal = monthFromCal.clone(); nextMonthFromCal.add(Calendar.MONTH, 1); nextMonthFromCal.add(Calendar.DAY_OF_MONTH, 5); nextMonthFromCal.set(Calendar.DAY_OF_MONTH, 1); nextMonthFromCal.getTimeInMillis()]]></script><entity-find entity-name="mantle.party.time.TimePeriod" list="nextMonthList"><date-filter valid-date="new Timestamp(nextMonthFromCal.getTimeInMillis())"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="PayrollMonth"/></entity-find><if condition="!nextMonthList"><set field="parentPeriodId" from="(nextMonthFromCal.getTimeInMillis() < quarterThruCal.getTimeInMillis()) ? quarterPeriodId : nextQuarterPeriodId"/><script><![CDATA[nextMonthNumber = nextMonthFromCal.get(Calendar.MONTH)]]></script><script><![CDATA[nextMonthThruCal = monthThruCal.clone(); nextMonthThruCal.add(Calendar.MONTH, 1); nextMonthThruCal.add(Calendar.DAY_OF_MONTH, 5); nextMonthThruCal.set(Calendar.DAY_OF_MONTH, 1); nextMonthThruCal.add(Calendar.DAY_OF_MONTH, -1); nextMonthThruCal.getTimeInMillis()]]></script><set field="nextMonthPeriodName" value="${organization.organizationName} ${nextMonthFromCal.get(Calendar.YEAR)}-${nextMonthNumber + 1}"/><service-call name="create#mantle.party.time.TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId,parentPeriodId:createTpOut.parentPeriodId,previousPeriodId:createTpOut.previousPeriodId,timePeriodTypeId:createTpOut.timePeriodTypeId,partyId:createTpOut.partyId,periodNum:createTpOut.periodNum,periodName:createTpOut.periodName,fromDate:createTpOut.fromDate,thruDate:createTpOut.thruDate,isClosed:createTpOut.isClosed,lastUpdatedStamp:createTpOut.lastUpdatedStamp]" in-map="[parentPeriodId:parentPeriodId, previousPeriodId:monthPeriodId,                             timePeriodTypeId:'PayrollMonth', partyId:organizationPartyId, beginningBalance:0,                             endingBalance:0, periodNum:nextMonthNumber+1, periodName:nextMonthPeriodName,                             fromDate:new java.sql.Date(nextMonthFromCal.getTimeInMillis()),                             thruDate:new java.sql.Date(nextMonthThruCal.getTimeInMillis()), isClosed:'N']"/><else/></if></actions></service>