<!--Service Location mantle.order.OrderServices.update#OrderStatus--><service verb="update" noun="OrderStatus"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderPartSeqId"/><parameter name="statusId" required="true"/><parameter name="placedDate" type="Timestamp"/><parameter name="approvedDate" type="Timestamp"/><parameter name="completedDate" type="Timestamp"/></in-parameters><out-parameters><parameter name="oldStatusId"/><parameter name="statusChanged" type="Boolean"/></out-parameters><actions><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader" for-update="true"/><entity-find entity-name="mantle.order.OrderPart" list="orderPartList" for-update="true"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId" ignore-if-empty="true"/></entity-find><iterate list="orderPartList" entry="orderPart"><service-call name="update#mantle.order.OrderPart" out-map="[orderId:context.orderId,orderPartSeqId:context.orderPartSeqId,parentPartSeqId:context.parentPartSeqId,partName:context.partName,statusId:context.statusId,vendorPartyId:context.vendorPartyId,customerPartyId:context.customerPartyId,otherPartyOrderId:context.otherPartyOrderId,otherPartyOrderDate:context.otherPartyOrderDate,facilityId:context.facilityId,carrierPartyId:context.carrierPartyId,shipmentMethodEnumId:context.shipmentMethodEnumId,tradeTermEnumId:context.tradeTermEnumId,settlementTermId:context.settlementTermId,postalContactMechId:context.postalContactMechId,telecomContactMechId:context.telecomContactMechId,trackingNumber:context.trackingNumber,shippingInstructions:context.shippingInstructions,maySplit:context.maySplit,signatureRequiredEnumId:context.signatureRequiredEnumId,giftMessage:context.giftMessage,isGift:context.isGift,isNewCustomer:context.isNewCustomer,partTotal:context.partTotal,priority:context.priority,shipAfterDate:context.shipAfterDate,shipBeforeDate:context.shipBeforeDate,estimatedShipDate:context.estimatedShipDate,estimatedDeliveryDate:context.estimatedDeliveryDate,estimatedPickUpDate:context.estimatedPickUpDate,validFromDate:context.validFromDate,validThruDate:context.validThruDate,autoCancelDate:context.autoCancelDate,dontCancelSetDate:context.dontCancelSetDate,dontCancelSetUserId:context.dontCancelSetUserId,disablePromotions:context.disablePromotions,disableShippingCalc:context.disableShippingCalc,disableTaxCalc:context.disableTaxCalc,reservationAutoEnumId:context.reservationAutoEnumId,checkoutId:context.checkoutId,checkoutUrl:context.checkoutUrl,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[orderId:orderId, orderPartSeqId:orderPart.orderPartSeqId, statusId:statusId]"/></iterate><set field="updateMap" from="[orderId:orderId, statusId:statusId]"/><if condition="placedDate != null && orderHeader.placedDate == null"><script><![CDATA[updateMap.put('placedDate', placedDate)]]></script></if><if condition="approvedDate != null && orderHeader.approvedDate == null"><script><![CDATA[updateMap.put('approvedDate', approvedDate)]]></script></if><if condition="completedDate != null && orderHeader.completedDate == null"><script><![CDATA[updateMap.put('completedDate', completedDate)]]></script></if><if condition="orderPartSeqId"><then><set field="allPartsSame" from="true"/><entity-find entity-name="mantle.order.OrderPart" list="allPartList"><econdition field-name="orderId"/></entity-find><iterate list="allPartList" entry="orderPart"><if condition="orderPart.statusId != statusId"><set field="allPartsSame" from="false"/></if></iterate><if condition="allPartsSame"><service-call name="update#mantle.order.OrderHeader" out-map="[orderId:context.orderId,orderName:context.orderName,entryDate:context.entryDate,placedDate:context.placedDate,approvedDate:context.approvedDate,completedDate:context.completedDate,statusId:context.statusId,processingStatusId:context.processingStatusId,orderRevision:context.orderRevision,currencyUomId:context.currencyUomId,billingAccountId:context.billingAccountId,productStoreId:context.productStoreId,salesChannelEnumId:context.salesChannelEnumId,terminalId:context.terminalId,displayId:context.displayId,externalId:context.externalId,externalRevision:context.externalRevision,originId:context.originId,originUrl:context.originUrl,syncStatusId:context.syncStatusId,systemMessageRemoteId:context.systemMessageRemoteId,visitId:context.visitId,enteredByPartyId:context.enteredByPartyId,parentOrderId:context.parentOrderId,recurCronExpression:context.recurCronExpression,lastOrderedDate:context.lastOrderedDate,recurAutoInvoice:context.recurAutoInvoice,remainingSubTotal:context.remainingSubTotal,grandTotal:context.grandTotal,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="updateMap"/></if></then><else><service-call name="update#mantle.order.OrderHeader" out-map="[orderId:context.orderId,orderName:context.orderName,entryDate:context.entryDate,placedDate:context.placedDate,approvedDate:context.approvedDate,completedDate:context.completedDate,statusId:context.statusId,processingStatusId:context.processingStatusId,orderRevision:context.orderRevision,currencyUomId:context.currencyUomId,billingAccountId:context.billingAccountId,productStoreId:context.productStoreId,salesChannelEnumId:context.salesChannelEnumId,terminalId:context.terminalId,displayId:context.displayId,externalId:context.externalId,externalRevision:context.externalRevision,originId:context.originId,originUrl:context.originUrl,syncStatusId:context.syncStatusId,systemMessageRemoteId:context.systemMessageRemoteId,visitId:context.visitId,enteredByPartyId:context.enteredByPartyId,parentOrderId:context.parentOrderId,recurCronExpression:context.recurCronExpression,lastOrderedDate:context.lastOrderedDate,recurAutoInvoice:context.recurAutoInvoice,remainingSubTotal:context.remainingSubTotal,grandTotal:context.grandTotal,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="updateMap"/></else></if></actions></service>