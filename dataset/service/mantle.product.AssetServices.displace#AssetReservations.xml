<!--Service Location mantle.product.AssetServices.displace#AssetReservations--><service verb="displace" noun="AssetReservations"><in-parameters><parameter name="assetId" required="true"/><parameter name="quantity" type="BigDecimal" required="true"><description><![CDATA[The full quantity, for an OrderItem
                quantity already on asset specified and the asset's availableToPromiseTotal will be subtracted]]></description></parameter><parameter name="orderId"/><parameter name="orderItemSeqId"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset" for-update="true"/><set field="availableToPromiseTotal" from="asset.availableToPromiseTotal"/><set field="assetQuantityReserved" from="0.0"/><entity-find entity-name="mantle.product.issuance.AssetReservation" list="assetAllResList"><econdition field-name="quantityNotIssued" operator="greater" from="0.0"/><econdition field-name="assetId"/><order-by field-name="-reservedDate"/></entity-find><if condition="orderId && orderItemSeqId"><then><filter-map-list list="assetAllResList" to-list="assetReservationList"><field-map field-name="orderId"/><field-map field-name="orderItemSeqId"/></filter-map-list><set field="assetOtherResList" from="assetAllResList - assetReservationList"/><iterate list="assetReservationList" entry="assetReservation"><set field="assetQuantityReserved" from="assetQuantityReserved + assetReservation.quantityNotIssued"/></iterate></then><else><set field="assetOtherResList" from="assetAllResList"/></else></if><set field="resQuantityToMove" from="quantity - assetQuantityReserved - availableToPromiseTotal"/><if condition="resQuantityToMove > 0.0"><set field="resQuantityRemaining" from="resQuantityToMove"/><set field="resToMoveList" from="[]"/><iterate list="assetOtherResList" entry="assetOtherRes"><if condition="resQuantityRemaining == 0.0"><break/></if><set field="curMoveQuantity" from="resQuantityRemaining > assetOtherRes.quantityNotIssued ? assetOtherRes.quantityNotIssued : resQuantityRemaining"/><script><![CDATA[resToMoveList.add(assetOtherRes)]]></script><set field="resQuantityRemaining" from="resQuantityRemaining - curMoveQuantity"/></iterate><script><![CDATA[Collections.reverse(resToMoveList)]]></script><set field="resQuantityRemaining" from="resQuantityToMove"/><iterate list="resToMoveList" entry="resToMove"><if condition="resQuantityRemaining == 0.0"><break/></if><set field="curMoveQuantity" from="resQuantityRemaining > resToMove.quantityNotIssued ? resToMove.quantityNotIssued : resQuantityRemaining"/><service-call name="mantle.product.AssetServices.reduce#AssetReservation" out-map="[quantityDeducted:reduceArOut.quantityDeducted]" out-map-add-to-existing="false" in-map="[assetReservationId:resToMove.assetReservationId, quantityToDeduct:curMoveQuantity, reserveIncreasedAsset:false]"/><service-call name="mantle.product.AssetServices.reserve#AssetForOrderItem" in-map="[orderId:resToMove.orderId, orderItemSeqId:resToMove.orderItemSeqId, skipAssetIds:[assetId]]"/><set field="resQuantityRemaining" from="resQuantityRemaining - reduceArOut.quantityDeducted"/></iterate></if><set field="resQuantityToClear" from="quantity - assetQuantityReserved"/><if condition="resQuantityToClear > 0.0 && orderId && orderItemSeqId"><entity-find entity-name="mantle.product.issuance.AssetReservation" list="oiOtherResList"><econdition field-name="assetId" operator="not-equals"/><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/><econdition field-name="productId" from="asset.productId"/><econdition field-name="quantityNotIssued" operator="greater" from="0.0"/></entity-find><iterate list="oiOtherResList" entry="oiOtherRes"><if condition="resQuantityToClear == 0.0"><break/></if><set field="curReduceQuantity" from="resQuantityToClear > oiOtherRes.quantityNotIssued ? oiOtherRes.quantityNotIssued : resQuantityToClear"/><service-call name="mantle.product.AssetServices.reduce#AssetReservation" out-map="[quantityDeducted:reduceArOut.quantityDeducted]" in-map="[assetReservationId:oiOtherRes.assetReservationId, quantityToDeduct:curReduceQuantity, reserveIncreasedAsset:false]"/><set field="resQuantityToClear" from="resQuantityToClear - reduceArOut.quantityDeducted"/></iterate></if></actions></service>