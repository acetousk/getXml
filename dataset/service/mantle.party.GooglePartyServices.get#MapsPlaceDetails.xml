<!--Service Location mantle.party.GooglePartyServices.get#MapsPlaceDetails--><service verb="get" noun="MapsPlaceDetails"><in-parameters><parameter name="placeId" required="true"/><parameter name="fields" default-value="formatted_address,address_component,geometry,place_id,plus_code,type"/><parameter name="googleCloudKey" default="ec.user.getPreference('google.cloud.api.key')"/></in-parameters><out-parameters><parameter name="result" type="Map"><parameter name="address_components" type="List"><parameter name="addressComponent" type="Map"/></parameter><parameter name="formatted_address"/><parameter name="geometry" type="Map"/><parameter name="place_id"/><parameter name="plus_code"/><parameter name="types" type="List"><parameter name="type"/></parameter></parameter></out-parameters><actions><if condition="!googleCloudKey"><log level="warn" message="In get#MapsPlacesResults no API key found, returning no results"/><return/></if><script><![CDATA[org.moqui.util.RestClient restClient = ec.service.rest()  // .method(org.moqui.util.RestClient.POST)
                def uriBuilder = restClient.uri().protocol("https").port(443).host("maps.googleapis.com")
                        .path("/maps/api/place/details/json")
                        .parameter("key", (String) googleCloudKey)
                        .parameter("place_id", (String) placeId)
                        .parameter("fields", (String) fields)
                uriBuilder.build()
                // ec.logger.warn("getUriString ${restClient.getUriString()}")

                org.moqui.util.RestClient.RestResponse restResponse = restClient.call()
                responseMap = (Map) restResponse.jsonObject()
                // ec.logger.warn("responseMap: ${responseMap}")
                if (responseMap?.status == 'ZERO_RESULTS') {
                    resultList = []
                    return
                }
                if (restResponse.statusCode < 200 || restResponse.statusCode >= 300 || responseMap?.status != 'OK') {
                    ec.logger.warn("Unsuccessful Place Details response for placeId ${placeId} http status ${restResponse.statusCode}: ${responseMap}")
                    ec.message.addPublic("Could not find address", "warning")
                    resultList = []
                    return
                }

                result = responseMap.result]]></script></actions></service>