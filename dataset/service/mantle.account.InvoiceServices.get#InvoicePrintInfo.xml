<!--Service Location mantle.account.InvoiceServices.get#InvoicePrintInfo--><service verb="get" noun="InvoicePrintInfo"><in-parameters><parameter name="invoiceId" required="true"/><parameter name="templateSettingSuffix" default-value="TemplateInvoicePrint"/></in-parameters><out-parameters><parameter name="invoice" type="Map"/><parameter name="currentStatus" type="Map"/><parameter name="invoiceTotal" type="BigDecimal"/><parameter name="appliedPaymentsTotal" type="BigDecimal"/><parameter name="unpaidTotal" type="BigDecimal"/><parameter name="noAdjustmentTotal" type="BigDecimal"/><parameter name="adjustmentTotal" type="BigDecimal"/><parameter name="settlementTerm" type="Map"/><parameter name="orderIdSet" type="Set"><parameter name="orderId"/></parameter><parameter name="paymentApplicationList" type="List"><parameter name="paymentApplication" type="Map"/></parameter><parameter name="invoiceItemList" type="List"><parameter name="invoiceItem" type="Map"/></parameter><parameter name="topItemList" type="List"><parameter name="invoiceItem" type="Map"/></parameter><parameter name="adjustmentItemList" type="List"><parameter name="invoiceItem" type="Map"/></parameter><parameter name="itemTypeSummaryMapList" type="List"><parameter name="itemTypeSummary" type="Map"/></parameter><parameter name="hasProductItems" type="Boolean"/><parameter name="hasTimeEntryItems" type="Boolean"/><parameter name="fromParty" type="Map"/><parameter name="fromContactInfo" type="Map"><description><![CDATA[From the mantle.party.ContactServices.get#PartyContactInfo service.]]></description></parameter><parameter name="logoImageLocation"/><parameter name="fromPartyMessage"/><parameter name="toPartyMessage"/><parameter name="toParty" type="Map"/><parameter name="toContactInfo" type="Map"><description><![CDATA[From the mantle.party.ContactServices.get#PartyContactInfo service.]]></description></parameter><parameter name="toBillingRep" type="Map"/><parameter name="finalizedStatusHistoryList" type="List"><parameter name="entityAuditLog" type="Map"/></parameter><parameter name="templateLocation"><description><![CDATA[Looked up from ProductStoreSetting and if no setting found for store or
                no stores are associated with the Invoice then from PartySetting (for fromPartyId).]]></description></parameter></out-parameters><actions><entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/><entity-find-one entity-name="moqui.basic.StatusItem" value-field="currentStatus"><field-map field-name="statusId" from="invoice?.statusId"/></entity-find-one><service-call name="mantle.account.InvoiceServices.get#InvoiceTotal" in-map="[invoiceId:invoiceId]" out-map="[invoiceTotal:context.invoiceTotal,appliedPaymentsTotal:context.appliedPaymentsTotal,unpaidTotal:context.unpaidTotal]"/><entity-find-related-one value-field="invoice" relationship-name="mantle.account.invoice.SettlementTerm" to-value-field="settlementTerm"/><entity-find entity-name="mantle.order.OrderItemBilling" list="orderItemBillingList"><econdition field-name="invoiceId"/><order-by field-name="invoiceItemSeqId"/></entity-find><set field="orderIdSet" from="new TreeSet(orderItemBillingList*.orderId)"/><entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList"><econditions combine="or"><econdition field-name="invoiceId"/><econdition field-name="toInvoiceId" from="invoiceId"/></econditions><order-by field-name="appliedDate"/></entity-find><entity-find entity-name="mantle.account.invoice.InvoiceItem" list="invoiceItemList"><econdition field-name="invoiceId"/><econdition field-name="isAdjustment" value="N" or-null="true"/><order-by field-name="invoiceItemSeqId"/></entity-find><set field="topItemList" from="invoiceItemList.findAll({ it.parentItemSeqId == null })"/><entity-find entity-name="mantle.account.invoice.InvoiceItem" list="adjustmentItemList"><econdition field-name="invoiceId"/><econdition field-name="isAdjustment" value="Y"/><order-by field-name="invoiceItemSeqId"/></entity-find><set field="noAdjustmentTotal" from="0.0"/><iterate list="invoiceItemList" entry="invoiceItem"><set field="noAdjustmentTotal" from="noAdjustmentTotal + ((invoiceItem.quantity != null ? invoiceItem.quantity : 1.0) * (invoiceItem.amount ?: 0.0))"/></iterate><set field="noAdjustmentTotal" from="(noAdjustmentTotal as BigDecimal).setScale(2, BigDecimal.ROUND_HALF_UP)"/><set field="adjustmentTotal" from="0.0"/><iterate list="adjustmentItemList" entry="invoiceItem"><set field="adjustmentTotal" from="adjustmentTotal + ((invoiceItem.quantity != null ? invoiceItem.quantity : 1.0) * (invoiceItem.amount ?: 0.0))"/></iterate><set field="adjustmentTotal" from="(adjustmentTotal as BigDecimal).setScale(2, BigDecimal.ROUND_HALF_UP)"/><set field="hasProductItems" from="false"/><set field="hasTimeEntryItems" from="false"/><set field="itemTypeSummaryMapMap" from="[:]"/><iterate list="invoiceItemList" entry="invoiceItem"><set field="mapKey" from="invoiceItem.itemTypeEnumId"/><if condition="invoiceItem.itemTypeEnumId == 'ItemTimeEntry'"><set field="mapKey" from="mapKey + '::' + invoiceItem.amount"/><set field="hasTimeEntryItems" from="true"/></if><if condition="invoiceItem.productId"><set field="hasProductItems" from="true"/></if><set field="itemTypeSummaryMap" from="itemTypeSummaryMapMap.get(mapKey)"/><if condition="!itemTypeSummaryMap"><set field="itemTypeSummaryMap" from="[itemTypeEnumId:invoiceItem.itemTypeEnumId, quantity:0, total:0]"/><if condition="invoiceItem.itemTypeEnumId == 'ItemTimeEntry'"><set field="itemTypeSummaryMap.amount" from="invoiceItem.amount"/></if><script><![CDATA[itemTypeSummaryMapMap.put(mapKey, itemTypeSummaryMap)]]></script></if><set field="itemTypeSummaryMap.quantity" from="itemTypeSummaryMap.quantity + (invoiceItem.quantity ?: 1)"/><set field="itemTypeSummaryMap.total" from="itemTypeSummaryMap.total + ((invoiceItem.quantity ?: 1) * (invoiceItem.amount ?: 0))"/></iterate><set field="itemTypeSummaryMapList" from="itemTypeSummaryMapMap.values()"/><entity-find-one entity-name="mantle.party.PartyDetail" value-field="fromParty"><field-map field-name="partyId" from="invoice.fromPartyId"/></entity-find-one><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:fromContactInfo.postalContactMechId,postalContactMech:fromContactInfo.postalContactMech,postalContactMechPurposeId:fromContactInfo.postalContactMechPurposeId,postalAddress:fromContactInfo.postalAddress,postalAddressStateGeo:fromContactInfo.postalAddressStateGeo,postalAddressCountryGeo:fromContactInfo.postalAddressCountryGeo,postalAddressGeoPoint:fromContactInfo.postalAddressGeoPoint,postalTrustLevelEnum:fromContactInfo.postalTrustLevelEnum,telecomContactMechId:fromContactInfo.telecomContactMechId,telecomContactMech:fromContactInfo.telecomContactMech,telecomPartyContactMech:fromContactInfo.telecomPartyContactMech,telecomContactMechPurposeId:fromContactInfo.telecomContactMechPurposeId,telecomNumber:fromContactInfo.telecomNumber,faxContactMechId:fromContactInfo.faxContactMechId,faxContactMech:fromContactInfo.faxContactMech,faxPartyContactMech:fromContactInfo.faxPartyContactMech,faxContactMechPurposeId:fromContactInfo.faxContactMechPurposeId,faxTelecomNumber:fromContactInfo.faxTelecomNumber,emailContactMechId:fromContactInfo.emailContactMechId,emailContactMech:fromContactInfo.emailContactMech,emailPartyContactMech:fromContactInfo.emailPartyContactMech,emailContactMechPurposeId:fromContactInfo.emailContactMechPurposeId,emailAddress:fromContactInfo.emailAddress,webContactMechId:fromContactInfo.webContactMechId,webContactMech:fromContactInfo.webContactMech,webPartyContactMech:fromContactInfo.webPartyContactMech,webContactMechPurposeId:fromContactInfo.webContactMechPurposeId,webAddress:fromContactInfo.webAddress,otherContactMechId:fromContactInfo.otherContactMechId,otherContactMech:fromContactInfo.otherContactMech,otherContactMechPurposeId:fromContactInfo.otherContactMechPurposeId,otherInfoString:fromContactInfo.otherInfoString]" in-map="[partyId:invoice.fromPartyId, postalContactMechPurposeId:'PostalPayment',                         telecomContactMechPurposeId:'PhonePayment', faxContactMechPurposeId:'PhonePaymentFax',                         emailContactMechPurposeId:'EmailPayment']"/><service-call name="mantle.party.PartyServices.get#PartyContentLocation" out-map="[contentLocation:logoImageOut.contentLocation,partyContent:logoImageOut.partyContent,contentText:logoImageOut.contentText]" in-map="[partyId:invoice.fromPartyId, partyContentTypeEnumIdList:['PcntLogoImage', 'PcntPrimaryImage']]"/><set field="logoImageLocation" from="logoImageOut.contentLocation"/><service-call name="mantle.party.PartyServices.get#PartyContentLocation" out-map="[contentLocation:messageFromOut.contentLocation,partyContent:messageFromOut.partyContent,contentText:messageFromOut.contentText]" in-map="[partyId:invoice.fromPartyId, partyContentTypeEnumIdList:['PcntInvoiceMessageFrom'], getText:true]"/><set field="fromPartyMessage" from="messageFromOut.contentText"/><service-call name="mantle.party.PartyServices.get#PartyContentLocation" out-map="[contentLocation:messageToOut.contentLocation,partyContent:messageToOut.partyContent,contentText:messageToOut.contentText]" in-map="[partyId:invoice.toPartyId, partyContentTypeEnumIdList:['PcntInvoiceMessageTo'], getText:true]"/><set field="toPartyMessage" from="messageToOut.contentText"/><log level="warn" message="toPartyMessage: ${toPartyMessage}"/><entity-find-one entity-name="mantle.party.PartyDetail" value-field="toParty"><field-map field-name="partyId" from="invoice.toPartyId"/></entity-find-one><service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="[postalContactMechId:toContactInfo.postalContactMechId,postalContactMech:toContactInfo.postalContactMech,postalContactMechPurposeId:toContactInfo.postalContactMechPurposeId,postalAddress:toContactInfo.postalAddress,postalAddressStateGeo:toContactInfo.postalAddressStateGeo,postalAddressCountryGeo:toContactInfo.postalAddressCountryGeo,postalAddressGeoPoint:toContactInfo.postalAddressGeoPoint,postalTrustLevelEnum:toContactInfo.postalTrustLevelEnum,telecomContactMechId:toContactInfo.telecomContactMechId,telecomContactMech:toContactInfo.telecomContactMech,telecomPartyContactMech:toContactInfo.telecomPartyContactMech,telecomContactMechPurposeId:toContactInfo.telecomContactMechPurposeId,telecomNumber:toContactInfo.telecomNumber,faxContactMechId:toContactInfo.faxContactMechId,faxContactMech:toContactInfo.faxContactMech,faxPartyContactMech:toContactInfo.faxPartyContactMech,faxContactMechPurposeId:toContactInfo.faxContactMechPurposeId,faxTelecomNumber:toContactInfo.faxTelecomNumber,emailContactMechId:toContactInfo.emailContactMechId,emailContactMech:toContactInfo.emailContactMech,emailPartyContactMech:toContactInfo.emailPartyContactMech,emailContactMechPurposeId:toContactInfo.emailContactMechPurposeId,emailAddress:toContactInfo.emailAddress,webContactMechId:toContactInfo.webContactMechId,webContactMech:toContactInfo.webContactMech,webPartyContactMech:toContactInfo.webPartyContactMech,webContactMechPurposeId:toContactInfo.webContactMechPurposeId,webAddress:toContactInfo.webAddress,otherContactMechId:toContactInfo.otherContactMechId,otherContactMech:toContactInfo.otherContactMech,otherContactMechPurposeId:toContactInfo.otherContactMechPurposeId,otherInfoString:toContactInfo.otherInfoString]" in-map="[partyId:invoice.toPartyId, postalContactMechPurposeId:'PostalBilling',                         telecomContactMechPurposeId:'PhoneBilling', emailContactMechPurposeId:'EmailBilling']"/><entity-find entity-name="mantle.party.PartyRelationship" list="toBillingRelList"><date-filter/><econdition field-name="toPartyId" from="invoice.toPartyId"/><econdition field-name="fromRoleTypeId" value="ClientBilling"/></entity-find><entity-find-one entity-name="mantle.party.PartyDetail" value-field="toBillingRep"><field-map field-name="partyId" from="toBillingRelList?.first?.fromPartyId"/></entity-find-one><entity-find entity-name="moqui.entity.EntityAuditLog" list="finalizedStatusHistoryList"><econdition field-name="changedEntityName" value="mantle.account.invoice.Invoice"/><econdition field-name="changedFieldName" value="statusId"/><econdition field-name="pkPrimaryValue" from="invoiceId"/><econdition field-name="newValueText" value="InvoiceFinalized"/><order-by field-name="-changedDate"/></entity-find><set field="templateLocation" from="null"/><service-call name="mantle.account.InvoiceServices.find#InvoiceProductStores" in-map="context" out-map="[productStoreIdSet:context.productStoreIdSet]"/><if condition="productStoreIdSet"><entity-find entity-name="mantle.product.store.ProductStoreSetting" list="productStoreSettingList" cache="true"><date-filter/><econdition field-name="productStoreId" from="productStoreIdSet.first()"/><econdition field-name="settingTypeEnumId" value="Psst${templateSettingSuffix}"/><order-by field-name="-fromDate"/></entity-find><if condition="productStoreSettingList"><set field="templateLocation" from="productStoreSettingList[0].settingValue"/></if></if><if condition="!templateLocation && invoice.fromPartyId"><service-call name="mantle.party.PartyServices.get#PartySettingValue" out-map="[settingValue:ptySettingOut.settingValue]" in-map="[partyId:invoice.fromPartyId, partySettingTypeId:('Org' + templateSettingSuffix)]"/><set field="templateLocation" from="ptySettingOut?.settingValue"/></if></actions></service>