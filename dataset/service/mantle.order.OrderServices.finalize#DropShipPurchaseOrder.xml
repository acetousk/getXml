<!--Service Location mantle.order.OrderServices.finalize#DropShipPurchaseOrder--><service verb="finalize" noun="DropShipPurchaseOrder"><in-parameters><parameter name="purchaseOrderId" required="true"/><parameter name="orderPartSeqId" required="true"/><parameter name="productQuantityList" type="List" default="[[productId:'100890']]"><parameter name="productId"/><parameter name="quantity" type="BigDecimal"/></parameter><parameter name="trackingCode"/><parameter name="autoShipShipment" type="Boolean" default="true"/><parameter name="autoCreateSalesShipment" type="Boolean" default="true"/></in-parameters><out-parameters><parameter name="needsToAndHasSetTrackingCode" type="Boolean"/><parameter name="setTrackingCodeShipmentPackageRouteSegList" type="List"/><parameter name="updatedShipmentIdList" type="List"/><parameter name="shipmentId"/><parameter name="changedShipmentPackageSeqIdList"/></out-parameters><actions><set field="orderId" from="purchaseOrderId"/><set field="needsToAndHasSetTrackingCode" from="trackingCode ? false : true"/><set field="setTrackingCodeShipmentPackageRouteSegList" from="[]"/><set field="updatedShipmentIdList" from="[]"/><set field="changedShipmentPackageSeqIdList" from="[]"/><entity-find entity-name="mantle.order.OrderItem" list="allOrderItemList" for-update="true"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/></entity-find><iterate list="productQuantityList" entry="productQuantity"><set field="productId" from="productQuantity.productId"/><set field="quantity" from="productQuantity.quantity"/><filter-map-list list="allOrderItemList" to-list="orderItemList"><field-map field-name="productId"/></filter-map-list><if condition="orderItemList.size() == 0"><log level="warn" message="No OrderItem found for productId ${productQuantity.productId} in Order ${purchaseOrderId}"/><continue/></if><set field="orderItem" from="orderItemList.get(0)"/><if condition="productQuantity.quantity && orderItemList.size() == 1"><set field="orderItem.quantity" from="productQuantity.quantity"/><entity-update value-field="orderItem"/></if><if condition="orderItemList.size() > 1"><return type="danger" message="Cannot update or finalize Dropship Purchase Order. Multiple OrderItems found for productId ${productQuantity.productId} in Order ${purchaseOrderId}"/></if><set field="orderItemSeqId" from="orderItem.orderItemSeqId"/><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="shipmentItemSourceList" limit="2" for-update="true"><econdition field-name="orderId"/><econdition field-name="orderItemSeqId"/><econdition field-name="productId"/><order-by field-name="-lastUpdatedStamp"/></entity-find><if condition="shipmentItemSourceList.size() == 0"><log level="warn" message="No ShipmentItemSource found for OrderItem ${orderItemSeqId} in Order ${purchaseOrderId} for product ${productId}"/><continue/></if><if condition="shipmentItemSourceList.size() > 1"><return type="danger" message="Cannot update or finalize Dropship Purchase Order. Multiple ShipmentItemSource found for OrderItem ${orderItemSeqId} in Order ${purchaseOrderId} for product ${productId}"/></if><set field="shipmentItemSource" from="shipmentItemSourceList.getFirst()"/><if condition="shipmentItemSource.shipmentId"><set field="updatedShipmentIdList" from="updatedShipmentIdList + shipmentItemSource.shipmentId"/></if><if condition="productQuantity.quantity && shipmentItemSource.quantity != productQuantity.quantity"><set field="shipmentItemSource.quantity" from="productQuantity.quantity"/><set field="shipmentItemSource.quantityNotHandled" from="productQuantity.quantity"/><entity-update value-field="shipmentItemSource"/></if><entity-find-one entity-name="mantle.shipment.ShipmentItem" value-field="shipmentItem" for-update="true" auto-field-map="[shipmentId:shipmentItemSource.shipmentId, productId:productId]"/><if condition="!shipmentItem"><log level="warn" message="No ShipmentItem found for OrderItem ${orderItemSeqId} in Order ${purchaseOrderId} for product ${productId}"/><continue/></if><if condition="productQuantity.quantity && shipmentItem.quantity != productQuantity.quantity"><set field="shipmentItem.quantity" from="productQuantity.quantity"/><entity-update value-field="shipmentItem"/></if><entity-find entity-name="mantle.shipment.ShipmentPackageContent" list="shipmentPackageContentList" for-update="true"><econdition field-name="shipmentId" from="shipmentItemSource.shipmentId"/><econdition field-name="productId"/><order-by field-name="-lastUpdatedStamp"/></entity-find><if condition="shipmentPackageContentList.size() == 0"><log level="warn" message="No ShipmentPackageContent found for OrderItem ${orderItemSeqId} in Order ${purchaseOrderId} for product ${productId}"/></if><if condition="shipmentPackageContentList.size() > 1"><return type="danger" message="Cannot update or finalize Dropship Purchase Order. Multiple ShipmentPackageContent found for OrderItem ${orderItemSeqId} in Order ${purchaseOrderId} for product ${productId}"/></if><if condition="shipmentPackageContentList.size() == 1"><set field="shipmentPackageContent" from="shipmentPackageContentList.getFirst()"/><if condition="productQuantity.quantity && shipmentPackageContent.quantity != productQuantity.quantity"><set field="shipmentPackageContent.quantity" from="productQuantity.quantity"/><entity-update value-field="shipmentPackageContent"/></if><if condition="trackingCode"><entity-find entity-name="mantle.shipment.ShipmentPackageRouteSeg" list="shipmentPackageRouteSegList" for-update="true"><econdition field-name="shipmentId" from="shipmentItemSource.shipmentId"/><econdition field-name="shipmentPackageSeqId" from="shipmentPackageContent.shipmentPackageSeqId"/><econdition field-name="trackingCode" or-null="true"/><order-by field-name="-lastUpdatedStamp"/></entity-find><iterate list="shipmentPackageRouteSegList" entry="shipmentPackageRouteSeg"><if condition="setTrackingCodeShipmentPackageRouteSegList.contains([shipmentId:shipmentItemSource.shipmentId,                                 shipmentPackageSeqId:shipmentPackageContent.shipmentPackageSeqId, shipmentRouteSegmentSeqId:shipmentPackageRouteSeg.shipmentRouteSegmentSeqId])"><continue/></if><if condition="shipmentPackageRouteSeg.trackingCode != trackingCode"><set field="shipmentPackageRouteSeg.trackingCode" from="trackingCode"/><entity-update value-field="shipmentPackageRouteSeg"/><set field="setTrackingCodeShipmentPackageRouteSegList" from="setTrackingCodeShipmentPackageRouteSegList                                     + [shipmentId:shipmentItemSource.shipmentId, shipmentPackageSeqId:shipmentPackageContent.shipmentPackageSeqId,                                     shipmentRouteSegmentSeqId:shipmentPackageRouteSeg.shipmentRouteSegmentSeqId]"/></if><set field="needsToAndHasSetTrackingCode" from="true"/></iterate></if></if><if condition="shipmentItemSource.shipmentId"><if condition="!updatedShipmentIdList.contains(shipmentItemSource.shipmentId)"><set field="updatedShipmentIdList" from="updatedShipmentIdList + shipmentItemSource.shipmentId"/></if></if></iterate><if condition="!needsToAndHasSetTrackingCode"><log level="warn" message="trackingCode is set, but cannot be updated"/></if><if condition="autoShipShipment"><iterate list="updatedShipmentIdList" entry="shipmentId"><service-call name="mantle.shipment.ShipmentServices.ship#Shipment" in-map="[shipmentId:shipmentId]"/></iterate></if><if condition="autoCreateSalesShipment"><entity-find-one entity-name="mantle.order.OrderHeader" value-field="purchaseOrder" for-update="true" auto-field-map="[orderId:purchaseOrderId]"/><if condition="!purchaseOrder"><return type="danger" message="No Order found for orderId ${purchaseOrderId}"/></if><if condition="purchaseOrder.parentOrderId"><then><entity-find-one entity-name="mantle.order.OrderHeader" value-field="salesOrder" for-update="true"><field-map field-name="orderId" from="purchaseOrder.parentOrderId"/></entity-find-one><if condition="salesOrder"><then><entity-find entity-name="mantle.shipment.ShipmentAndItemSource" list="shipmentItemSourceList"><econdition field-name="orderId" from="salesOrder.orderId"/><econdition field-name="orderItemSeqId" operator="in" from="allOrderItemList*.orderItemSeqId"/><econdition field-name="shipmentStatusId" operator="not-in" value="ShipRejected,ShipCancelled"/><econdition field-name="statusId" operator="not-equals" value="SisCancelled"/><order-by field-name="-lastUpdatedStamp"/></entity-find><set field="shipment" from="shipmentItemSourceList?.getFirst()"/><set field="shipmentId" from="shipment?.shipmentId"/><set field="shipmentPackageSeqId" from="null"/><if condition="!shipmentId"><service-call name="mantle.shipment.ShipmentServices.create#OrderPartShipment" out-map="[shipmentId:context.shipmentId,shipmentPackageSeqId:context.shipmentPackageSeqId]" in-map="[orderId:salesOrder.orderId,orderPartSeqId:orderPartSeqId,createPackage:false]"/><set field="changedShipmentPackageSeqIdList" from="changedShipmentPackageSeqIdList + shipmentPackageSeqId"/></if><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment" auto-field-map="[shipmentId:shipmentId]"/><if condition="!shipment"><log level="warn" message="No Shipment found for orderId ${salesOrder.orderId}"/></if><if condition="!['ShipPicked','ShipPacked','ShipShipped'].contains(shipment.statusId)"><if condition="!shipmentItemSourceList"><entity-find entity-name="mantle.order.OrderItem" list="allOrderItemList" for-update="true"><econdition field-name="orderId" from="salesOrder.orderId"/><econdition field-name="orderPartSeqId"/></entity-find><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="shipmentItemSourceList"><econdition field-name="orderId" from="salesOrder.orderId"/></entity-find></if><if condition="!shipmentItemSourceList"><return type="danger" error="true" message="Not packing shipment because no ShipmentItemSource found for Sales Order ${salesOrder.orderId}"/></if><iterate list="shipmentItemSourceList" entry="shipmentItemSource"><service-call name="mantle.shipment.ShipmentServices.pack#ShipmentItemSource" out-map="[shipmentPackageSeqId:context.shipmentPackageSeqId]" in-map="[shipmentItemSourceId:shipmentItemSource.shipmentItemSourceId,                                     quantity:shipmentItemSource.quantity, shipmentPackageSeqId:shipmentPackageSeqId,                                     forceAddToPackage:true]"/><service-call name="mantle.shipment.ShipmentServices.update#ShipmentPackageAndRouteSeg" in-map="[shipmentId:shipmentId,shipmentPackageSeqId:shipmentPackageSeqId,                                         trackingCode:trackingCode]"/><set field="changedShipmentPackageSeqIdList" from="changedShipmentPackageSeqIdList + shipmentPackageSeqId"/></iterate></if><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment" auto-field-map="[shipmentId:shipmentId]"/><if condition="!['ShipPacked','ShipShipped'].contains(shipment.statusId)"><service-call name="mantle.shipment.ShipmentServices.pack#Shipment" in-map="[shipmentId:shipmentId]"/></if><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment" auto-field-map="[shipmentId:shipmentId]"/><if condition="!['ShipShipped'].contains(shipment.statusId)"><service-call name="mantle.shipment.ShipmentServices.ship#Shipment" in-map="[shipmentId:shipmentId]"/></if></then><else><log level="warn" message="Not updating unknown orderId ${purchaseOrder.parentOrderId}"/></else></if></then><else><log level="warn" message="Not updating Sales Order Shipment No parentOrderId found for orderId ${purchaseOrderId}"/></else></if></if></actions></service>