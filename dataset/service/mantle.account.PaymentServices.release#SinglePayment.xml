<!--Service Location mantle.account.PaymentServices.release#SinglePayment--><service verb="release" noun="SinglePayment"><in-parameters><parameter name="paymentId" required="true"/></in-parameters><out-parameters><parameter name="paymentGatewayResponseId"/></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/><if condition="payment == null"><return message="Payment ${paymentId} not found"/></if><if condition="payment.statusId != 'PmntAuthorized'"><if condition="payment.statusId == 'PmntDelivered'"><return error="true" message="Cannot release payment ${paymentId}, because it is not in the authorized status. The payment is delivered (captured), so try a refund instead."/><else><return error="true" message="Cannot release payment ${paymentId}, must be in the authorized status."/></else></if></if><service-call name="mantle.account.PaymentServices.get#AuthorizePaymentGatewayResponse" out-map="[paymentGatewayResponse:authRespOut.paymentGatewayResponse]" in-map="[paymentId:paymentId]"/><if condition="authRespOut.paymentGatewayResponse"><set field="paymentGatewayConfigId" from="authRespOut.paymentGatewayResponse.paymentGatewayConfigId"/></if><if condition="!paymentGatewayConfigId"><set field="paymentGatewayConfigId" from="payment.paymentGatewayConfigId"/></if><if condition="!paymentGatewayConfigId && payment.paymentMethodId"><set field="paymentMethod" from="payment.method"/><set field="paymentGatewayConfigId" from="paymentMethod?.paymentGatewayConfigId"/></if><if condition="!paymentGatewayConfigId && payment.paymentInstrumentEnumId == 'PiFinancialAccount'"><set field="paymentGatewayConfigId" from="FinancialAccountLocal"/></if><entity-find-one entity-name="mantle.account.method.PaymentGatewayConfig" value-field="paymentGatewayConfig" cache="true"/><if condition="paymentGatewayConfig == null"><return error="true" message="Not releasing (voiding) Payment ${paymentId}, could not find PaymentGatewayConfig"/></if><if condition="!paymentGatewayConfig.releaseServiceName"><log level="warn" message="Not releasing (voiding) Payment ${paymentId}, no releaseServiceName in PaymentGatewayConfig [${paymentGatewayConfigId}]"/><return/></if><if condition="!payment.paymentGatewayConfigId"><set field="payment.paymentGatewayConfigId" from="paymentGatewayConfigId"/><entity-update value-field="payment"/></if><service-call name="${paymentGatewayConfig.releaseServiceName}" out-map="releaseOut" in-map="[paymentId:payment.paymentId, paymentGatewayConfigId:paymentGatewayConfig.paymentGatewayConfigId]"/><set field="paymentGatewayResponseId" from="releaseOut.paymentGatewayResponseId"/><if condition="!paymentGatewayResponseId"><then><log level="warn" message="Call to ${paymentGatewayConfig.releaseServiceName} did not return a paymentGatewayResponseId (for Payment ${payment.paymentId})"/><entity-find entity-name="mantle.account.method.PaymentGatewayResponse" list="paymentGatewayResponseList"><econdition field-name="paymentMethodId" from="payment.paymentMethodId"/><order-by field-name="-transactionDate"/></entity-find><if condition="paymentGatewayResponseList && (paymentGatewayResponseList[0].transactionDate.time + 60000) > ec.user.nowTimestamp.time"><set field="paymentGatewayResponse" from="paymentGatewayResponseList[0]"/><set field="paymentGatewayResponseId" from="paymentGatewayResponse.paymentGatewayResponseId"/></if></then><else><entity-find-one entity-name="mantle.account.method.PaymentGatewayResponse" value-field="paymentGatewayResponse"><field-map field-name="paymentGatewayResponseId"/></entity-find-one></else></if><if condition="paymentGatewayResponse == null"><log level="error" message="No PaymentGatewayResponse found after call to ${paymentGatewayConfig.releaseServiceName} (for Payment ${payment.paymentId})"/></if><if condition="paymentGatewayResponse?.resultSuccess == 'Y'"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId, statusId:'PmntPromised', paymentAuthCode:null, paymentRefNum:null]"/></if></actions></service>