<!--Service Location org.moqui.impl.WikiServices.get#WikiPageInfo--><service verb="get" noun="WikiPageInfo"><in-parameters><parameter name="wikiSpaceId"/><parameter name="pagePath"/><parameter name="wikiPageId"/><parameter name="extraPathNameList" type="List"/><parameter name="historySeqId"/><parameter name="versionName"/></in-parameters><out-parameters><parameter name="wikiSpaceId"/><parameter name="pagePath"/><parameter name="wikiPageId"/><parameter name="wikiSpace" type="org.moqui.entity.EntityValue"/><parameter name="wikiPage" type="org.moqui.entity.EntityValue"/><parameter name="rootPageLocation"/><parameter name="rootPageRef" type="org.moqui.resource.ResourceReference"/><parameter name="spaceRootName"/><parameter name="pageReference" type="org.moqui.resource.ResourceReference"/><parameter name="wikiType"/><parameter name="versionName"/><parameter name="currentVersionName"/><parameter name="publishedVersionName"/><parameter name="attachmentList" type="List"><parameter name="attachmentInfo" type="Map"><parameter name="filename"/><parameter name="contentType"/><parameter name="lastModified" type="Long"/></parameter></parameter><parameter name="pageLocation"/><parameter name="pageName"/><parameter name="parentPath"/><parameter name="breadcrumbNameList" type="List"><parameter name="pageName"/></parameter><parameter name="breadcrumbMapList" type="List"><parameter name="breadcrumbMap"><parameter name="pageName"/><parameter name="pagePath"/></parameter></parameter></out-parameters><actions><service-call name="org.moqui.impl.WikiServices.get#WikiPageReference" in-map="context" out-map="[wikiSpaceId:context.wikiSpaceId,pagePath:context.pagePath,wikiPageId:context.wikiPageId,wikiSpace:context.wikiSpace,wikiPage:context.wikiPage,rootPageLocation:context.rootPageLocation,rootPageRef:context.rootPageRef,spaceRootName:context.spaceRootName,pageReference:context.pageReference]"/><if condition="wikiSpace.restrictView == 'Y'"><entity-find entity-name="moqui.resource.wiki.WikiSpaceUser" list="wsuList"><econdition-object field="[wikiSpaceId:wikiSpaceId, userId:ec.user.userId, allowView:'Y']"/></entity-find><if condition="!wsuList"><return error="true" message="Wiki Space [${wikiSpaceId}] has restricted view and user ${ec.user.username} [${ec.user.userId}] is not allowed."/></if></if><if condition="wikiPage?.restrictView == 'Y'"><entity-find entity-name="moqui.resource.wiki.WikiPageUser" list="wpuList"><econdition-object field="[wikiPageId:wikiPageId, userId:ec.user.userId, allowView:'Y']"/></entity-find><if condition="!wpuList"><return error="true" message="Wiki Page [${wikiSpaceId}/${pagePath}] has restricted view and user ${ec.user.username} [${ec.user.userId}] is not allowed."/></if></if><set field="pageLocation" from="pageReference?.location"/><set field="pageName" from="pageReference?.fileName"/><if condition="pageName?.contains('.')"><set field="wikiType" from="pageName.substring(pageName.lastIndexOf('.')+1)"/><set field="pageName" from="pageName.substring(0, pageName.lastIndexOf('.'))"/></if><set field="pathForParentPath" from="pageReference.getActualChildPath() ?: pagePath"/><set field="parentPath" from="pathForParentPath?.contains('/') ? pathForParentPath.substring(0, pathForParentPath.lastIndexOf('/')) : ''"/><if condition="parentPath || (pageName != wikiSpaceId && pageName != spaceRootName)"><set field="pagePath" from="(parentPath ? parentPath+'/' : '') + (pageName?:'')"/></if><set field="currentVersionName" from="pageReference?.currentVersion?.versionName"/><if condition="!versionName"><if condition="historySeqId && wikiPageId"><then><entity-find-one entity-name="moqui.resource.wiki.WikiPageHistory" value-field="wikiPageHistory"/><set field="versionName" from="wikiPageHistory?.versionName"/></then><else><set field="versionName" from="currentVersionName"/></else></if></if><set field="publishedVersionName" from="wikiPage?.publishedVersionName"/><script><![CDATA[breadcrumbNameList = []
                breadcrumbMapList = []
                List<String> parentPathList = parentPath.split('/')
                int listIndex = 0
                for (String parentPathName in parentPathList) {
                    if (!parentPathName) continue
                    String curPath = ""
                    String curPathEncoded  = ""
                    for (int i = 0; i <= listIndex; i++) {
                        if (curPath) curPath += "/"
                        curPath += parentPathList[i]
                        if (curPathEncoded) curPathEncoded += "/"
                        curPathEncoded += urlEncodeIfNeeded(parentPathList[i])
                    }
                    breadcrumbNameList.add(parentPathName)
                    breadcrumbMapList.add([pageName:parentPathName, pagePath:curPath, encodedPagePath:curPathEncoded])
                    listIndex++
                }]]></script><set field="pageAttachmentsDirectoryRef" from="pageReference?.getChild('_attachments')"/><set field="pageAttachmentRefList" from="pageAttachmentsDirectoryRef?.getDirectoryEntries()"/><set field="attachmentList" from="[]"/><iterate list="pageAttachmentRefList" entry="pageAttachmentRef"><script><![CDATA[if (pageAttachmentRef.isFile())
                    attachmentList.add([filename:pageAttachmentRef.getFileName(), contentType:pageAttachmentRef.getContentType(),
                            lastModified:pageAttachmentRef.getLastModified(), resourceReference:pageAttachmentRef])]]></script></iterate></actions></service>