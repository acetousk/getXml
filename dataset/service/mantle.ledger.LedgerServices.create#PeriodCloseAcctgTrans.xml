<!--Service Location mantle.ledger.LedgerServices.create#PeriodCloseAcctgTrans--><service verb="create" noun="PeriodCloseAcctgTrans"><in-parameters><parameter name="timePeriodId" required="true"/><parameter name="postTransactions" type="Boolean" default="true"/><parameter name="glJournalId"/><parameter name="netIncomeGlAccountId"/></in-parameters><out-parameters><parameter name="acctgTransIdByClassId" type="Map"/></out-parameters><actions><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod" for-update="true"/><set field="organizationPartyId" from="timePeriod.partyId"/><service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriod:timePeriod]" out-map="[timePeriod:periodInfo.timePeriod,fromTimestamp:periodInfo.fromTimestamp,thruTimestamp:periodInfo.thruTimestamp,thruTimestampExclusive:periodInfo.thruTimestampExclusive,thruTimestampLate:periodInfo.thruTimestampLate]"/><set field="transactionDate" from="periodInfo.thruTimestampLate"/><if condition="ec.user.nowTimestamp < periodInfo.thruTimestamp"><message><![CDATA[Fiscal period ${timePeriodId} has not yet ended (ends on ${timePeriod.thruDate})]]></message></if><if condition="timePeriod.isClosed != 'Y'"><message><![CDATA[Fiscal period ${timePeriodId} is not yet closed, Period Closing transactions may be posted after a period is closed and posting period close transactions before a period is closed may result in non-zero balances, requiring another closing transaction]]></message></if><if condition="!netIncomeGlAccountId"><entity-find entity-name="mantle.ledger.account.GlAccount" list="niGlAccountList"><econdition field-name="glAccountClassEnumId" value="NET_INCOME"/><order-by field-name="accountCode"/></entity-find><set field="netIncomeGlAccountId" from="niGlAccountList ? niGlAccountList[0].glAccountId : null"/></if><if condition="!netIncomeGlAccountId"><return error="true" message="No Net Income account specified or found by class"/></if><set field="acctgTransIdByClassId" from="[:]"/><set field="tempAccountClasses" from="['REVENUE', 'COST_OF_SALES', 'EXPENSE', 'INCOME', 'NON_OP_EXPENSE']"/><iterate list="tempAccountClasses" entry="tempAccountClass"><entity-find-one entity-name="moqui.basic.Enumeration" value-field="classEnum" cache="true"><field-map field-name="enumId" from="tempAccountClass"/></entity-find-one><service-call name="org.moqui.impl.BasicServices.find#EnumerationByParent" out-map="[enumerationList:nestedEnumOut.enumerationList,enumIdSet:nestedEnumOut.enumIdSet]" in-map="[parentEnumId:tempAccountClass, includeNested:true]"/><set field="descEnumIdSet" from="nestedEnumOut.enumIdSet"/><service-call name="mantle.ledger.LedgerServices.find#RootGlAccountClassEnum" out-map="[rootGlAccountClassEnumId:rootEnumOut.rootGlAccountClassEnumId,ancestorClassEnumIdSet:rootEnumOut.ancestorClassEnumIdSet,isContra:rootEnumOut.isContra]" in-map="[glAccountClassEnumId:tempAccountClass]"/><set field="isDebit" from="'DEBIT'.equals(rootEnumOut.rootGlAccountClassEnumId)"/><if condition="rootEnumOut.isContra == 'Y'"><set field="isDebit" from="!isDebit"/></if><entity-find entity-name="mantle.ledger.report.GlAccountOrgTimePeriodDetail" list="glAccountDetailList"><econdition field-name="timePeriodId"/><econdition field-name="glAccountClassEnumId" operator="in" from="descEnumIdSet"/><select-field field-name="glAccountId,isDebit,endingBalance"/></entity-find><set field="hasEndingBalances" from="false"/><iterate list="glAccountDetailList" entry="glAccountDetail"><if condition="glAccountDetail.endingBalance"><set field="hasEndingBalances" from="true"/><break/></if></iterate><if condition="!hasEndingBalances"><message><![CDATA[No transaction for ${classEnum.description}, ending balance of all accounts is zero]]></message><continue/></if><set field="txDesc" value="${classEnum.description} Closing for Period ${timePeriodId}"/><service-call name="mantle.ledger.LedgerServices.create#AcctgTrans" out-map="[acctgTransId:createOut.acctgTransId]" in-map="[acctgTransTypeEnumId:'AttNetIncomeClosing', organizationPartyId:organizationPartyId,                             transactionDate:transactionDate, description:txDesc, glJournalId:glJournalId]"/><set field="acctgTransId" from="createOut.acctgTransId"/><script><![CDATA[acctgTransIdByClassId.put(tempAccountClass, acctgTransId)]]></script><set field="balanceTotal" from="0.0"/><iterate list="glAccountDetailList" entry="glAccountDetail"><if condition="!glAccountDetail.endingBalance"><continue/></if><set field="curEndingBalance" from="glAccountDetail.endingBalance"/><set field="isCurDebit" from="glAccountDetail.isDebit == 'Y'"/><set field="isCurContra" from="isDebit != isCurDebit"/><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[acctgTransId:acctgTransId, glAccountId:glAccountDetail.glAccountId,                                 debitCreditFlag:(isCurDebit ? 'C' : 'D'), amount:curEndingBalance]"/><set field="balanceTotal" from="isCurContra ? balanceTotal - curEndingBalance : balanceTotal + curEndingBalance"/></iterate><service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry" in-map="[acctgTransId:acctgTransId, glAccountId:netIncomeGlAccountId,                             debitCreditFlag:(isDebit ? 'D' : 'C'), amount:balanceTotal]"/><message><![CDATA[Created transaction ${acctgTransId} ${ec.l10n.format(transactionDate, null)} for ${classEnum.description}, total balance ${ec.l10n.format(balanceTotal, '#,##0.00')}]]></message><log message="Created transaction ${acctgTransId} ${ec.l10n.format(transactionDate, null)} for ${classEnum.description}, total balance ${ec.l10n.format(balanceTotal, '#,##0.00')}"/><if condition="postTransactions"><service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:acctgTransId]"/></if></iterate><service-call name="mantle.ledger.LedgerServices.recalculate#GlAccountOrgTimePeriodAmounts" in-map="[timePeriodId:timePeriodId]"/><entity-find entity-name="mantle.party.time.TimePeriodAndType" list="otherTimePeriodList"><econdition field-name="timePeriodId" operator="not-equals" from="timePeriodId"/><econdition field-name="fromDate" operator="less-equals" from="timePeriod.thruDate"/><econdition field-name="thruDate" operator="greater-equals" from="timePeriod.thruDate"/><econdition field-name="periodPurposeEnumId" value="Fiscal"/><econdition field-name="partyId" from="organizationPartyId"/></entity-find><iterate list="otherTimePeriodList" entry="otherTimePeriod"><service-call name="mantle.ledger.LedgerServices.recalculate#GlAccountOrgTimePeriodAmounts" in-map="[timePeriodId:otherTimePeriod.timePeriodId]"/></iterate></actions></service>