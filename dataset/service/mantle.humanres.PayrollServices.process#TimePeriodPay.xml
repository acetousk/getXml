<!--Service Location mantle.humanres.PayrollServices.process#TimePeriodPay--><service verb="process" noun="TimePeriodPay"><in-parameters><parameter name="timePeriodId" required="true"/><parameter name="payDate" type="Date"><description><![CDATA[Defaults to TimePeriod.thruDate]]></description></parameter><parameter name="allowClosingBeforeEnd" default="false"/></in-parameters><out-parameters><parameter name="invoiceIdByPartyRelationshipId" type="Map"/><parameter name="payDate" type="Date"/><parameter name="totalPayAmount" type="BigDecimal"/><parameter name="totalNetPayAmount" type="BigDecimal"/></out-parameters><actions><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod" for-update="true"/><if condition="timePeriod.isClosed == 'Y'"><message error="true"><![CDATA[Not processing pay for period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)}, already closed.]]></message></if><if condition="ec.user.nowTimestamp.before(timePeriod.thruDate) && !allowClosingBeforeEnd"><message error="true"><![CDATA[Not closing period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)}, period has not ended (ends on ${timePeriod.thruDate}).]]></message></if><check-errors/><service-call name="mantle.humanres.PayrollServices.get#TimePeriodEmployments" in-map="context" out-map="[employmentList:context.employmentList,timePeriod:context.timePeriod]"/><if condition="!payDate"><set field="payDate" from="timePeriod.thruDate"/></if><set field="invoiceIdByPartyRelationshipId" from="[:]"/><set field="totalPayAmount" from="0"/><set field="totalNetPayAmount" from="0"/><set field="totalAmountByPayrollAdjustmentId" from="[:]"/><set field="adjustmentsByTaxAuthorityId" from="[:]"/><set field="payeeAdjustmentListByPartyId" from="[:]"/><iterate list="employmentList" entry="employment"><service-call name="mantle.humanres.PayrollServices.process#EmploymentPay" out-map="[invoiceId:payOut.invoiceId,payDate:payOut.payDate,payAmount:payOut.payAmount,netPayAmount:payOut.netPayAmount,currencyUomId:payOut.currencyUomId,adjustmentList:payOut.adjustmentList,amountByPayrollAdjustmentId:payOut.amountByPayrollAdjustmentId]" out-map-add-to-existing="false" in-map="[partyRelationshipId:employment.partyRelationshipId, timePeriodId:timePeriodId]"/><if condition="!payOut.invoiceId"><continue/></if><script><![CDATA[invoiceIdByPartyRelationshipId.put(employment.partyRelationshipId, payOut.invoiceId)]]></script><set field="totalPayAmount" from="totalPayAmount + payOut.payAmount"/><set field="totalNetPayAmount" from="totalNetPayAmount + payOut.netPayAmount"/><set field="currencyUomId" from="payOut.currencyUomId"/><iterate list="payOut.amountByPayrollAdjustmentId" entry="adjAmount" key="payrollAdjustmentId"><script><![CDATA[addToBigDecimalInMap(payrollAdjustmentId, adjAmount, totalAmountByPayrollAdjustmentId)]]></script></iterate><iterate list="payOut.adjustmentList" entry="adjustment"><if condition="adjustment.taxAuthorityId"><then><script><![CDATA[addToListInMap(adjustment.taxAuthorityId, adjustment, adjustmentsByTaxAuthorityId)]]></script></then><else-if condition="adjustment.payeePartyId"><set field="adjustment.fromPartyId" from="employment.fromPartyId"/><script><![CDATA[addToListInMap(adjustment.payeePartyId, adjustment, payeeAdjustmentListByPartyId)]]></script></else-if></if></iterate></iterate><iterate list="adjustmentsByTaxAuthorityId" entry="adjustmentList" key="taxAuthorityId"><entity-find-one entity-name="mantle.other.tax.TaxAuthority" value-field="taxAuthority"><field-map field-name="taxAuthorityId"/></entity-find-one><service-call name="create#mantle.account.invoice.Invoice" out-map="[invoiceId:invoiceOut.invoiceId,invoiceTypeEnumId:invoiceOut.invoiceTypeEnumId,fromPartyId:invoiceOut.fromPartyId,toPartyId:invoiceOut.toPartyId,statusId:invoiceOut.statusId,billingAccountId:invoiceOut.billingAccountId,invoiceDate:invoiceOut.invoiceDate,dueDate:invoiceOut.dueDate,settlementTermId:invoiceOut.settlementTermId,paidDate:invoiceOut.paidDate,invoiceMessage:invoiceOut.invoiceMessage,referenceNumber:invoiceOut.referenceNumber,otherPartyOrderId:invoiceOut.otherPartyOrderId,description:invoiceOut.description,currencyUomId:invoiceOut.currencyUomId,overrideOrgPartyId:invoiceOut.overrideOrgPartyId,productStoreId:invoiceOut.productStoreId,partyRelationshipId:invoiceOut.partyRelationshipId,timePeriodId:invoiceOut.timePeriodId,acctgTransResultEnumId:invoiceOut.acctgTransResultEnumId,systemMessageRemoteId:invoiceOut.systemMessageRemoteId,externalId:invoiceOut.externalId,originId:invoiceOut.originId,invoiceTotal:invoiceOut.invoiceTotal,appliedPaymentsTotal:invoiceOut.appliedPaymentsTotal,unpaidTotal:invoiceOut.unpaidTotal,lastUpdatedStamp:invoiceOut.lastUpdatedStamp]" out-map-add-to-existing="false" in-map="[invoiceTypeEnumId:'InvoiceTax', fromPartyId:taxAuthority.taxAuthPartyId,                             toPartyId:timePeriod.partyId, statusId:'InvoiceReceived', invoiceDate:payDate,                             currencyUomId:currencyUomId, timePeriodId:timePeriodId]"/><set field="taxInvoiceId" from="invoiceOut.invoiceId"/><set field="amountByAdjustmentId" from="[:]"/><set field="amountByTypeDescription" from="[:]"/><iterate list="adjustmentList" entry="adjustment"><set field="adjTotal" from="-(adjustment.quantity * adjustment.amount)"/><if condition="adjustment.payrollAdjustmentId"><then><script><![CDATA[addToBigDecimalInMap(adjustment.payrollAdjustmentId, adjTotal, amountByAdjustmentId)]]></script></then><else><script><![CDATA[addToBigDecimalInMap(adjustment.itemTypeEnumId + '#' + adjustment.description, adjTotal, amountByTypeDescription)]]></script></else></if></iterate><iterate list="amountByAdjustmentId" entry="totalAmount" key="payrollAdjustmentId"><entity-find-one entity-name="mantle.humanres.employment.PayrollAdjustment" value-field="payrollAdjustment"/><service-call name="create#mantle.account.invoice.InvoiceItem" in-map="[invoiceId:taxInvoiceId, itemTypeEnumId:payrollAdjustment.itemTypeEnumId,                                 amount:totalAmount, quantity:1, description:payrollAdjustment.description,                                 taxAuthorityId:taxAuthorityId, payrollAdjustmentId:payrollAdjustmentId]"/></iterate><iterate list="amountByTypeDescription" entry="totalAmount" key="typeDescription"><service-call name="create#mantle.account.invoice.InvoiceItem" in-map="[invoiceId:taxInvoiceId, itemTypeEnumId:typeDescription.substring(0, typeDescription.indexOf('#')),                                 amount:totalAmount, quantity:1, description:typeDescription.substring(typeDescription.indexOf('#') + 1),                                 taxAuthorityId:taxAuthorityId]"/></iterate></iterate><iterate list="payeeAdjustmentListByPartyId" entry="payeeAdjustmentList" key="payeePartyId"><set field="isGarnish" from="false"/><set field="payeeDueDays" from="14L"/><iterate list="payeeAdjustmentList" entry="payeeAdjustment"><if condition="payeeAdjustment.payeeDueDays"><if condition="payeeAdjustment.payeeDueDays < payeeDueDays"><set field="payeeDueDays" from="payeeAdjustment.payeeDueDays"/></if></if><if condition="payeeAdjustment.payrollPhaseEnumId == 'PrphGarnish'"><set field="isGarnish" from="true"/></if></iterate><script><![CDATA[Calendar dueDateCal = ec.user.getCalendarSafe()
                    dueDateCal.setTime(payDate)
                    dueDateCal.add(Calendar.DAY_OF_MONTH, payeeDueDays as int)
                    dueDate = new java.sql.Timestamp(dueDateCal.getTimeInMillis())]]></script><service-call name="create#mantle.account.invoice.Invoice" out-map="[invoiceId:invoiceOut.invoiceId,invoiceTypeEnumId:invoiceOut.invoiceTypeEnumId,fromPartyId:invoiceOut.fromPartyId,toPartyId:invoiceOut.toPartyId,statusId:invoiceOut.statusId,billingAccountId:invoiceOut.billingAccountId,invoiceDate:invoiceOut.invoiceDate,dueDate:invoiceOut.dueDate,settlementTermId:invoiceOut.settlementTermId,paidDate:invoiceOut.paidDate,invoiceMessage:invoiceOut.invoiceMessage,referenceNumber:invoiceOut.referenceNumber,otherPartyOrderId:invoiceOut.otherPartyOrderId,description:invoiceOut.description,currencyUomId:invoiceOut.currencyUomId,overrideOrgPartyId:invoiceOut.overrideOrgPartyId,productStoreId:invoiceOut.productStoreId,partyRelationshipId:invoiceOut.partyRelationshipId,timePeriodId:invoiceOut.timePeriodId,acctgTransResultEnumId:invoiceOut.acctgTransResultEnumId,systemMessageRemoteId:invoiceOut.systemMessageRemoteId,externalId:invoiceOut.externalId,originId:invoiceOut.originId,invoiceTotal:invoiceOut.invoiceTotal,appliedPaymentsTotal:invoiceOut.appliedPaymentsTotal,unpaidTotal:invoiceOut.unpaidTotal,lastUpdatedStamp:invoiceOut.lastUpdatedStamp]" out-map-add-to-existing="false" in-map="[invoiceTypeEnumId:(isGarnish ? 'InvoiceGarnishment' : 'InvoicePayrollOther'), fromPartyId:payeePartyId,                             toPartyId:timePeriod.partyId, statusId:'InvoiceReceived', invoiceDate:payDate, dueDate:dueDate,                             currencyUomId:currencyUomId, timePeriodId:timePeriodId]"/><set field="payeeInvoiceId" from="invoiceOut.invoiceId"/><service-call name="mantle.party.PartyServices.get#PartySettingValue" in-map="[partySettingTypeId:'PayrollEmployeePartyIdType', partyId:timePeriod.partyId]" out-map="[settingValue:idSetting.settingValue]"/><set field="partyIdTypeEnumId" from="idSetting.settingValue ?: 'PtidSsn'"/><iterate list="payeeAdjustmentList" entry="payeeAdjustment"><entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail"><field-map field-name="partyId" from="payeeAdjustment.fromPartyId"/></entity-find-one><entity-find-one entity-name="mantle.party.PartyIdentification" value-field="partySsn"><field-map field-name="partyId" from="payeeAdjustment.fromPartyId"/><field-map field-name="partyIdTypeEnumId"/></entity-find-one><set field="description" from="ec.resource.expand('PayrollPayeeInvoiceItemDescription', null)"/><service-call name="create#mantle.account.invoice.InvoiceItem" in-map="[invoiceId:payeeInvoiceId, itemTypeEnumId:payeeAdjustment.itemTypeEnumId,                                 amount:-payeeAdjustment.amount, quantity:payeeAdjustment.quantity, description:description,                                 payrollAdjustmentId:payeeAdjustment.payrollAdjustmentId]"/></iterate></iterate><set field="timePeriod.isClosed" value="Y"/><entity-update value-field="timePeriod"/><message><![CDATA[Processed pay for period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)}: ${employmentList.size()} employees, gross pay total: ${totalPayAmount}, net pay total: ${totalNetPayAmount}]]></message></actions></service>