<!--Service Location mantle.ledger.PaymentAutoPostServices.revert#PaymentApplicationPost--><service verb="revert" noun="PaymentApplicationPost"><in-parameters><parameter name="paymentApplicationId" required="true"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.account.payment.PaymentApplication" value-field="paymentApplication" for-update="true"/><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="acctgTransList"><econdition field-name="paymentApplicationId"/><econdition field-name="reversedByAcctgTransId" from="null"/><econdition field-name="reverseOfAcctgTransId" from="null"/><econdition field-name="acctgTransTypeEnumId" operator="in" value="AttOutgoingPaymentAp,AttIncomingPaymentAp,AttPaymentInOutAppl,AttInvoiceInOutAppl,AttPaymentApplied"/></entity-find><if condition="acctgTransList"><then><if condition="acctgTransList.size() == 1"><then><service-call name="mantle.ledger.LedgerServices.post#ReverseAcctgTrans" out-map="[acctgTransId:revOut.acctgTransId]" in-map="[acctgTransId:acctgTransList[0].acctgTransId, deleteIfNotPosted:true]"/><if condition="revOut.acctgTransId"><message><![CDATA[Created reverse transaction ${revOut.acctgTransId} from tx ${acctgTransList[0].acctgTransId} for payment application ${paymentApplicationId}]]></message></if></then><else><return error="true" message="Found more than one accounting transaction for Payment Application ${paymentApplicationId}, may already be reversed, not posting reverse transaction."/></else></if></then><else><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="paymentTransList"><econdition field-name="paymentId" from="paymentApplication.paymentId"/><econdition field-name="reversedByAcctgTransId" from="null"/><econdition field-name="reverseOfAcctgTransId" from="null"/><econdition field-name="acctgTransTypeEnumId" operator="in" value="AttOutgoingPayment,AttIncomingPayment"/></entity-find><set field="arApTrans" from="null"/><iterate list="paymentTransList" entry="paymentTrans"><entity-find entity-name="mantle.ledger.transaction.AcctgTransEntryGlAccount" list="arApEntryList"><econdition field-name="acctgTransId" from="paymentTrans.acctgTransId"/><econdition field-name="glAccountClassEnumId" operator="in" value="ACCOUNTS_PAYABLE,ACCOUNTS_RECEIVABLE"/></entity-find><if condition="arApEntryList"><set field="arApTrans" from="paymentTrans"/><break/></if></iterate><if condition="arApTrans != null"><then><service-call name="mantle.ledger.LedgerServices.unpost#AcctgTrans" in-map="[acctgTransId:arApTrans.acctgTransId]"/><service-call name="mantle.ledger.LedgerServices.delete#AcctgTrans" in-map="[acctgTransId:arApTrans.acctgTransId]"/><service-call name="mantle.ledger.PaymentAutoPostServices.post#Payment" in-map="[paymentId:paymentApplication.paymentId]"/></then><else><return message="No accounting transaction found for Payment Application ${paymentApplicationId}, not posting reverse transaction."/></else></if></else></if></actions></service>