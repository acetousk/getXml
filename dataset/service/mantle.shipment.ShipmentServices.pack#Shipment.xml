<!--Service Location mantle.shipment.ShipmentServices.pack#Shipment--><service verb="pack" noun="Shipment"><in-parameters><parameter name="shipmentId" required="true" entity-name="mantle.shipment.Shipment" field-name="shipmentId"/><parameter name="packedDate" type="Timestamp" entity-name="mantle.shipment.Shipment" field-name="packedDate"/></in-parameters><out-parameters><parameter name="oldStatusId"/><parameter name="statusChanged" type="Boolean"/></out-parameters><actions><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/><if condition="shipment == null"><return error="true" message="Shipment not found with ID ${shipmentId}"/></if><set field="shipmentTypeEnum" from="shipment.'ShipmentType#moqui.basic.Enumeration'"/><set field="isIncoming" from="shipmentTypeEnum?.enumId == 'ShpTpIncoming' || shipmentTypeEnum?.parentEnumId == 'ShpTpIncoming'"/><if condition="!isIncoming"><if condition="shipment.assemblyWorkEffortId"><service-call name="mantle.work.ManufacturingServices.get#ConsumedAssetRemaining" in-map="[workEffortId:shipment.assemblyWorkEffortId]" out-map="[consumeWepList:assemblyAssetInfo.consumeWepList,produceWepList:assemblyAssetInfo.produceWepList,componentIssuedQtyByProduct:assemblyAssetInfo.componentIssuedQtyByProduct,componentUsedQtyByProduct:assemblyAssetInfo.componentUsedQtyByProduct,componentIssuedAvailable:assemblyAssetInfo.componentIssuedAvailable,assemblyCanProduceQty:assemblyAssetInfo.assemblyCanProduceQty,assemblyReceivedByProduct:assemblyAssetInfo.assemblyReceivedByProduct]"/><if condition="assemblyAssetInfo.componentIssuedAvailable"><iterate list="assemblyAssetInfo.componentIssuedAvailable" key="componentProductId" entry="componentQty"><service-call name="mantle.work.ManufacturingServices.unissue#Component" in-map="[workEffortId:shipment.assemblyWorkEffortId, componentProductId:componentProductId,                                         componentQuantity:componentQty, unissueDate:packedDate]"/></iterate></if></if><service-call name="mantle.shipment.ShipmentServices.reduce#QuantitiesToHandled" in-map="[shipmentId:shipmentId]"/></if><set field="packedDate" from="packedDate ?: ec.user.nowTimestamp"/><service-call name="update#mantle.shipment.Shipment" out-map="[shipmentId:context.shipmentId,shipmentTypeEnumId:context.shipmentTypeEnumId,statusId:context.statusId,fromPartyId:context.fromPartyId,toPartyId:context.toPartyId,binLocationNumber:context.binLocationNumber,productStoreId:context.productStoreId,priority:context.priority,entryDate:context.entryDate,shipAfterDate:context.shipAfterDate,shipBeforeDate:context.shipBeforeDate,estimatedReadyDate:context.estimatedReadyDate,estimatedShipDate:context.estimatedShipDate,estimatedArrivalDate:context.estimatedArrivalDate,latestCancelDate:context.latestCancelDate,packedDate:context.packedDate,pickContainerId:context.pickContainerId,shipWorkEffortId:context.shipWorkEffortId,receiveWorkEffortId:context.receiveWorkEffortId,assemblyWorkEffortId:context.assemblyWorkEffortId,estimatedShipCost:context.estimatedShipCost,costUomId:context.costUomId,addtlShippingCharge:context.addtlShippingCharge,addtlShippingChargeDesc:context.addtlShippingChargeDesc,signatureRequiredEnumId:context.signatureRequiredEnumId,handlingInstructions:context.handlingInstructions,otherPartyOrderId:context.otherPartyOrderId,systemMessageRemoteId:context.systemMessageRemoteId,externalId:context.externalId,originId:context.originId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[shipmentId:shipmentId, statusId:'ShipPacked', packedDate:packedDate]"/><entity-find entity-name="mantle.shipment.ShipmentItemSource" list="sisOrderList" distinct="true"><econdition field-name="shipmentId"/><select-field field-name="orderId,orderItemSeqId"/></entity-find><iterate list="sisOrderList" entry="shipmentItemSource"><if condition="shipmentItemSource.orderId && shipmentItemSource.orderItemSeqId"><entity-find-one entity-name="mantle.order.OrderItem" value-field="orderItem"><field-map field-name="orderId" from="shipmentItemSource.orderId"/><field-map field-name="orderItemSeqId" from="shipmentItemSource.orderItemSeqId"/></entity-find-one><service-call name="mantle.order.OrderServices.checkComplete#OrderPart" in-map="[orderId:orderItem.orderId, orderPartSeqId:orderItem.orderPartSeqId]"/></if></iterate></actions></service>