<!--Service Location mantle.other.TaxServices.calculate#OrderSalesTax--><service verb="calculate" noun="OrderSalesTax"><in-parameters><parameter name="orderId" required="true"/><parameter name="orderPartSeqId"/></in-parameters><out-parameters/><actions><entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/><entity-find-related-one value-field="orderHeader" relationship-name="mantle.product.store.ProductStore" to-value-field="productStore" cache="true"/><entity-find-related-one value-field="productStore" relationship-name="mantle.other.tax.TaxGatewayConfig" to-value-field="taxGatewayConfig" cache="true"/><if condition="taxGatewayConfig == null"><log message="Not calculating tax for Order ${orderId}, no TaxGatewayConfig found (store: ${productStore?.productStoreId})"/><return/></if><entity-delete-by-condition entity-name="mantle.order.OrderItem"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId" ignore-if-empty="true"/><econdition field-name="itemTypeEnumId" operator="in" value="ItemSalesTax,ItemVatTax"/></entity-delete-by-condition><set field="saveResults" from="false"/><set field="taxGatewayConfigId" from="taxGatewayConfig.taxGatewayConfigId"/><entity-find entity-name="mantle.facility.FacilityContactMech" list="fromFcmList" cache="true"><date-filter/><econdition field-name="facilityId" from="productStore.inventoryFacilityId"/><econdition field-name="contactMechPurposeId" value="PostalShippingOrigin"/></entity-find><set field="fromFcm" from="fromFcmList?.first"/><entity-find entity-name="mantle.order.OrderPart" list="orderPartList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId" ignore-if-empty="true"/></entity-find><iterate list="orderPartList" entry="orderPart"><set field="referenceId" value="${orderId}:${orderPart.orderPartSeqId}"/><set field="customerPartyId" from="orderPart.customerPartyId"/><set field="organizationPartyId" from="productStore.organizationPartyId"/><set field="originAddressContactMechId" from="fromFcm?.contactMechId"/><set field="destinationAddressContactMechId" from="orderPart.postalContactMechId"/><entity-find entity-name="mantle.order.OrderItem" list="orderItemList"><econdition field-name="orderId"/><econdition field-name="orderPartSeqId" from="orderPart.orderPartSeqId"/></entity-find><set field="items" from="[]"/><iterate list="orderItemList" entry="orderItem"><set field="combinedQuantity" from="(orderItem.quantity != null ? orderItem.quantity : 1.0) * (orderItem.selectedAmount ?: 1.0)"/><if condition="combinedQuantity == 0.0"><continue/></if><set field="product" from="orderItem.'mantle.product.Product'"/><if condition="!product?.taxable || product?.taxable == 'Y'"><set field="itemTotal" from="(combinedQuantity * (orderItem.unitAmount ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><set field="discountTotal" from="0.0"/><iterate list="orderItemList" entry="discountItem"><if condition="discountItem.itemTypeEnumId == 'ItemDiscount' &&                                     discountItem.parentItemSeqId == orderItem.orderItemSeqId && discountItem.unitAmount"><set field="discountTotal" from="discountTotal + ((discountItem.quantity != null ? discountItem.quantity : 1.0) * discountItem.unitAmount)"/></if></iterate><set field="unitAmountLessDiscounts" from="((itemTotal + discountTotal) as BigDecimal).divide(combinedQuantity as BigDecimal, 3, BigDecimal.ROUND_HALF_UP)"/><script><![CDATA[items.add([itemId:orderItem.orderItemSeqId, itemTypeEnumId:orderItem.itemTypeEnumId,
                                quantity:orderItem.quantity, unitAmount:orderItem.unitAmount, unitAmountLessDiscounts:unitAmountLessDiscounts,
                                itemTotal:itemTotal, discountTotal:discountTotal,
                                productId:orderItem.productId, taxCode:product?.taxCode])]]></script></if></iterate><service-call name="${taxGatewayConfig.calculateServiceName}" in-map="context" out-map="context"/><iterate list="taxResults" entry="taxResult"><if condition="!taxResult.taxAmount"><continue/></if><set field="orderItem" from="orderItemList.find({ it.orderItemSeqId == taxResult.itemId })"/><if condition="orderItem == null"><log level="warn" message="In calculate#OrderSalesTax got back entry with invalid orderItemSeqId ${taxResult.itemId} for order ${orderId}, skipping"/><continue/></if><set field="taxAmount" from="(taxResult.taxAmount as BigDecimal).setScale(3, BigDecimal.ROUND_HALF_UP)"/><entity-find-one entity-name="mantle.other.tax.TaxAuthority" value-field="taxAuthority" cache="true"><field-map field-name="taxAuthorityId" from="taxResult.taxAuthorityId"/></entity-find-one><set field="itemDescription" value="${taxAuthority?.description ? taxAuthority.description + ' ' : ''}${taxResult.taxName?:''}"/><service-call name="create#mantle.order.OrderItem" out-map="[orderId:context.orderId,orderItemSeqId:context.orderItemSeqId,orderPartSeqId:context.orderPartSeqId,parentItemSeqId:context.parentItemSeqId,itemTypeEnumId:context.itemTypeEnumId,productId:context.productId,productFeatureId:context.productFeatureId,otherPartyProductId:context.otherPartyProductId,productParameterSetId:context.productParameterSetId,itemDescription:context.itemDescription,comments:context.comments,quantity:context.quantity,quantityUomId:context.quantityUomId,quantityCancelled:context.quantityCancelled,selectedAmount:context.selectedAmount,priority:context.priority,requiredByDate:context.requiredByDate,unitAmount:context.unitAmount,unitListPrice:context.unitListPrice,isModifiedPrice:context.isModifiedPrice,standardCost:context.standardCost,externalItemSeqId:context.externalItemSeqId,fromAssetId:context.fromAssetId,productPriceId:context.productPriceId,productCategoryId:context.productCategoryId,isPromo:context.isPromo,promoQuantity:context.promoQuantity,promoTimesUsed:context.promoTimesUsed,storePromotionId:context.storePromotionId,promoCodeId:context.promoCodeId,promoCodeText:context.promoCodeText,subscriptionId:context.subscriptionId,finAccountId:context.finAccountId,finAccountTransId:context.finAccountTransId,overrideGlAccountId:context.overrideGlAccountId,salesOpportunityId:context.salesOpportunityId,sourceReferenceId:context.sourceReferenceId,sourcePercentage:context.sourcePercentage,amountAlreadyIncluded:context.amountAlreadyIncluded,exemptAmount:context.exemptAmount,customerReferenceId:context.customerReferenceId,taxAuthorityId:context.taxAuthorityId,lastUpdatedStamp:context.lastUpdatedStamp]" in-map="[orderId:orderId, orderPartSeqId:orderPart.orderPartSeqId, parentItemSeqId:taxResult.itemId,                                 itemTypeEnumId:'ItemSalesTax', quantity:(taxResult.taxQuantity ?: orderItem.quantity),                                 unitAmount:taxAmount, sourcePercentage:(taxResult.taxRate*100.0),                                 taxAuthorityId:taxResult.taxAuthorityId, itemDescription:itemDescription]"/></iterate></iterate></actions></service>