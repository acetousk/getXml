<!--Service Location mantle.account.FinancialAccountServices.checkCreate#PaymentTrans--><service verb="checkCreate" noun="PaymentTrans"><in-parameters><parameter name="paymentId" required="true"/><parameter name="reasonEnumId"/></in-parameters><out-parameters><parameter name="finAccountTransId"/></out-parameters><actions><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment" for-update="true"/><set field="finAccountId" from="payment.finAccountId"/><if condition="!finAccountId"><return/></if><set field="amount" from="payment.amount"/><if condition="!amount"><return/></if><if condition="payment.finAccountTransId"><set field="finAccountTransId" from="payment.finAccountTransId"/><return/></if><if condition="payment.statusId in ['PmntProposed', 'PmntPromised', 'PmntCancelled', 'PmntVoid', 'PmntDeclined']"><return message="Not creating Financial Account transaction for Payment ${paymentId} in status ${payment.status?.description}, must be Authorized or Delivered"/></if><entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"/><set field="organizationPartyId" from="financialAccount.organizationPartyId"/><set field="ownerPartyId" from="financialAccount.ownerPartyId"/><set field="fromPartyId" from="payment.fromPartyId"/><set field="toPartyId" from="payment.toPartyId"/><if condition="organizationPartyId != fromPartyId && organizationPartyId != toPartyId"><message error="true"><![CDATA[Financial Account organization ${organizationPartyId} is not a party to payment ${paymentId}]]></message></if><if condition="ownerPartyId != fromPartyId && ownerPartyId != toPartyId"><message error="true"><![CDATA[Financial Account owner ${ownerPartyId} is not a party to payment ${paymentId}]]></message></if><check-errors/><if condition="payment.paymentTypeEnumId == 'PtFinancialAccount'"><then><set field="isDeposit" from="organizationPartyId == toPartyId"/></then><else-if condition="payment.paymentInstrumentEnumId == 'PiFinancialAccount'"><set field="isDeposit" from="organizationPartyId == fromPartyId"/></else-if><else><return message="Payment has a Financial Account ID but is not a Financial Account type payment OR some other type of payment with a Financial Account payment instrument, so not creating financial account transaction"/></else></if><if condition="amount < 0.0"><set field="isDeposit" from="!isDeposit"/><set field="amount" from="-amount"/></if><if condition="isDeposit"><then><service-call name="mantle.account.FinancialAccountServices.deposit#FinancialAccount" out-map="[amount:txOut.amount,preBalance:txOut.preBalance,postBalance:txOut.postBalance,finAccountTransId:txOut.finAccountTransId]" in-map="[finAccountId:finAccountId, amount:amount, transactionDate:payment.effectiveDate,                             paymentId:paymentId, reasonEnumId:(reasonEnumId ?: 'FatrReplenish')]"/></then><else><service-call name="mantle.account.FinancialAccountServices.withdraw#FinancialAccount" out-map="[amount:txOut.amount,preBalance:txOut.preBalance,postBalance:txOut.postBalance,finAccountTransId:txOut.finAccountTransId,responseCode:txOut.responseCode,responseMessage:txOut.responseMessage]" in-map="[finAccountId:finAccountId, amount:amount, transactionDate:payment.effectiveDate,                             paymentId:paymentId, reasonEnumId:(reasonEnumId ?: 'FatrDisbursement')]"/></else></if><set field="finAccountTransId" from="txOut.finAccountTransId"/><set field="payment.finAccountTransId" from="finAccountTransId"/><entity-update value-field="payment"/><if condition="payment.statusId == 'PmntAuthorized'"><service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:paymentId, statusId:'PmntDelivered']"/></if></actions></service>