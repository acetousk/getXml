<!--Service Location coarchy.CoarchyServices.send#ContactListEmail--><service verb="send" noun="ContactListEmail"><in-parameters><parameter name="contactListId" required="true" entity-name="mantle.marketing.contact.ContactListEmail" field-name="contactListId"/><parameter name="emailTemplateId" required="true" entity-name="mantle.marketing.contact.ContactListEmail" field-name="emailTemplateId"/><parameter name="partyId" required="true"/><parameter name="bodyParameters" required="true" type="Map"/><parameter name="preferredContactMechId"/><parameter name="toAddresses"/><parameter name="emailTypeEnumId" required="true" default-value="CONT_EMAIL_TEMPLATE" entity-name="mantle.marketing.contact.ContactListEmail" field-name="emailTypeEnumId"/></in-parameters><out-parameters><parameter name="sentEmail"/><parameter name="emailTemplateId" entity-name="mantle.marketing.contact.ContactListEmail" field-name="emailTemplateId"/></out-parameters><actions><set field="sentEmail" from="false"/><entity-find-one entity-name="mantle.marketing.contact.ContactList" value-field="contactList" auto-field-map="[contactListId:contactListId]"/><if condition="!contactList"><log level="info" message="No ContactList found with contactListId of ${contactListId}"/><message error="true" type="danger" public="true"><![CDATA[Cannot send invitation email, please contact support for help]]></message></if><entity-find entity-name="mantle.marketing.contact.ContactListEmail" list="contactListListEmailList" limit="1"><econdition field-name="emailTemplateId"/><econdition field-name="emailTypeEnumId"/><date-filter/><order-by field-name="-fromDate"/></entity-find><set field="contactListListEmail" from="contactListListEmailList?.getFirst()"/><if condition="!contactListListEmail"><log level="info" message="No ContactListEmail found for emailTemplateId ${emailTemplateId} and emailTypeEnumId ${emailTypeEnumId}"/><message error="true" type="danger" public="true"><![CDATA[Cannot send invitation email, please contact support for help]]></message></if><entity-find entity-name="mantle.marketing.contact.ContactListParty" list="inviteContactListPartyList" limit="1" for-update="true"><econdition field-name="contactListId"/><econdition field-name="partyId"/><date-filter/><order-by field-name="-fromDate"/></entity-find><set field="inviteContactListParty" from="inviteContactListPartyList?.getFirst()"/><if condition="!preferredContactMechId"><entity-find entity-name="mantle.party.contact.PartyContactMech" list="partyContactMechList" limit="1"><econdition field-name="partyId"/><econdition field-name="contactMechPurposeId" value="EmailPrimary"/><date-filter/><order-by field-name="-fromDate"/></entity-find><set field="preferredContactMechId" from="partyContactMechList?.getFirst()?.contactMechId"/></if><if condition="!inviteContactListParty"><then><service-call name="create#mantle.marketing.contact.ContactListParty" in-map="[                             contactListId:contactListId,partyId:partyId,statusId:'CLPT_IN_USE',                             preferredContactMechId:preferredContactMechId,optInVerifyCode:getRandomString(63)]" out-map="[contactListId:inviteContactListPartyOut.contactListId,partyId:inviteContactListPartyOut.partyId,fromDate:inviteContactListPartyOut.fromDate,thruDate:inviteContactListPartyOut.thruDate,statusId:inviteContactListPartyOut.statusId,preferredContactMechId:inviteContactListPartyOut.preferredContactMechId,optInVerifyCode:inviteContactListPartyOut.optInVerifyCode,lastUpdatedStamp:inviteContactListPartyOut.lastUpdatedStamp]"/><entity-find-one entity-name="mantle.marketing.contact.ContactListParty" value-field="inviteContactListParty" auto-field-map="[contactListId:contactListId,partyId:partyId,fromDate:inviteContactListPartyOut.fromDate]"/></then><else-if condition="!inviteContactListParty.optInVerifyCode"><set field="inviteContactListParty.optInVerifyCode" from="getRandomString(63)"/><entity-update value-field="inviteContactListParty"/></else-if></if><if condition="inviteContactListParty.statusId != 'CLPT_IN_USE'"><then><log level="info" message="Not sending invitation email because not in 'In Use' status"/><message type="warning" public="true"><![CDATA[Not sending email. User is unsubscribed from ${contactList.contactListName} emails]]></message></then><else><service-call name="org.moqui.impl.EmailServices.send#EmailTemplate" in-map="[                     emailTemplateId:emailTemplateId,toAddresses:toAddresses,bodyParameters:bodyParameters+[                     currentYear:ec.user.nowTimestamp.format('yyyy'),contactListName:contactList.contactListName,                     unsubscribeLink:bodyParameters.baseLinkUrl+contactList.optOutScreen+'?optInVerifyCode='+inviteContactListParty.optInVerifyCode]]" out-map="[messageId:context.messageId,emailMessageId:context.emailMessageId]"/><if condition="emailMessageId"><set field="sentEmail" from="true"/></if><service-call name="mantle.party.CommunicationServices.create#Message" in-map="[                     communicationEventTypeId:'Email',contactMechTypeEnumId:'CmtEmailAddress',statusId:'CeSent',                     toContactMechId:preferredContactMechId,toPartyId:partyId,fromPartyId:'coarchy',emailMessageId:emailMessageId,contactListId:contactListId]" out-map="[communicationEventId:communicationEventOut.communicationEventId,fromPartyId:communicationEventOut.fromPartyId,communicationEventTypeId:communicationEventOut.communicationEventTypeId,statusId:communicationEventOut.statusId,entryDate:communicationEventOut.entryDate]"/><service-call name="create#mantle.marketing.contact.ContactListCommStatus" in-map="[                     contactListId:contactListId,communicationEventId:communicationEventOut.communicationEventId,                     contactMechId:preferredContactMechId,partyId:partyId]"/></else></if></actions></service>