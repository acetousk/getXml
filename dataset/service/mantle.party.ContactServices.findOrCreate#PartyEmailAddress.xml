<!--Service Location mantle.party.ContactServices.findOrCreate#PartyEmailAddress--><service verb="findOrCreate" noun="PartyEmailAddress"><in-parameters><parameter name="partyId" required="true"/><parameter name="emailAddress" required="true"/><parameter name="contactMechPurposeId"/></in-parameters><out-parameters><parameter name="contactMechId"/></out-parameters><actions><entity-find entity-name="mantle.party.contact.PartyContactMechInfo" list="existingList"><date-filter/><econdition field-name="partyId"/><econdition field-name="infoString" from="emailAddress"/></entity-find><if condition="existingList"><then><set field="contactMechId" from="existingList.get(0).contactMechId"/><if condition="contactMechPurposeId && !existingList*.contactMechPurposeId.contains(contactMechPurposeId)"><service-call name="create#mantle.party.contact.PartyContactMech" in-map="[partyId:partyId, contactMechId:contactMechId, fromDate:ec.user.nowTimestamp,                                 contactMechPurposeId:contactMechPurposeId]"/></if></then><else><if condition="!contactMechPurposeId"><set field="contactMechPurposeId" value="PhonePrimary"/></if><service-call name="mantle.party.ContactServices.create#EmailAddress" out-map="[contactMechId:paOut.contactMechId]" in-map="context"/><set field="contactMechId" from="paOut.contactMechId"/></else></if></actions></service>