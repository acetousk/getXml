<!--Service Location mantle.ledger.LedgerServices.check#NextFiscalTimePeriods--><service verb="check" noun="NextFiscalTimePeriods"><in-parameters><parameter name="organizationPartyId" required="true"/><parameter name="basisDate" type="java.sql.Date" default="new java.sql.Date(ec.user.nowTimestamp.time)"/></in-parameters><out-parameters/><actions><script><![CDATA[basisCal = ec.user.getCalendarSafe(); basisCal.setTime(basisDate)]]></script><entity-find-one entity-name="mantle.party.Organization" value-field="organization"><field-map field-name="partyId" from="organizationPartyId"/></entity-find-one><entity-find entity-name="mantle.party.time.TimePeriod" list="currentYearList"><econdition field-name="fromDate" operator="less-equals" from="basisDate"/><econdition field-name="thruDate" operator="greater-equals" from="basisDate"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="FiscalYear"/></entity-find><if condition="!currentYearList"><then><entity-find entity-name="mantle.party.time.TimePeriod" list="recentPeriodList"><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="FiscalYear"/><order-by field-name="-fromDate"/></entity-find><if condition="recentPeriodList"><then><set field="recentPeriod" from="recentPeriodList[0]"/><while condition="recentPeriod.thruDate < basisDate"><service-call name="mantle.party.TimeServices.create#TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId]" in-map="[previousPeriodId:recentPeriod.timePeriodId]"/><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="recentPeriod"><field-map field-name="timePeriodId" from="createTpOut.timePeriodId"/></entity-find-one></while><set field="yearPeriodId" from="recentPeriod.timePeriodId"/></then><else><script><![CDATA[yearFromCal = basisCal.clone(); yearFromCal.set(Calendar.DAY_OF_YEAR, 1)]]></script><service-call name="mantle.party.TimeServices.create#TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId]" in-map="[partyId:organizationPartyId, timePeriodTypeId:'FiscalYear',                                 fromDate:new java.sql.Date(yearFromCal.getTimeInMillis())]"/><set field="yearPeriodId" from="createTpOut.timePeriodId"/></else></if></then><else><set field="yearPeriodId" from="currentYearList[0].timePeriodId"/></else></if><entity-find entity-name="mantle.party.time.TimePeriod" list="currentQuarterList"><econdition field-name="fromDate" operator="less-equals" from="basisDate"/><econdition field-name="thruDate" operator="greater-equals" from="basisDate"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="FiscalQuarter"/></entity-find><if condition="!currentQuarterList"><then><entity-find entity-name="mantle.party.time.TimePeriod" list="recentPeriodList"><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="FiscalQuarter"/><order-by field-name="-fromDate"/></entity-find><if condition="recentPeriodList"><then><set field="recentPeriod" from="recentPeriodList[0]"/><while condition="recentPeriod.thruDate < basisDate"><service-call name="mantle.party.TimeServices.create#TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId]" in-map="[previousPeriodId:recentPeriod.timePeriodId]"/><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="recentPeriod"><field-map field-name="timePeriodId" from="createTpOut.timePeriodId"/></entity-find-one></while><set field="quarterPeriodId" from="recentPeriod.timePeriodId"/></then><else><script><![CDATA[quarterNumber = (int) (basisCal.get(Calendar.MONTH)/3)]]></script><script><![CDATA[quarterFromCal = basisCal.clone(); quarterFromCal.set(Calendar.MONTH, (quarterNumber * 3)); quarterFromCal.set(Calendar.DAY_OF_MONTH, 1)]]></script><service-call name="mantle.party.TimeServices.create#TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId]" in-map="[partyId:organizationPartyId, timePeriodTypeId:'FiscalQuarter',                                 parentPeriodId:yearPeriodId, periodNum:(quarterNumber + 1),                                 fromDate:new java.sql.Date(quarterFromCal.getTimeInMillis())]"/><set field="quarterPeriodId" from="createTpOut.timePeriodId"/></else></if></then><else><set field="quarterPeriodId" from="currentQuarterList[0].timePeriodId"/></else></if><entity-find entity-name="mantle.party.time.TimePeriod" list="currentMonthList"><econdition field-name="fromDate" operator="less-equals" from="basisDate"/><econdition field-name="thruDate" operator="greater-equals" from="basisDate"/><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="FiscalMonth"/></entity-find><if condition="!currentMonthList"><then><entity-find entity-name="mantle.party.time.TimePeriod" list="recentPeriodList"><econdition field-name="partyId" from="organizationPartyId"/><econdition field-name="timePeriodTypeId" value="FiscalMonth"/><order-by field-name="-fromDate"/></entity-find><if condition="recentPeriodList"><then><set field="recentPeriod" from="recentPeriodList[0]"/><while condition="recentPeriod.thruDate < basisDate"><service-call name="mantle.party.TimeServices.create#TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId]" in-map="[previousPeriodId:recentPeriod.timePeriodId]"/><entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="recentPeriod"><field-map field-name="timePeriodId" from="createTpOut.timePeriodId"/></entity-find-one></while><set field="monthPeriodId" from="recentPeriod.timePeriodId"/></then><else><script><![CDATA[monthNumber = basisCal.get(Calendar.MONTH)]]></script><script><![CDATA[monthFromCal = basisCal.clone(); monthFromCal.set(Calendar.DAY_OF_MONTH, 1)]]></script><service-call name="mantle.party.TimeServices.create#TimePeriod" out-map="[timePeriodId:createTpOut.timePeriodId]" in-map="[partyId:organizationPartyId, timePeriodTypeId:'FiscalMonth',                                 parentPeriodId:quarterPeriodId, periodNum:(monthNumber + 1),                                 fromDate:new java.sql.Date(monthFromCal.getTimeInMillis())]"/><set field="monthPeriodId" from="createTpOut.timePeriodId"/></else></if></then><else><set field="monthPeriodId" from="currentMonthList[0].timePeriodId"/></else></if><service-call name="mantle.party.TimeServices.getOrCreate#NextTimePeriod" out-map="[nextTimePeriodId:nextYearOut.nextTimePeriodId,nextTimePeriod:nextYearOut.nextTimePeriod]" in-map="[timePeriodId:yearPeriodId]"/><set field="nextYearPeriodId" from="nextYearOut.nextTimePeriodId"/><service-call name="mantle.party.TimeServices.getOrCreate#NextTimePeriod" out-map="[nextTimePeriodId:nextQuarterOut.nextTimePeriodId,nextTimePeriod:nextQuarterOut.nextTimePeriod]" in-map="[timePeriodId:quarterPeriodId]"/><set field="nextQuarterPeriodId" from="nextQuarterOut.nextTimePeriodId"/><service-call name="mantle.party.TimeServices.getOrCreate#NextTimePeriod" out-map="[nextTimePeriodId:nextMonthOut.nextTimePeriodId,nextTimePeriod:nextMonthOut.nextTimePeriod]" in-map="[timePeriodId:monthPeriodId]"/><set field="nextMonthPeriodId" from="nextMonthOut.nextTimePeriodId"/></actions></service>