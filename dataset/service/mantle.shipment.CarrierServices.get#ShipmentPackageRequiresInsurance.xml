<!--Service Location mantle.shipment.CarrierServices.get#ShipmentPackageRequiresInsurance--><service verb="get" noun="ShipmentPackageRequiresInsurance"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="shipmentPackageSeqId" required="true"/><parameter name="insurancePackageThreshold" type="BigDecimal"><description><![CDATA[If not specified will attempt to look up from ProductStore]]></description></parameter><parameter name="shipment" type="EntityValue"/></in-parameters><out-parameters><parameter name="insuranceRequired" type="Boolean"><description><![CDATA[True if any Product in package has shippingInsuranceReqd = 'Y' or packageTotalCost >= insurancePackageThreshold]]></description></parameter><parameter name="packageTotalCost" type="BigDecimal"/><parameter name="contentDescription"/></out-parameters><actions><if condition="shipment == null"><entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/></if><set field="quantityByProductId" from="[:]"/><entity-find entity-name="mantle.shipment.ShipmentPackageContent" list="packageContentList"><econdition field-name="shipmentId"/><econdition field-name="shipmentPackageSeqId"/></entity-find><iterate list="packageContentList" entry="packageContent"><script><![CDATA[quantityByProductId.put(packageContent.productId, packageContent.quantity)]]></script></iterate><service-call name="mantle.shipment.CarrierServices.get#GeneralPackageRequiresInsurance" out-map="[insuranceRequired:context.insuranceRequired,packageTotalCost:context.packageTotalCost,contentDescription:context.contentDescription]" in-map="[quantityByProductId:quantityByProductId, insurancePackageThreshold:insurancePackageThreshold,                         currencyUomId:shipment.costUomId, productStoreId:shipment.productStoreId, vendorPartyId:shipment.fromPartyId]"/></actions></service>