<!--Service Location mantle.order.OrderServices.get#OrderItemTotal--><service verb="get" noun="OrderItemTotal"><in-parameters><parameter name="orderItem" type="EntityValue"><description><![CDATA[Can be a view-entity with OrderItem and at least
                the fields orderId, orderItemSeqId, unitAmount, quantity, selectedAmount.]]></description></parameter><parameter name="getChildrenTotals" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="combinedAmount" type="BigDecimal"><description><![CDATA[unitAmount (default 0.0) * selectedAmount (default 1.0)]]></description></parameter><parameter name="combinedQuantity" type="BigDecimal"><description><![CDATA[quantity (1.0 if null) * selectedAmount (default 1.0)]]></description></parameter><parameter name="itemTotal" type="BigDecimal"/><parameter name="childrenTotal" type="BigDecimal"/><parameter name="itemPlusChildrenTotal" type="BigDecimal"/><parameter name="childItemCount" type="Integer"/><parameter name="hasPromo" type="Boolean"/><parameter name="promoQuantityUsed" type="BigDecimal"/><parameter name="childOrderItemList" type="List"><parameter name="childOrderItem" type="Map"/></parameter></out-parameters><actions><set field="combinedAmount" from="((orderItem.unitAmount ?: 0.0) * (orderItem.selectedAmount ?: 1.0))"/><set field="combinedQuantity" from="(orderItem.quantity != null ? orderItem.quantity : 1.0) * (orderItem.selectedAmount ?: 1.0)"/><set field="itemTotal" from="(combinedQuantity * (orderItem.unitAmount as BigDecimal ?: 0.0)).setScale(2, BigDecimal.ROUND_HALF_UP)"/><if condition="getChildrenTotals"><entity-find entity-name="mantle.order.OrderItem" list="childOrderItemList"><econdition field-name="orderId" from="orderItem.orderId"/><econdition field-name="parentItemSeqId" from="orderItem.orderItemSeqId"/></entity-find><set field="childrenTotal" from="0.0"/><set field="hasPromo" from="false"/><set field="promoQuantityUsed" from="0.0"/><iterate list="childOrderItemList" entry="childOrderItem"><service-call name="mantle.order.OrderServices.get#OrderItemTotal" out-map="[combinedAmount:getOitResult.combinedAmount,combinedQuantity:getOitResult.combinedQuantity,itemTotal:getOitResult.itemTotal,childrenTotal:getOitResult.childrenTotal,itemPlusChildrenTotal:getOitResult.itemPlusChildrenTotal,childItemCount:getOitResult.childItemCount,hasPromo:getOitResult.hasPromo,promoQuantityUsed:getOitResult.promoQuantityUsed,childOrderItemList:getOitResult.childOrderItemList]" out-map-add-to-existing="false" in-map="[orderItem:childOrderItem, getChildrenTotals:true]"/><set field="childrenTotal" from="childrenTotal + getOitResult.itemPlusChildrenTotal"/><if condition="childOrderItem.isPromo == 'Y' || getOitResult.hasPromo"><set field="hasPromo" from="true"/></if><set field="promoQuantityUsed" from="promoQuantityUsed + (childOrderItem.promoQuantity ?: 0.0) + getOitResult.promoQuantityUsed"/></iterate><set field="itemPlusChildrenTotal" from="itemTotal + childrenTotal"/><set field="childItemCount" from="childOrderItemList.size()"/></if></actions></service>