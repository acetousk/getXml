<!--Service Location coarchy.CoarchyServices.send#InvitationEmails--><service verb="send" noun="InvitationEmails"><in-parameters><parameter name="currentTimestamp" default="ec.user.nowTimestamp" type="Timestamp" required="true"/></in-parameters><out-parameters><parameter name="emailsSentList" type="List"/><parameter name="invitationPartyIdList" type="List"/></out-parameters><actions><set field="emailsSentList" from="[]"/><set field="baseLinkUrl" from="!'production'.equals(System.getProperty('instance_purpose')) ? 'http://localhost:8080' : 'https://coarchy.com'"/><set field="twoDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(2).toInstant().toEpochMilli())" type="Timestamp"/><set field="fourDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(4).toInstant().toEpochMilli())" type="Timestamp"/><set field="sixDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(6).toInstant().toEpochMilli())" type="Timestamp"/><set field="eightDaysAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusDays(8).toInstant().toEpochMilli())" type="Timestamp"/><set field="twoWeeksAgo" from="new Timestamp(ZonedDateTime.ofInstant(Instant.ofEpochMilli(                     (long) currentTimestamp.time), ZoneId.systemDefault()).minusWeeks(2).toInstant().toEpochMilli())" type="Timestamp"/><entity-find entity-name="mantle.marketing.contact.ContactListParty" list="invitationPartyList"><econdition field-name="contactListId" value="CoarchyInvitation"/><econdition field-name="statusId" value="CLPT_IN_USE"/><date-filter/></entity-find><set field="invitationPartyIdList" from="invitationPartyList*.partyId"/><iterate list="invitationPartyList" entry="listParty"><entity-find entity-name="mantle.marketing.contact.ContactListCommStatus" list="commStatusList"><econdition field-name="partyId" from="listParty.partyId"/><econdition field-name="contactListId" from="listParty.contactListId"/><order-by field-name="-lastUpdatedStamp"/></entity-find><set field="invitationList" from="[]"/><iterate list="commStatusList" entry="commStatus"><entity-find-one entity-name="mantle.party.communication.CommunicationEvent" value-field="communicationEvent" auto-field-map="[communicationEventId:commStatus.communicationEventId]"><select-field field-name="emailMessageId,entryDate"/></entity-find-one><entity-find-one entity-name="moqui.basic.email.EmailMessage" value-field="emailMessage" auto-field-map="[emailMessageId:communicationEvent.emailMessageId]"><select-field field-name="emailTemplateId,subject"/></entity-find-one><if condition="['USER_INVITE_RESET_PASSWORD','USER_INVITE'].contains(emailMessage?.emailTemplateId)"><set field="invitationDate" from="communicationEvent.entryDate"/><set field="emailTemplateId" from="emailMessage.emailTemplateId"/><set field="invitationList" from="invitationList + [invitationDate:invitationDate,                             emailTemplateId:emailTemplateId,subject:emailMessage.subject]"/></if></iterate><entity-find entity-name="moqui.security.UserAccount" list="userAccountList" limit="2" for-update="true"><econdition field-name="partyId" from="listParty.partyId"/><econdition field-name="disabled" operator="not-equals" value="Y"/></entity-find><if condition="userAccountList.size() > 1"><log level="warn" message="Multiple user accounts found for party ${listParty.partyId}"/></if><set field="userAccount" from="userAccountList?.getFirst()"/><entity-find entity-name="moqui.security.UserLoginHistory" list="historyList" limit="1"><econdition field-name="userId" from="userAccount.userId"/><order-by field-name="fromDate"/></entity-find><set field="invitation" from="invitationList.max{ it.invitationDate }"/><set field="invitationDate" from="invitation?.invitationDate"/><if condition="invitationList.size() < 3 && userAccount &&                      twoDaysAgo.toInstant() > invitationDate?.toInstant() &&                     (historyList.size() == 0 || (historyList.size() > 0 && historyList.getFirst().fromDate.toInstant() < invitationDate?.toInstant() ))"><if condition="historyList.size() == 0"><then><set field="resetPassword" from="getRandomString(12)"/><set field="passwordNode" from="ec.ecfi.confXmlRoot.first('user-facade').first('password')"/><set field="userAccount.resetPassword" from="ec.ecfi.getSimpleHash(resetPassword, userAccount.passwordSalt, userAccount.passwordHashType, 'Y'.equals(userAccount.passwordBase64))"/><set field="userAccount.requirePasswordChange" from="(passwordNode.attribute('email-require-change') == 'true') ? 'Y' : 'N'"/><entity-update value-field="userAccount"/><set field="emailsSentList" from="emailsSentList + [partyId:listParty.partyId,                                 emailAddress:userAccount.emailAddress,emailTemplateId:'USER_INVITE_RESET_PASSWORD']"/><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                                 contactListId:'CoarchyInvitation',emailTemplateId:'USER_INVITE_RESET_PASSWORD',                                 partyId:listParty.partyId,preferredContactMechId:null,toAddresses:userAccount.emailAddress,                                 bodyParameters:[linkUrl:baseLinkUrl+'/ChangePassword?username='+userAccount.emailAddress+'&oldPassword='+resetPassword,                                 title:invitation?.subject?:'You\'re invited to join Coarchy',baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/></then><else><set field="emailsSentList" from="emailsSentList + [partyId:listParty.partyId,                                 emailAddress:userAccount.emailAddress,emailTemplateId:'USER_INVITE']"/><service-call name="coarchy.CoarchyServices.send#ContactListEmail" in-map="[                                 contactListId:'CoarchyInvitation',emailTemplateId:'USER_INVITE',                                 partyId:listParty.partyId,preferredContactMechId:null,toAddresses:userAccount.emailAddress,                                 bodyParameters:[linkUrl:baseLinkUrl+'/Login?username='+userAccount.username?:userAccount.emailAddress,                                 title:invitation?.subject?:'You\'re invited to join Coarchy',baseLinkUrl:baseLinkUrl]]" out-map="[sentEmail:context.sentEmail,emailTemplateId:context.emailTemplateId]"/></else></if></if></iterate></actions></service>