<!--Service Location mantle.account.PositivePayServices.generate#PositivePayFile--><service verb="generate" noun="PositivePayFile"><in-parameters><parameter name="paymentMethodId" required="true"/><parameter name="paymentInstrumentEnumId" default-value="PiCompanyCheck"/><parameter name="fromDate" type="Timestamp"><description><![CDATA[If null no limit on look back]]></description></parameter><parameter name="thruDate" type="Timestamp" default="ec.user.nowTimestamp"><description><![CDATA[If null look through now]]></description></parameter><parameter name="fileDate" type="Timestamp" default="ec.user.nowTimestamp"><description><![CDATA[The date/time used
                in various fields and set on PaymentMethodFile.fileDate]]></description></parameter><parameter name="formatServiceName"><description><![CDATA[Extension mechanism, generally empty and determined based
                on BankAccount.posPayFormatEnumId]]></description></parameter></in-parameters><out-parameters><parameter name="paymentMethodFileId"/><parameter name="fileText"/><parameter name="paymentCount"/></out-parameters><actions><set field="paymentCount" from="0"/><entity-find-one entity-name="mantle.account.method.PaymentMethod" value-field="paymentMethod"/><entity-find-one entity-name="mantle.account.method.BankAccount" value-field="bankAccount"/><if condition="!bankAccount"><return error="true" message="Payment method ${paymentMethodId} is not a bank account"/></if><if condition="!bankAccount.posPayFormatEnumId"><return error="true" message="No Pos. Pay File Format set for bank account ${paymentMethodId}"/></if><entity-find entity-name="mantle.account.payment.Payment" list="originalPaymentList" for-update="true"><econdition field-name="fromPartyId" from="paymentMethod.ownerPartyId"/><econdition field-name="statusId" value="PmntDelivered"/><econdition field-name="paymentMethodId"/><econdition field-name="paymentInstrumentEnumId"/><econdition field-name="paymentMethodFileId" from="null"/><econdition field-name="effectiveDate" operator="greater-equals" from="fromDate" ignore-if-empty="true"/><econdition field-name="effectiveDate" operator="less-equals" from="thruDate"/><order-by field-name="paymentRefNum"/></entity-find><if condition="!formatServiceName"><set field="supportedFormats" from="['PmftBankOfAmericaAr', 'PmftCityBankCnb', 'PmftSunTrustCpr',                         'PmftWachoviaAr', 'PmftWellsFargoArp', 'PmftZionsBankCsv']"/><if condition="bankAccount.posPayFormatEnumId in supportedFormats"><then><set field="formatServiceName" value="mantle.account.PositivePayServices.generate#${bankAccount.posPayFormatEnumId}"/></then><else><return error="true" message="Positive Pay File Format ${bankAccount.posPayFormatEnumId} not supported and no format service specified"/></else></if></if><set field="debitAmountTotal" from="0"/><set field="debitAmountTotalWithCancels" from="0"/><set field="checkNumberSum" from="0"/><set field="paymentList" from="[]"/><iterate list="originalPaymentList" entry="payment"><if condition="!payment.paymentRefNum"><message><![CDATA[Payment ${payment.paymentId} has no check number (Reference Number), skipping]]></message><continue/></if><if condition="payment.statusId != 'PmntVoid'"><set field="debitAmountTotalWithCancels" from="debitAmountTotalWithCancels + payment.amount"/><if condition="payment.statusId != 'PmntCancelled'"><set field="debitAmountTotal" from="debitAmountTotal + payment.amount"/></if></if><set field="checkNumberLong" from="payment.paymentRefNum as Long"/><set field="checkNumberSum" from="checkNumberSum + checkNumberLong"/><script><![CDATA[paymentList.add(payment)]]></script></iterate><if condition="!paymentList"><return type="warning" message="No pending payments found for payment method ${paymentMethodId}"/></if><set field="entryCount" from="paymentList.size()"/><set field="paymentCount" from="paymentList.size()"/><set field="fileTypeEnumId" from="bankAccount.posPayFormatEnumId"/><service-call name="create#mantle.account.method.PaymentMethodFile" in-map="context" out-map="[paymentMethodFileId:context.paymentMethodFileId,paymentMethodId:context.paymentMethodId,fileTypeEnumId:context.fileTypeEnumId,fileDate:context.fileDate,entryCount:context.entryCount,debitAmountTotal:context.debitAmountTotal,creditAmountTotal:context.creditAmountTotal,fileText:context.fileText,isCancelled:context.isCancelled,lastUpdatedStamp:context.lastUpdatedStamp]"/><service-call name="${formatServiceName}" in-map="context" out-map="context"/><check-errors/><service-call name="mantle.account.PaymentMethodServices.update#PaymentMethodFileComplete" in-map="context"/></actions></service>