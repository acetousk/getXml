<!--Service Location mantle.shipment.ShipmentServices.pack#ShipmentProductScan--><service verb="pack" noun="ShipmentProductScan"><in-parameters><parameter name="shipmentId" required="true"/><parameter name="scanInput" required="true"/><parameter name="shipmentPackageSeqId"/><parameter name="quantity" type="BigDecimal" required="true"/><parameter name="packDate" type="Timestamp" default="ec.user.nowTimestamp"/></in-parameters><out-parameters/><actions><service-call name="mantle.shipment.ShipmentServices.get#ShipmentProductByScan" in-map="context" out-map="[productId:context.productId,assetId:context.assetId,shipmentItemList:context.shipmentItemList]"/><if condition="productId"><service-call name="mantle.shipment.ShipmentServices.pack#ShipmentProduct" in-map="context" out-map="[quantityRemaining:packOut.quantityRemaining]"/><if condition="packOut.quantityRemaining"><then><set field="productId" from="null"/><set field="originalQuantity" from="quantity"/><set field="quantity" from="packOut.quantityRemaining"/></then><else><return/></else></if></if><if condition="!productId"><set field="pickAssemblyIdList" from="[]"/><iterate list="productIdList" entry="paProductId"><entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true"><field-map field-name="productId" from="paProductId"/></entity-find-one><if condition="product.productTypeEnumId == 'PtPickAssembly'"><script><![CDATA[pickAssemblyIdList.add(paProductId)]]></script></if></iterate><if condition="pickAssemblyIdList"><entity-find entity-name="mantle.product.ProductAssoc" list="bomAssocList"><date-filter/><econdition field-name="productId" operator="in" from="pickAssemblyIdList"/><econdition field-name="productAssocTypeEnumId" value="PatMfgBom"/></entity-find><set field="componentProductIds" from="new HashSet(bomAssocList*.toProductId)"/><if condition="componentProductIds.contains(scanInput)"><set field="productId" from="scanInput"/></if><if condition="!productId"><entity-find entity-name="mantle.product.Product" list="pseudoProductList"><econdition field-name="productId" operator="in" from="componentProductIds"/><econdition field-name="pseudoId" from="scanInput"/></entity-find><if condition="pseudoProductList"><set field="productId" from="pseudoProductList[0].productId"/></if></if><if condition="!productId"><entity-find-one entity-name="mantle.product.asset.Asset" value-field="asset"><field-map field-name="assetId" from="scanInput"/></entity-find-one><if condition="asset != null && asset.productId in componentProductIds"><set field="productId" from="asset.productId"/><set field="assetId" from="asset.assetId"/></if></if><if condition="!productId"><entity-find entity-name="mantle.product.asset.Asset" list="assetSnList"><econdition field-name="serialNumber" from="scanInput"/><econdition field-name="productId" operator="in" from="componentProductIds"/></entity-find><if condition="assetSnList"><if condition="assetSnList.size() > 1"><return type="warning" message="Found more than one product on shipment ${shipmentId} with Serial Number ${scanInput}, scan internal product or asset ID or manually select the product to pack"/></if><set field="productId" from="assetSnList[0].productId"/><set field="assetId" from="assetSnList[0].assetId"/></if></if><if condition="!productId"><entity-find entity-name="mantle.product.ProductIdentification" list="prodIdentList"><econdition field-name="idValue" from="scanInput"/><econdition field-name="productId" operator="in" from="componentProductIds"/></entity-find><if condition="prodIdentList"><if condition="prodIdentList.size() > 1"><return type="warning" message="Found more than one product on shipment ${shipmentId} with other ID ${scanInput}, scan internal product or asset ID or manually select the product to pack"/></if><set field="productId" from="prodIdentList[0].productId"/></if></if><if condition="productId"><service-call name="mantle.shipment.ShipmentServices.pack#ShipmentAssemblyComponent" in-map="context"/><return/></if></if></if><if condition="originalQuantity == null"><return type="warning" message="Could not find product on shipment ${shipmentId} with scanned ID ${scanInput}"/></if></actions></service>