<!--Service Location mantle.ledger.PaymentAutoPostServices.post#Payment--><service verb="post" noun="Payment"><in-parameters><parameter name="paymentId" required="true" entity-name="mantle.account.payment.Payment" field-name="paymentId"/></in-parameters><out-parameters><parameter name="acctgTransId"/></out-parameters><actions><entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="existingTransList"><econdition field-name="paymentId"/><econdition field-name="acctgTransTypeEnumId" operator="in" from="['AttPayment', 'AttDisbursement', 'AttReceipt', 'AttIncomingPayment', 'AttOutgoingPayment']"/><econdition field-name="reversedByAcctgTransId" from="null"/><econdition field-name="reverseOfAcctgTransId" from="null"/></entity-find><if condition="existingTransList"><return message="Payment ${paymentId} has already been posted in accounting transaction ${existingTransList*.acctgTransId}"/></if><entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment" for-update="true"/><if condition="payment == null"><return error="true" message="Could not find Payment with ID ${paymentId}"/></if><service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentPartyAcctgPreferences" in-map="[payment:payment]" out-map="[fromPartyAcctgPreference:context.fromPartyAcctgPreference,toPartyAcctgPreference:context.toPartyAcctgPreference]"/><if condition="!fromPartyAcctgPreference && !toPartyAcctgPreference"><log message="Not posting payment [${paymentId}], could not find PartyAcctgPreference for From Party [${payment.fromPartyId}], To Party [${payment.toPartyId}], or Override Party [${payment.overrideOrgPartyId}]"/><set field="payment.acctgTransResultEnumId" value="AtrNoAcctgPreference"/><entity-update value-field="payment"/><return/></if><entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList"><econdition field-name="paymentId"/><econdition field-name="amountApplied" operator="not-equals" from="0.0"/></entity-find><set field="isFullSinglePa" from="paymentApplicationList.size() == 1 &&                     paymentApplicationList[0].amountApplied == payment.amount &&                     paymentApplicationList[0].appliedDate <= payment.effectiveDate"/><if condition="fromPartyAcctgPreference"><service-call name="mantle.ledger.LedgerServices.create#AcctgTrans" out-map="[acctgTransId:context.acctgTransId]" in-map="[acctgTransTypeEnumId:'AttOutgoingPayment', organizationPartyId:payment.fromPartyId,                             otherPartyId:payment.toPartyId, amountUomId:payment.amountUomId, paymentId:payment.paymentId,                             invoiceId:(isFullSinglePa ? paymentApplicationList[0].invoiceId : null),                             paymentApplicationId:(isFullSinglePa ? paymentApplicationList[0].paymentApplicationId : null),                             transactionDate:payment.effectiveDate]"/><entity-find-one entity-name="mantle.ledger.transaction.AcctgTrans" value-field="fromAcctgTrans"/></if><if condition="toPartyAcctgPreference"><service-call name="mantle.ledger.LedgerServices.create#AcctgTrans" out-map="[acctgTransId:context.acctgTransId]" in-map="[acctgTransTypeEnumId:'AttIncomingPayment', organizationPartyId:payment.toPartyId,                             otherPartyId:payment.fromPartyId, amountUomId:payment.amountUomId, paymentId:payment.paymentId,                             invoiceId:(isFullSinglePa ? paymentApplicationList[0].invoiceId : null),                             paymentApplicationId:(isFullSinglePa ? paymentApplicationList[0].paymentApplicationId : null),                             transactionDate:payment.effectiveDate]"/><entity-find-one entity-name="mantle.ledger.transaction.AcctgTrans" value-field="toAcctgTrans"/></if><set field="useErrorJournal" from="false"/><if condition="fromPartyAcctgPreference != null"><if condition="isFullSinglePa"><then><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" in-map="[paymentTypeEnumId:payment.paymentTypeEnumId, partyAcctgPreference:fromPartyAcctgPreference,                                 acctgTrans:fromAcctgTrans, amount:payment.amount,                                 organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,                                 isApplied:'Y', isPayable:'Y', debitCreditFlag:'D', useErrorJournal:useErrorJournal]" out-map="[useErrorJournal:context.useErrorJournal]"/></then><else><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" in-map="[paymentTypeEnumId:payment.paymentTypeEnumId, partyAcctgPreference:fromPartyAcctgPreference,                                 acctgTrans:fromAcctgTrans, amount:payment.amount,                                 organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,                                 isApplied:'N', isPayable:'Y', debitCreditFlag:'D', useErrorJournal:useErrorJournal]" out-map="[useErrorJournal:context.useErrorJournal]"/><iterate list="paymentApplicationList" entry="paymentApplication"><service-call name="mantle.ledger.PaymentAutoPostServices.post#PaymentApplication" in-map="[paymentApplicationId:paymentApplication.paymentApplicationId]"/></iterate></else></if></if><if condition="toPartyAcctgPreference != null"><if condition="isFullSinglePa"><then><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" in-map="[paymentTypeEnumId:payment.paymentTypeEnumId, partyAcctgPreference:toPartyAcctgPreference,                                 acctgTrans:toAcctgTrans, amount:payment.amount,                                 organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,                                 isApplied:'Y', isPayable:'N', debitCreditFlag:'C', useErrorJournal:useErrorJournal]" out-map="[useErrorJournal:context.useErrorJournal]"/></then><else><service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry" in-map="[paymentTypeEnumId:payment.paymentTypeEnumId, partyAcctgPreference:toPartyAcctgPreference,                                 acctgTrans:toAcctgTrans, amount:payment.amount,                                 organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,                                 isApplied:'N', isPayable:'N', debitCreditFlag:'C', useErrorJournal:useErrorJournal]" out-map="[useErrorJournal:context.useErrorJournal]"/><iterate list="paymentApplicationList" entry="paymentApplication"><service-call name="mantle.ledger.PaymentAutoPostServices.post#PaymentApplication" in-map="[paymentApplicationId:paymentApplication.paymentApplicationId]"/></iterate></else></if></if><if condition="payment.paymentInstrumentEnumId == 'PiCreditCard'"><entity-find-related-one value-field="payment" relationship-name="mantle.account.method.CreditCard" to-value-field="creditCard"/></if><if condition="payment.paymentInstrumentEnumId == 'PiFinancialAccount'"><entity-find-related-one value-field="payment" relationship-name="mantle.account.financial.FinancialAccount" to-value-field="financialAccount"/></if><if condition="fromPartyAcctgPreference != null"><service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentMethodGlAccount" in-map="[paymentId:payment.paymentId,                             organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,                             finAccountTypeId:financialAccount?.finAccountTypeId,                             creditCardTypeEnumId:creditCard?.creditCardTypeEnumId]" out-map="[glAccountId:methodGlAccountOut.glAccountId,glAccountTypeEnumId:methodGlAccountOut.glAccountTypeEnumId]"/><set field="methodGlAccountId" from="methodGlAccountOut?.glAccountId"/><set field="methodGlAccountTypeEnumId" from="methodGlAccountOut?.glAccountTypeEnumId"/><if condition="!methodGlAccountId"><set field="useErrorJournal" from="true"/></if><entity-make-value entity-name="mantle.ledger.transaction.AcctgTransEntry" value-field="acctgTransEntry" map="[acctgTransId:fromAcctgTrans.acctgTransId, debitCreditFlag:'C',                             glAccountTypeEnumId:methodGlAccountTypeEnumId, glAccountId:methodGlAccountId,                             amount:payment.amount, reconcileStatusId:'AterNot', isSummary:'N']"/><entity-sequenced-id-secondary value-field="acctgTransEntry"/><entity-create value-field="acctgTransEntry"/></if><if condition="toPartyAcctgPreference != null"><service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentMethodGlAccount" in-map="[paymentId:payment.paymentId,                             organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,                             finAccountTypeId:financialAccount?.finAccountTypeId,                             creditCardTypeEnumId:creditCard?.creditCardTypeEnumId]" out-map="[glAccountId:methodGlAccountOut.glAccountId,glAccountTypeEnumId:methodGlAccountOut.glAccountTypeEnumId]"/><set field="methodGlAccountId" from="methodGlAccountOut?.glAccountId"/><set field="methodGlAccountTypeEnumId" from="methodGlAccountOut?.glAccountTypeEnumId"/><if condition="!methodGlAccountId"><set field="useErrorJournal" from="true"/></if><entity-make-value entity-name="mantle.ledger.transaction.AcctgTransEntry" value-field="acctgTransEntry" map="[acctgTransId:toAcctgTrans.acctgTransId, debitCreditFlag:'D',                             glAccountTypeEnumId:methodGlAccountTypeEnumId, glAccountId:methodGlAccountId,                             amount:payment.amount, reconcileStatusId:'AterNot', isSummary:'N']"/><entity-sequenced-id-secondary value-field="acctgTransEntry"/><entity-create value-field="acctgTransEntry"/></if><if condition="useErrorJournal"><then><if condition="fromPartyAcctgPreference?.errorGlJournalId"><service-call name="update#mantle.ledger.transaction.AcctgTrans" in-map="[acctgTransId:fromAcctgTrans.acctgTransId, glJournalId:fromPartyAcctgPreference.errorGlJournalId]"/></if><if condition="toPartyAcctgPreference?.errorGlJournalId"><service-call name="update#mantle.ledger.transaction.AcctgTrans" in-map="[acctgTransId:toAcctgTrans.acctgTransId, glJournalId:toPartyAcctgPreference.errorGlJournalId]"/></if></then><else><if condition="fromPartyAcctgPreference != null"><service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:fromAcctgTrans.acctgTransId]"/></if><if condition="toPartyAcctgPreference != null"><service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:toAcctgTrans.acctgTransId]"/></if></else></if><set field="payment.acctgTransResultEnumId" value="AtrSuccess"/><entity-update value-field="payment"/></actions></service>