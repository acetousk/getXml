<!--Service Location mantle.account.FinancialAccountServices.transfer#FinancialAccount--><service verb="transfer" noun="FinancialAccount"><in-parameters><parameter name="fromFinAccountId" required="true"/><parameter name="toFinAccountId" required="true"/><parameter name="amount" type="BigDecimal" required="true"/><parameter name="transactionDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="entryDate" type="Timestamp" default="ec.user.nowTimestamp"/><parameter name="comments"/><parameter name="toComments" default="comments"/></in-parameters><out-parameters><parameter name="withdrawFinAccountTransId"/><parameter name="depositFinAccountTransId"/></out-parameters><actions><if condition="amount == 0.0"><return message="Not doing transfer, amount is zero"/></if><entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="fromFinAccount" for-update="true"><field-map field-name="finAccountId" from="fromFinAccountId"/></entity-find-one><if condition="fromFinAccount == null"><return error="true" message="Could not find transfer from account ${fromFinAccountId}"/></if><entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="toFinAccount" for-update="true"><field-map field-name="finAccountId" from="toFinAccountId"/></entity-find-one><if condition="toFinAccount == null"><return error="true" message="Could not find transfer to account ${toFinAccountId}"/></if><if condition="fromFinAccount.organizationPartyId != toFinAccount.organizationPartyId"><return error="true" message="Organization parties must match between the two accounts to do a transfer"/></if><service-call name="mantle.account.FinancialAccountServices.withdraw#FinancialAccount" out-map="[amount:withdrawOut.amount,preBalance:withdrawOut.preBalance,postBalance:withdrawOut.postBalance,finAccountTransId:withdrawOut.finAccountTransId,responseCode:withdrawOut.responseCode,responseMessage:withdrawOut.responseMessage]" in-map="[finAccountId:fromFinAccountId, reasonEnumId:'FatrTransfer', amount:amount,                         transactionDate:transactionDate, entryDate:entryDate, comments:comments]"/><if condition="withdrawOut.responseCode != 'success'"><return error="true" message="${withdrawOut.responseMessage}"/></if><set field="withdrawFinAccountTransId" from="withdrawOut.finAccountTransId"/><service-call name="mantle.account.FinancialAccountServices.deposit#FinancialAccount" out-map="[amount:depositOut.amount,preBalance:depositOut.preBalance,postBalance:depositOut.postBalance,finAccountTransId:depositOut.finAccountTransId]" in-map="[finAccountId:toFinAccountId, reasonEnumId:'FatrTransfer', amount:amount, transactionDate:transactionDate,                         entryDate:entryDate, comments:toComments, otherFinAccountTransId:withdrawFinAccountTransId]"/><set field="depositFinAccountTransId" from="depositOut.finAccountTransId"/><service-call name="update#mantle.account.financial.FinancialAccountTrans" in-map="[finAccountTransId:withdrawFinAccountTransId, otherFinAccountTransId:depositFinAccountTransId]"/></actions></service>