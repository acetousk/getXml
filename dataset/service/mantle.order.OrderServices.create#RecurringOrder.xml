<!--Service Location mantle.order.OrderServices.create#RecurringOrder--><service verb="create" noun="RecurringOrder"><in-parameters><parameter name="baseOrderId" required="true"/></in-parameters><out-parameters><parameter name="orderId"/></out-parameters><actions><entity-find-one entity-name="mantle.order.OrderHeader" value-field="baseOrderHeader" for-update="true"><field-map field-name="orderId" from="baseOrderId"/></entity-find-one><if condition="!baseOrderHeader?.recurCronExpression"><return type="danger" message="Order ${baseOrderId} is not a recurring order (has no recur cron expression)"/></if><if condition="baseOrderHeader?.statusId != 'OrderApproved'"><return type="danger" message="Order ${baseOrderId} is not in the Approved status"/></if><set field="shouldRun" from="org.moqui.impl.service.ScheduledJobRunner.isLastRunBeforeLastSchedule(                     baseOrderHeader.recurCronExpression, baseOrderHeader.lastOrderedDate, 'Order ' + baseOrderHeader.orderId, null)"/><if condition="!shouldRun"><return type="warning" message="Order ${baseOrderHeader.orderId} is not yet scheduled to reorder since last order time ${baseOrderHeader.lastOrderedDate}"/></if><service-call name="mantle.order.OrderServices.clone#Order" out-map="[orderId:cloneOut.orderId]" in-map="[baseOrderId:baseOrderId]"/><set field="orderId" from="cloneOut.orderId"/><service-call name="mantle.order.OrderServices.place#Order" in-map="[orderId:orderId, requireInventory:false]"/><if condition="baseOrderHeader.recurAutoInvoice == 'Y'"><entity-find entity-name="mantle.order.OrderPart" list="orderPartList"><econdition field-name="orderId"/><order-by field-name="orderPartSeqId"/></entity-find><iterate list="orderPartList" entry="orderPart"><if condition="orderPart?.statusId == 'OrderApproved'"><service-call name="mantle.account.InvoiceServices.create#EntireOrderPartInvoice" in-map="[orderId:orderId, orderPartSeqId:orderPart.orderPartSeqId]"/></if></iterate></if><set field="baseOrderHeader.lastOrderedDate" from="ec.user.nowTimestamp"/><entity-update value-field="baseOrderHeader"/></actions></service>