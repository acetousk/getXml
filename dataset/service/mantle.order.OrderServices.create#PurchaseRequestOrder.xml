<!--Service Location mantle.order.OrderServices.create#PurchaseRequestOrder--><service verb="create" noun="PurchaseRequestOrder"><in-parameters><parameter name="requestId" required="true"/><parameter name="customerPartyId" required="true"><description><![CDATA[The customer for the PO. Should be an Internal Org.]]></description></parameter><parameter name="paymentInstrumentEnumId" default-value="PiCompanyCheck"/><parameter name="paymentMethodId"/><parameter name="shipmentMethodEnumId" default-value="ShMthPickUp"/><parameter name="placeAndApproveOrders" type="Boolean" default="false"/></in-parameters><out-parameters><parameter name="orderId" required="true"/><parameter name="orderPartSeqId" required="true"/></out-parameters><actions><entity-find-one entity-name="mantle.request.Request" value-field="request"/><if condition="!request.facilityId"><return error="true" message="Request ${requestId} has no Facility set."/></if><entity-find entity-name="mantle.facility.FacilityContactMech" list="postalList" cache="true"><date-filter/><econdition field-name="facilityId" from="request.facilityId"/><econdition field-name="contactMechPurposeId" operator="in" value="PostalShippingDest,PostalGeneral"/><order-by field-name="-contactMechPurposeId,-fromDate"/></entity-find><set field="shippingPostalContactMechId" from="postalList?.first?.contactMechId"/><entity-find entity-name="mantle.facility.FacilityContactMech" list="phoneList" cache="true"><date-filter/><econdition field-name="facilityId" from="request.facilityId"/><econdition field-name="contactMechPurposeId" operator="in" value="PhoneShippingDest,PhonePrimary"/><order-by field-name="-contactMechPurposeId,-fromDate"/></entity-find><set field="shippingTelecomContactMechId" from="phoneList?.first?.contactMechId"/><entity-find entity-name="mantle.request.RequestItem" list="allRequestItemList"><econdition field-name="requestId"/></entity-find><set field="requestItemListBySupplier" from="[:]"/><iterate list="allRequestItemList" entry="requestItem"><if condition="!requestItem.supplierPartyId"><return error="true" message="No Supplier set on item ${requestItem.requestItemSeqId} for Request ${requestId}"/></if><script><![CDATA[addToListInMap(requestItem.supplierPartyId, requestItem, requestItemListBySupplier)]]></script></iterate><iterate list="requestItemListBySupplier" entry="requestItemList" key="supplierPartyId"><service-call name="mantle.order.OrderServices.create#Order" out-map="[orderId:orderOut.orderId,orderPartSeqId:orderOut.orderPartSeqId]" in-map="[vendorPartyId:supplierPartyId, customerPartyId:customerPartyId,                             currencyUomId:(request.currencyUomId ?: 'USD'), facilityId:request.facilityId]"/><set field="earliestRequiredByDate" from="null"/><iterate list="requestItemList" entry="requestItem"><service-call name="mantle.order.OrderServices.add#OrderProductQuantity" in-map="[orderId:orderOut.orderId, orderPartSeqId:orderOut.orderPartSeqId,                                 productId:requestItem.productId, quantity:requestItem.quantity,                                 itemTypeEnumId:'ItemProduct', requiredByDate:requestItem.requiredByDate]" out-map="[orderId:addOut.orderId,orderPartSeqId:addOut.orderPartSeqId,orderItemSeqId:addOut.orderItemSeqId]"/><service-call name="create#mantle.request.RequestItemOrder" in-map="[requestId:requestItem.requestId, requestItemSeqId:requestItem.requestItemSeqId,                                 orderId:orderOut.orderId, orderItemSeqId:addOut.orderItemSeqId, quantity:requestItem.quantity]"/><if condition="!earliestRequiredByDate || (requestItem.requiredByDate && requestItem.requiredByDate < earliestRequiredByDate)"><set field="earliestRequiredByDate" from="requestItem.requiredByDate"/></if></iterate><if condition="earliestRequiredByDate"><service-call name="update#mantle.order.OrderPart" in-map="[orderId:orderOut.orderId,                             orderPartSeqId:orderOut.orderPartSeqId, shipBeforeDate:earliestRequiredByDate]"/></if><service-call name="mantle.order.OrderServices.set#OrderBillingShippingInfo" in-map="[orderId:orderOut.orderId, orderPartSeqId:orderOut.orderPartSeqId,                             paymentInstrumentEnumId:paymentInstrumentEnumId, paymentMethodId:paymentMethodId,                             shippingPostalContactMechId:shippingPostalContactMechId,                             shippingTelecomContactMechId:shippingTelecomContactMechId,                             shipmentMethodEnumId:shipmentMethodEnumId]"/><if condition="placeAndApproveOrders"><service-call name="mantle.order.OrderServices.place#Order" in-map="[orderId:orderOut.orderId, orderPartSeqId:orderOut.orderPartSeqId]"/><service-call name="mantle.order.OrderServices.approve#Order" in-map="[orderId:orderOut.orderId, orderPartSeqId:orderOut.orderPartSeqId]"/></if></iterate><service-call name="update#mantle.request.Request" in-map="[requestId:requestId, statusId:'ReqInProgress']"/></actions></service>